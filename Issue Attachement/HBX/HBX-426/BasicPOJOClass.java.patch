Index: tools/src/java/org/hibernate/tool/hbm2x/pojo/BasicPOJOClass.java
===================================================================
RCS file: /cvsroot/hibernate/HibernateExt/tools/src/java/org/hibernate/tool/hbm2x/pojo/BasicPOJOClass.java,v
retrieving revision 1.8
diff -u -r1.8 BasicPOJOClass.java
--- tools/src/java/org/hibernate/tool/hbm2x/pojo/BasicPOJOClass.java	14 Oct 2005 11:32:01 -0000	1.8
+++ tools/src/java/org/hibernate/tool/hbm2x/pojo/BasicPOJOClass.java	15 Oct 2005 23:01:08 -0000
@@ -187,7 +187,7 @@
 				buf.append(
 						internalgenerateEquals(
 								javaTypeName, thisName + "." + getGetterSignature( property ) + "()",
-								otherName + "." + getGetterSignature( property ) + "()", getEqualsMethod(javaTypeName)
+								otherName + "." + getGetterSignature( property ) + "()"
 						)
 				);
 			}
@@ -216,22 +216,22 @@
 		return useInEquals;
 	}
 
-	private String getEqualsMethod(String javaTypeName) {
+	private String getEqualsMethod(String javaTypeName, String rh) {
 		// Fix for HBX-400
 		if ("java.math.BigDecimal".equals(javaTypeName)) {
-			return "compareTo";
+			return "compareTo(" + rh + ")==0";
 		} else {
-			return "equals";
+			return "equals(" + rh + ")";
 		}
 	} 
 
 
-	private String internalgenerateEquals(String typeName, String lh, String rh, String equalsMethod) {
+	private String internalgenerateEquals(String typeName, String lh, String rh) {
 		if ( c2j.isPrimitive( typeName ) ) {
 			return "(" + lh + "==" + rh + ")";
 		}
 		else {
-			return "( (" + lh + "==" + rh + ") || ( " + lh + "!=null && " + rh + "!=null && " + lh + "." + equalsMethod + "(" + rh + ") ) )";
+			return "( (" + lh + "==" + rh + ") || ( " + lh + "!=null && " + rh + "!=null && " + lh + "." + getEqualsMethod(typeName, rh) + ") )";
 
 		}
 	}
