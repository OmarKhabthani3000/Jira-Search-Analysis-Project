Index: Cfg2JavaTool.java
===================================================================
RCS file: /cvsroot/hibernate/HibernateExt/tools/src/java/org/hibernate/tool/hbm2x/Cfg2JavaTool.java,v
retrieving revision 1.22
diff -u -r1.22 Cfg2JavaTool.java
--- Cfg2JavaTool.java	12 May 2005 22:15:13 -0000	1.22
+++ Cfg2JavaTool.java	15 May 2005 17:44:47 -0000
@@ -185,23 +185,36 @@
 	}
 	
 	/**
-	 * Convert string into something that can be rendered nicely into a javadoc
-	 * comment.
-	 * Prefix each line with a star ('*').
-	 * @param string
+	 * Output supplied string as JavaDoc.  Prefex each line with a "*"
+	 * add the indent spaces for all lines except the first line. 
+	 * 
+	 * @param string to output
+	 * @param int    number of spaces to indent after the first line.
+	 * 
+	 * @todo add StringTokenizer to delimit string on a group of delimiters.
 	 */
 	public String toJavaDoc(String string, int indent) {
 	    StringBuffer result = new StringBuffer();
-	    
+		int baseIndent;
 	    if(string!=null) {
-	        String[] lines = StringUtils.split(string, "\n\r\f");
+			Object[] lines = StringUtils.split(string, "\n\r\f");
+
+			if (lines.length > 0)
+				baseIndent = ((String) lines[0]).length() - StringUtils.stripStart((String) lines[0], null).length();
+			else
+				baseIndent = 0;
+	    
 	        for (int i = 0; i < lines.length; i++) {
-	            String docline = " * " + lines[i];
+	            String docline = StringUtils.stripStart((String) lines[i], null, baseIndent);
 	            if(i<lines.length-1) docline += "\n";
+				docline = "* " + docline;
+				if (i == 0)
+					result.append(docline);
+				else
 	            result.append(StringUtils.leftPad(docline, docline.length() + indent));
 	        }
+			
 	    }
-	    
 	    return result.toString();
 	}
 
