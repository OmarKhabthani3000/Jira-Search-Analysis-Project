<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering 
  SYSTEM "http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd" >

<hibernate-reverse-engineering>

  <schema-selection match-schema="GESTIONE_PROTOCOLLO_TEST" />

  <type-mapping>
    <!-- jdbc-type is name fom java.sql.Types 
      <sql-type jdbc-type="VARCHAR" length='20' hibernate-type="SomeUserType" />
      
      <sql-type jdbc-type="VARCHAR" length='1' hibernate-type="yes_no" />
    -->
    <!-- length, scale and precision can be used to specify the mapping precisly 
      <sql-type jdbc-type="NUMERIC" precision='1' hibernate-type="boolean" />
    -->
    <!-- the type-mappings are ordered. This mapping will be consulted last, 
      thus overriden by the previous one if precision=1 for the column -->
    <sql-type jdbc-type="NUMERIC" hibernate-type="long" />
    <sql-type jdbc-type="DECIMAL" hibernate-type="java.lang.Long" />
  </type-mapping>

  <!-- BIN$ is recycle bin tables in Oracle -->
  <!-- 
    <table-filter match-name="BIN$.*" exclude="true" />
  -->

  <!-- Exclude DoNotWantIt from all catalogs/schemas -->
  <table-filter match-name="UTENTE_PROFILO" />
  <table-filter match-name="UFFICIO_PROTOCOLLO" />
  <table-filter match-name="UFFICIO_ESTERO" />
  <table-filter match-name="UFFICIO_ESTERO_PROTOCOLLO" />
  <table-filter match-name="RISERVATEZZA" />
  <table-filter match-name="PROTOCOLLO_HIS" />
  <table-filter match-name="LEGAME_PROTOCOLLO_HIS" />
  <table-filter match-name="UFFICIO_PROTOCOLLO_HIS" />
  <table-filter match-name="UFFICIO_ESTERO_PROTOCOLLO_HIS" />
  <table-filter match-name="LEGAME_PROTOCOLLO" />
  <table-filter match-name="UFFICIO" />
  <table-filter match-name="LEGAME" />
  <table-filter match-name="UTENTE" />
  <table-filter match-name="ARCHIVIO" />
  <table-filter match-name="MITTENTE" />
  <table-filter match-name="CATEGORIA" />
  <table-filter match-name="DOCUMENTO" />
  <table-filter match-name="PROTOCOLLO" />
  <table-filter match-name="PROFILO" />
  



  <!-- exclude all tables from the schema SCHEMA in catalog BAD. -->
  <!-- 
    <table-filter match-catalog="BAD" match-schema="SCHEMA"
    match-name=".*" exclude="true" />
  -->

</hibernate-reverse-engineering>
