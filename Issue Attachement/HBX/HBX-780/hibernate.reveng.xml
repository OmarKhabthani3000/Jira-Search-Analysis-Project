<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering 
  SYSTEM "http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd" >

<hibernate-reverse-engineering>
	<schema-selection match-catalog="TITAN" match-schema="TITAN" />

	<type-mapping>
		<!-- jdbc-type is name fom java.sql.Types -->

		<!-- the type-mappings are ordered. This mapping will be consulted last, 
			thus overriden by the previous one if precision=1 for the column -->
		<sql-type jdbc-type="DECIMAL" precision="19" hibernate-type="long" />
		<sql-type jdbc-type="DECIMAL" precision="20" hibernate-type="long" />

		<!-- length, scale and precision can be used to specify the mapping precisly -->
		<sql-type jdbc-type="NUMERIC" precision="1"
			hibernate-type="boolean" />
		<sql-type jdbc-type="TIMESTAMP" hibernate-type="java.util.Date" />
	</type-mapping>

	<!-- Exclude DoNotWantIt from all catalogs/schemas -->
	<!-- BIN$ is recycle bin tables in Oracle -->
	<table-filter match-name="BIN$.*" exclude="true" />

	<!-- include tables -->
	<table-filter match-name="T_SA_*" exclude="false"/>

	<!-- table allows you to override/define how reverse engineering 
		are done for a specific table -->
	<table name="T_SA_USER">
		<primary-key>
			<!-- setting up a specific id generator for a table -->
			<generator class="native">
				<param name="sequence">S_SA_USER</param>
			</generator>
			<key-column name="USER_ID" />
		</primary-key>
	</table>
	
</hibernate-reverse-engineering>