<project name="webmodulebuilder"  default="hbm2java"  basedir=".">

          <property name="src.path"  location="src"/>
          <property name="domain.path" location="alllibforhibernatetools/domainlib"/>
          <property name="targetdirForTools" value="alllibforhibernatetools/domainlib"/>
          <property name="targetdirForApp"   value="WEB-INF/classes"/>
          
          <property name="librarydir" value="WEB-INF/lib"/>
          
          <property name="tempdir" value="dist"/>

	  <path id="librariesForCompileAppjavafiles">
	       <fileset dir="${librarydir}">
	            <include name="*.jar"/>
	       </fileset>
	       
	       <fileset dir="c:\j2sdk1.4.2\jre\lib"> 
		    <include name="**/*.jar" /> 
	       </fileset>
			
	       <fileset dir="c:\j2sdk1.4.2\lib"> 
		    <include name="**/*.jar" /> 
	       </fileset>
	  </path>
	  
          <target name="clean">
             <delete dir="${targetdirForTools}"/>
             <mkdir dir="${targetdirForTools}"/>
             
             <delete dir="${targetdirForApp}"/>
             <mkdir dir="${targetdirForApp}"/>
	  </target>
	  
	  <target name="copy-resources">
             <copy todir="${targetdirForApp}">
                <fileset dir="${src.path}">
                   <exclude name="**/*.java"/>
                </fileset>
             </copy>
          </target>
	  
	  <target name="compile" depends="clean, copy-resources">
	        <mkdir dir="${tempdir}"/>
                <javac srcdir="${src.path}"
                       destdir="${tempdir}"
                       classpathref="librariesForCompileAppjavafiles"/>
                       
                <jar destfile="${targetdirForTools}/app.jar" basedir="${tempdir}"/> 
                
                <copy todir="${targetdirForApp}">
                   <fileset dir="${tempdir}">
                      <include name="**/*.class"/>
                   </fileset>
                </copy>
                <delete dir="${tempdir}"/>
                
          </target>
          
          
          <path id="classforhibernatetools.path"> 
          
		<fileset dir="alllibforhibernatetools/libforhibernate3.1"> 
		   <include name="**/*.jar" /> 
		</fileset> 
		
		<fileset dir="alllibforhibernatetools/libforhibernatetools3.1"> 
		   <include name="**/*.jar" /> 
		</fileset> 
		
		<fileset dir="alllibforhibernatetools"> 
		   <include name="hibernate3.jar" /> 
		</fileset> 
		
		<fileset dir="alllibforhibernatetools"> 
		   <include name="hibernate-tools.jar" /> 
		</fileset> 
		
		<fileset dir="alllibforhibernatetools/libforconnectdb/Postgres"> 
		   <include name="postgresql-8.0-311.jdbc3.jar" /> 
		</fileset> 
		
	        <fileset dir="alllibforhibernatetools/libforconnectdb/Sybase"> 
		   <include name="**/*.jar" /> 
		</fileset> 
		
		 <fileset dir="c:\j2sdk1.4.2\jre\lib"> 
		   <include name="**/*.jar" /> 
		</fileset>
		
		 <fileset dir="c:\j2sdk1.4.2\lib"> 
		   <include name="**/*.jar" /> 
		</fileset>
         </path> 
         
         <target name="hbm2java">
	  <taskdef 
	     name="hibernatetool" 
	     classname="org.hibernate.tool.ant.HibernateToolTask" 
	     classpathref="classforhibernatetools.path"/> 
	 
	   <hibernatetool destdir="${src.path}"> 
	       <configuration propertyFile="hibernate.properties">
                           <fileset dir="${src.path}" id="id"> <!-- A configuration can take a configurationfile and/or a fileset of hbm.xml's -->
	                <include name="**/*.hbm.xml"/> 
	             </fileset> 
                      </configuration> 
	       <hbm2java/> <!-- generate default .java files -->
	  </hibernatetool>
         </target>     

         
         <target name="hbm2ddl"  depends="hbm2java,compile">
	  <taskdef 
	     name="hibernatetool" 
	     classname="org.hibernate.tool.ant.HibernateToolTask" 
	     classpathref="classforhibernatetools.path"/> 
	 
	   <hibernatetool destdir="${src.path}"> 
	       <configuration propertyFile="hibernate.properties">
                           <fileset dir="${src.path}" id="id"> <!-- A configuration can take a configurationfile and/or a fileset of hbm.xml's -->
	                <include name="**/*.hbm.xml"/> 
	             </fileset> 
                      </configuration> 
	       <hbm2ddl  export="false" drop="true"  outputfilename="test.sql"/> <!-- export schema to database. If outputfilename is provided a text file is generated instead. -->
	  </hibernatetool>
         </target>                            
  
  </project>