--- net/sf/hibern8ide/Hibern8IDE.java	2004-04-25 16:30:49.000000000 -0700
+++ /eclipse/workspace/hibern8ide/src/net/sf/hibern8ide/Hibern8IDE.java	2004-11-18 09:59:15.000000000 -0800
@@ -224,13 +224,14 @@
 		try {
 			installLoader();
 			if (configuration != null) {
-				sf = configuration.buildSessionFactory();
+				if (sf == null) 	sf = configuration.buildSessionFactory();
 				BaseNode node = new NodeFactory(sf).createRootNode();
 				tree.setModel(new DefaultTreeModel(node));
 				graph.setModel(buildGraphModel(sf));
 				graph.setAntiAliased(true);
 				buildMenuOfAvailableQueries();                                   
-		}
+				
+			}
 		} finally {
 			uninstallLoader();
 		}
@@ -333,7 +334,7 @@
 				if(type.isEntityType()) {
 					DefaultEdge propertyEdge = new DefaultEdge(md.getPropertyNames()[j]);
 					EntityType et = (EntityType)type;
-					DefaultGraphCell target = (DefaultGraphCell) class2Node.get(et.getPersistentClass());
+					DefaultGraphCell target = (DefaultGraphCell) class2Node.get(et.getAssociatedClass());
 					attributes.put(propertyEdge, aggregateStyle);
 					
 					TreeNode targetPort = target.getChildAt(0);
@@ -386,9 +387,15 @@
 	public static void startWith(Configuration c) throws HibernateException {
 		Hibern8IDE h8ide = new Hibern8IDE();
 		h8ide.setConfiguration(c);
+		
+		h8ide.start();
+	}
+	public static void startWith(Configuration c, SessionFactory sf) throws HibernateException {
+		Hibern8IDE h8ide = new Hibern8IDE();
+		h8ide.setSessionFactory(sf);
+		h8ide.setConfiguration(c);
 		h8ide.start();
 	}
-
 	public static void main(String[] args) throws HibernateException {
 		try {
 			if (System.getProperty("sun.awt.exception.handler")==null) {
@@ -419,7 +426,8 @@
 	private void start() throws HibernateException {
 
 		mainWindow = setupUI();
-		mainWindow.show();
+//		mainWindow.show();
+		mainWindow.setVisible(true);
 	}
 
 	private JFrame setupUI() throws HibernateException {
@@ -1038,4 +1046,16 @@
     	return scrollPane;
     }
         
+	/**
+	 * @return Returns the sf.
+	 */
+	public SessionFactory getSessionFactory() {
+		return sf;
+	}
+	/**
+	 * @param sf The sf to set.
+	 */
+	public void setSessionFactory(SessionFactory sf) {
+		this.sf = sf;
+	}
 }
