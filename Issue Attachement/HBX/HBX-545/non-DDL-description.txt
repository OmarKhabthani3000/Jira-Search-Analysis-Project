One of the problem tables is called "MaterialCost".
The database I'm reverse-engineering was created/designed using MS-Access then "upsized" (the microsoft term for "exported") into MS-SQL-Server.

In MS-Access, the table has the following columns & details:
MaterialCostID: (Primary key for table)
  Data Type = AutoNumber
  Field Size = Long Integer
  New Values = Increment
  Indexed = Yes (No duplicates)
FKServiceID:
  Data Type = Number
  Field Size = Long Integer
  Required = Yes
  Indexed = Yes (Duplicates ok)
  Foreign Key constraint to ServiceID column in Service table
MaterialName:
  Data Type = Text
  Field Size = 50
  Required = Yes
  Allow zero length = No
  Indexed = Yes (Duplicates ok)
MaterialDescription:
  Data Type = Text
  Field Size = 255
  Required = No
  Allow zero length = No
  Indexed = No
MaterialCost:
  Data Type = Currency
  Required = No
  Indexed = No

That same table, when "upsized" into MS-SQL-Server, and viewed using SquirrelSQL, has the following characteristics:
MaterialCostID:
  TYPE_NAME = int identity
  COLUMN_SIZE = 10
  DECIMAL_DIGITS = 0
  IS_NULLABLE = NO
  COLUMN_DEF = <null>
  REMARKS = <null>
  DATA_TYPE = 4
  BUFFER_LENGTH = 4
  NUM_PREC_RADIX = 10
  NULLABLE = 0
  SQL_DATA_TYPE = 4
  SQL_DATETIME_SUB = 0
  CHAR_OCTET_LENGTH = 0
  ORDINAL_POSITION = 1
FKServiceID:
  TYPE_NAME = int
  COLUMN_SIZE = 10
  DECIMAL_DIGITS = 0
  IS_NULLABLE = NO
  COLUMN_DEF = <null>
  REMARKS = <null>
  DATA_TYPE = 4
  BUFFER_LENGTH = 4
  NUM_PREC_RADIX = 10
  NULLABLE = 0
  SQL_DATA_TYPE = 4
  SQL_DATETIME_SUB = 0
  CHAR_OCTET_LENGTH = 0
  ORDINAL_POSITION = 2
MaterialName:
  TYPE_NAME = nvarchar
  COLUMN_SIZE = 50
  DECIMAL_DIGITS = 0
  IS_NULLABLE = NO
  COLUMN_DEF = <null>
  REMARKS = <null>
  DATA_TYPE = 12
  BUFFER_LENGTH = 100
  NUM_PREC_RADIX = 0
  NULLABLE = 0
  SQL_DATA_TYPE = -9
  SQL_DATETIME_SUB = 0
  CHAR_OCTET_LENGTH = 100
  ORDINAL_POSITION = 3
MaterialDescription:
  TYPE_NAME = nvarchar
  COLUMN_SIZE = 255
  DECIMAL_DIGITS = 0
  IS_NULLABLE = YES
  COLUMN_DEF = <null>
  REMARKS = <null>
  DATA_TYPE = 12
  BUFFER_LENGTH = 510
  NUM_PREC_RADIX = 0
  NULLABLE = 1
  SQL_DATA_TYPE = -9
  SQL_DATETIME_SUB = 0
  CHAR_OCTET_LENGTH = 510
  ORDINAL_POSITION = 4
MaterialCost:
  TYPE_NAME = money
  COLUMN_SIZE = 19
  DECIMAL_DIGITS = 4
  IS_NULLABLE = NO
  COLUMN_DEF = <null>
  REMARKS = <null>
  DATA_TYPE = 3
  BUFFER_LENGTH = 21
  NUM_PREC_RADIX = 10
  NULLABLE = 0
  SQL_DATA_TYPE = 3
  SQL_DATETIME_SUB = 0
  CHAR_OCTET_LENGTH = 0
  ORDINAL_POSITION = 5

Using Eclipse's "Hibernate reverse engineering editor" on my hibernate.reveng.xml file, on the "Table Filters" page, if I "refresh" and then examine the "MaterialCost" table, it tells me:
- MaterialCost
    MaterialCostID : INTEGER
    FKServiceID : INTEGER
    MaterialName : VARCHAR
    MaterialDescription : VARCHAR
    MaterialCost: DECIMAL

Finally, I can tell you that the TOOLS_3_1_0_BETA3 generates Java code for this table with Java attributes Integer, Service (the Java class for the Service table), String, String and BigDecimal (respectively).
