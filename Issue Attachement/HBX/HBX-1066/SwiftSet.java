package com.jpmorgan.embo.maintainers.generated;

// Generated 17/06/2008 11:00:40 by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SwiftSet generated by hbm2java
 */
@Entity
@Table(name = "SWIFT_SET", schema = "EMBO")
public class SwiftSet implements java.io.Serializable {

    private SwiftSetId id;
    private SwiftBlock swiftBlock;
    private SwiftMessage swiftMessage;
    private SwiftTag swiftTag;
    private String sequence;
    private String sequenceOption;
    private String subsequence;
    private String subsequenceOption;
    private String optionalPrefix;
    private String tagOption;
    private String format;
    private String sequenceName;
    private String subsequenceName;
    private Set<SwiftDocument> swiftDocuments = new HashSet<SwiftDocument>(0);

    public SwiftSet() {
    }

    public SwiftSet(SwiftSetId id, SwiftBlock swiftBlock,
            SwiftMessage swiftMessage) {
        this.id = id;
        this.swiftBlock = swiftBlock;
        this.swiftMessage = swiftMessage;
    }

    public SwiftSet(SwiftSetId id, SwiftBlock swiftBlock,
            SwiftMessage swiftMessage, SwiftTag swiftTag, String sequence,
            String sequenceOption, String subsequence,
            String subsequenceOption, String optionalPrefix, String tagOption,
            String format, String sequenceName, String subsequenceName,
            Set<SwiftDocument> swiftDocuments) {
        this.id = id;
        this.swiftBlock = swiftBlock;
        this.swiftMessage = swiftMessage;
        this.swiftTag = swiftTag;
        this.sequence = sequence;
        this.sequenceOption = sequenceOption;
        this.subsequence = subsequence;
        this.subsequenceOption = subsequenceOption;
        this.optionalPrefix = optionalPrefix;
        this.tagOption = tagOption;
        this.format = format;
        this.sequenceName = sequenceName;
        this.subsequenceName = subsequenceName;
        this.swiftDocuments = swiftDocuments;
    }

    @EmbeddedId
    @AttributeOverrides( {
            @AttributeOverride(name = "swiftMessageId", column = @Column(name = "SWIFT_MESSAGE_ID", nullable = false, precision = 5, scale = 0)),
            @AttributeOverride(name = "orderNumber", column = @Column(name = "ORDER_NUMBER", nullable = false, precision = 5, scale = 0)) })
    public SwiftSetId getId() {
        return this.id;
    }

    public void setId(SwiftSetId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "BLOCK_NAME", nullable = false)
    public SwiftBlock getSwiftBlock() {
        return this.swiftBlock;
    }

    public void setSwiftBlock(SwiftBlock swiftBlock) {
        this.swiftBlock = swiftBlock;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "SWIFT_MESSAGE_ID", nullable = false, insertable = false, updatable = false)
    public SwiftMessage getSwiftMessage() {
        return this.swiftMessage;
    }

    public void setSwiftMessage(SwiftMessage swiftMessage) {
        this.swiftMessage = swiftMessage;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TAG_NAME")
    public SwiftTag getSwiftTag() {
        return this.swiftTag;
    }

    public void setSwiftTag(SwiftTag swiftTag) {
        this.swiftTag = swiftTag;
    }

    @Column(name = "SEQUENCE", length = 5)
    public String getSequence() {
        return this.sequence;
    }

    public void setSequence(String sequence) {
        this.sequence = sequence;
    }

    @Column(name = "SEQUENCE_OPTION", length = 5)
    public String getSequenceOption() {
        return this.sequenceOption;
    }

    public void setSequenceOption(String sequenceOption) {
        this.sequenceOption = sequenceOption;
    }

    @Column(name = "SUBSEQUENCE", length = 5)
    public String getSubsequence() {
        return this.subsequence;
    }

    public void setSubsequence(String subsequence) {
        this.subsequence = subsequence;
    }

    @Column(name = "SUBSEQUENCE_OPTION", length = 5)
    public String getSubsequenceOption() {
        return this.subsequenceOption;
    }

    public void setSubsequenceOption(String subsequenceOption) {
        this.subsequenceOption = subsequenceOption;
    }

    @Column(name = "OPTIONAL_PREFIX", length = 30)
    public String getOptionalPrefix() {
        return this.optionalPrefix;
    }

    public void setOptionalPrefix(String optionalPrefix) {
        this.optionalPrefix = optionalPrefix;
    }

    @Column(name = "TAG_OPTION", length = 5)
    public String getTagOption() {
        return this.tagOption;
    }

    public void setTagOption(String tagOption) {
        this.tagOption = tagOption;
    }

    @Column(name = "FORMAT", length = 50)
    public String getFormat() {
        return this.format;
    }

    public void setFormat(String format) {
        this.format = format;
    }

    @Column(name = "SEQUENCE_NAME", length = 100)
    public String getSequenceName() {
        return this.sequenceName;
    }

    public void setSequenceName(String sequenceName) {
        this.sequenceName = sequenceName;
    }

    @Column(name = "SUBSEQUENCE_NAME", length = 100)
    public String getSubsequenceName() {
        return this.subsequenceName;
    }

    public void setSubsequenceName(String subsequenceName) {
        this.subsequenceName = subsequenceName;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "unresolved")
    public Set<SwiftDocument> getSwiftDocuments() {
        return this.swiftDocuments;
    }

    public void setSwiftDocuments(Set<SwiftDocument> swiftDocuments) {
        this.swiftDocuments = swiftDocuments;
    }

}
