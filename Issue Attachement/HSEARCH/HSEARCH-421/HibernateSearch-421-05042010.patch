Index: hibernate-search/src/main/docbook/en-US/modules/configuration.xml
===================================================================
--- hibernate-search/src/main/docbook/en-US/modules/configuration.xml	(revision 19002)
+++ hibernate-search/src/main/docbook/en-US/modules/configuration.xml	Mon Apr 05 07:10:26 BST 2010
@@ -257,7 +257,7 @@
 
     <para>Using a custom <classname>IndexShardingStrategy</classname>
     implementation, it's possible to define what shard a given entity is
-    indexed to. </para>
+    indexed to.</para>
 
     <para>It also allows for optimizing searches by selecting which shard to
     run the query onto. By activating a filter (see <xref
@@ -391,7 +391,8 @@
             <entry>Out of the box support for the Apache Lucene back end and
             the JMS back end. Default to <literal>lucene</literal>. Supports
             also <literal>jms</literal>, <literal>blackhole</literal>,
-            <literal>jgroupsMaster</literal> and <literal>jgroupsSlave</literal>.</entry>
+            <literal>jgroupsMaster</literal> and
+            <literal>jgroupsSlave</literal>.</entry>
           </row>
 
           <row>
@@ -442,34 +443,35 @@
             lookup the JMS queue from. The queue will be used to post work
             messages.</entry>
           </row>
-          
+
           <row>
-           <entry><literal>hibernate.search.worker.jgroups.clusterName</literal></entry>
+            <entry><literal>hibernate.search.worker.jgroups.clusterName</literal></entry>
 
-           <entry>Optional for JGroups back end. Defines the name of JGroups channel.</entry>
+            <entry>Optional for JGroups back end. Defines the name of JGroups
+            channel.</entry>
           </row>
-          
+
           <row>
-           <entry><literal>hibernate.search.worker.jgroups.configurationFile</literal></entry>
+            <entry><literal>hibernate.search.worker.jgroups.configurationFile</literal></entry>
 
-           <entry>Optional JGroups network stack configuration. Defines the name of a JGroups
-           configuration file, which must exist on classpath.</entry>
+            <entry>Optional JGroups network stack configuration. Defines the
+            name of a JGroups configuration file, which must exist on
+            classpath.</entry>
           </row>
 
           <row>
-           <entry><literal>hibernate.search.worker.jgroups.configurationXml</literal></entry>
+            <entry><literal>hibernate.search.worker.jgroups.configurationXml</literal></entry>
 
-           <entry>Optional JGroups network stack configuration.
-           Defines a String representing JGroups configuration as XML.</entry>
+            <entry>Optional JGroups network stack configuration. Defines a
+            String representing JGroups configuration as XML.</entry>
-           </row>
-           
-           <row>
+          </row>
+
+          <row>
             <entry><literal>hibernate.search.worker.jgroups.configurationString</literal></entry>
 
-            <entry>Optional JGroups network stack configuration.
-            Provides JGroups configuration in plain text.</entry>
+            <entry>Optional JGroups network stack configuration. Provides
+            JGroups configuration in plain text.</entry>
-           </row>
+          </row>
-
         </tbody>
       </tgroup>
     </table>
@@ -606,49 +608,62 @@
     </section>
   </section>
 
-    <section id="jgroups-backend">
-        <title>JGroups Master/Slave configuration</title>
+  <section id="jgroups-backend">
+    <title>JGroups Master/Slave configuration</title>
+
-        <para>Describes how to configure JGroups Master/Slave back end.
-            Configuration examples illustrated in JMS Master/Slave configuration
+    <para>Describes how to configure JGroups Master/Slave back end.
+    Configuration examples illustrated in JMS Master/Slave configuration
-            section (<xref linkend="jms-backend" />) also apply here, only
-            a different backend needs to be set.
-        </para>
+    section (<xref linkend="jms-backend" />) also apply here, only a different
+    backend needs to be set.</para>
+
-        <section>
-            <title>Slave nodes</title>
+    <section>
+      <title>Slave nodes</title>
-            <para>Every index update operation is sent through a JGroups channel to the master node. Index
-                querying operations are executed on a local index copy.
-            </para>
-            <example><title>JGroups Slave configuration</title>
+
+      <para>Every index update operation is sent through a JGroups channel to
+      the master node. Index querying operations are executed on a local index
+      copy.</para>
+
+      <example>
+        <title>JGroups Slave configuration</title>
+
-       <programlisting>
+        <programlisting>
 ### slave configuration
 ## Backend configuration
 hibernate.search.worker.backend = jgroupsSlave
        </programlisting>
-            </example>
-        </section>
+      </example>
+    </section>
 
-        <section>
-            <title>Master node</title>
+    <section>
+      <title>Master node</title>
+
-            <para>Every index update operation is taken from a JGroups channel and
+      <para>Every index update operation is taken from a JGroups channel and
-                executed. The master index is copied on a regular basis.
-            </para>
-            <example><title>JGroups Master configuration</title>
+      executed. The master index is copied on a regular basis.</para>
+
+      <example>
+        <title>JGroups Master configuration</title>
+
-     <programlisting>
+        <programlisting>
 ### master configuration
 ## Backend configuration
 hibernate.search.worker.backend = jgroupsMaster
      </programlisting>
-            </example>
-        </section>
+      </example>
+    </section>
+
-         <section>
-            <title>JGroups channel configuration</title>
+    <section>
+      <title>JGroups channel configuration</title>
-            <para>Optionally configuration for JGroups transport protocols
-            (UDP, TCP) and channel name can be defined. It can be applied to both master and slave nodes.
-            There are several ways to configure JGroups transport details.
-            If it is not defined explicity, configuration found in the <literal>
-            flush-udp.xml</literal> file is used.</para>
-             <example><title>JGroups transport protocols configuration</title>
+
+      <para>Optionally configuration for JGroups transport protocols (UDP,
+      TCP) and channel name can be defined. It can be applied to both master
+      and slave nodes. There are several ways to configure JGroups transport
+      details. If it is not defined explicity, configuration found in the
+      <literal> flush-udp.xml</literal> file is used.</para>
+
+      <example>
+        <title>JGroups transport protocols configuration</title>
+
-     <programlisting>
+        <programlisting>
 ## configuration
 #udp.xml file needs to be located in the classpath
 hibernate.search.worker.backend.jgroups.configurationFile = udp.xml
@@ -689,19 +704,24 @@
 FRAG:pbcast.GMS(join_timeout=3000;shun=false;print_local_addr=true)
 
     </programlisting>
-            </example>
+      </example>
-            <para>Master and slave nodes communicate over JGroups channel
-                  that is identified by this same name. Name of the channel can be defined
-                  explicity, if not default <literal>HSearchCluster</literal> is used.</para>
-            <example><title>JGroups channel name configuration</title>
+
+      <para>Master and slave nodes communicate over JGroups channel that is
+      identified by this same name. Name of the channel can be defined
+      explicity, if not default <literal>HSearchCluster</literal> is
+      used.</para>
+
+      <example>
+        <title>JGroups channel name configuration</title>
+
-                <programlisting>
+        <programlisting>
 ## Backend configuration
 hibernate.search.worker.backend.jgroups.clusterName = Hibernate-Search-Cluster
                 </programlisting>
-            </example>
-        </section>
-    </section>
-    
+      </example>
+    </section>
+  </section>
+
   <section id="configuration-reader-strategy">
     <title>Reader strategy configuration</title>
 
@@ -828,15 +848,14 @@
     settings depending on the use case. During indexing operations triggered
     by database modifications, the parameters are grouped by the
     <literal>transaction</literal> keyword: <programlisting>hibernate.search.[default|&lt;indexname&gt;].indexwriter.transaction.&lt;parameter_name&gt;</programlisting>
-    When indexing occurs via <literal>FullTextSession.index()</literal> or
-    via a <classname>MassIndexer</classname> (see
-    <xref linkend="search-batchindex" />), the used properties are those
-    grouped under the <literal>batch</literal> keyword: <programlisting>hibernate.search.[default|&lt;indexname&gt;].indexwriter.batch.&lt;parameter_name&gt;</programlisting></para>
+    When indexing occurs via <literal>FullTextSession.index()</literal> or via
+    a <classname>MassIndexer</classname> (see <xref
+    linkend="search-batchindex" />), the used properties are those grouped
+    under the <literal>batch</literal> keyword: <programlisting>hibernate.search.[default|&lt;indexname&gt;].indexwriter.batch.&lt;parameter_name&gt;</programlisting></para>
 
-    <para>If no value is set for a
-    <literal>.batch</literal> value in a specific shard configuration,
-    Hibernate Search will look at the index section, then at the default
-    section: <programlisting>hibernate.search.Animals.2.indexwriter.transaction.max_merge_docs 10
+    <para>If no value is set for a <literal>.batch</literal> value in a
+    specific shard configuration, Hibernate Search will look at the index
+    section, then at the default section: <programlisting>hibernate.search.Animals.2.indexwriter.transaction.max_merge_docs 10
 hibernate.search.Animals.2.indexwriter.transaction.merge_factor 20
 hibernate.search.default.indexwriter.batch.max_merge_docs 100</programlisting>
     This configuration will result in these settings applied to the second
@@ -867,10 +886,12 @@
     of Lucene you are using; values shown are relative to version
     <literal>2.4</literal>. For more information about Lucene indexing
     performances, please refer to the Lucene documentation.</para>
-    
+
-    <warning><para>Previous versions had the <literal>batch</literal>
-    parameters inherit from <literal>transaction</literal> properties.
-    This needs now to be explicitly set.</para></warning>
+    <warning>
+      <para>Previous versions had the <literal>batch</literal> parameters
+      inherit from <literal>transaction</literal> properties. This needs now
+      to be explicitly set.</para>
+    </warning>
 
     <table>
       <title>List of indexing performance and behavior properties</title>
@@ -887,18 +908,18 @@
         </thead>
 
         <tbody>
-        
-        <row>
+          <row>
             <entry><literal>hibernate.search.[default|&lt;indexname&gt;].exclusive_index_use</literal></entry>
 
-            <entry><para>Set to <literal>true</literal> when no other
-            process will need to write to the same index: this will enable
-            Hibernate Search to work in exlusive mode on the index and
-            improve performance in writing changes to the index.</para></entry>
+            <entry><para>Set to <literal>true</literal> when no other process
+            will need to write to the same index: this will enable Hibernate
+            Search to work in exlusive mode on the index and improve
+            performance in writing changes to the index.</para></entry>
 
-            <entry><literal>false</literal> (releases locks as soon as possible)</entry>
+            <entry><literal>false</literal> (releases locks as soon as
+            possible)</entry>
           </row>
-        
+
           <row>
             <entry><literal>hibernate.search.[default|&lt;indexname&gt;].indexwriter.[transaction|batch].max_buffered_delete_terms</literal></entry>
 
@@ -1015,10 +1036,11 @@
         </tbody>
       </tgroup>
     </table>
-    
+
-    <tip><para>When your architecture permits it, always set
-    <literal>hibernate.search.default.exclusive_index_use=true</literal>
-    as it greatly improves efficiency in index writing.</para>
+    <tip>
+      <para>When your architecture permits it, always set
+      <literal>hibernate.search.default.exclusive_index_use=true</literal> as
+      it greatly improves efficiency in index writing.</para>
     </tip>
 
     <para>To tune the indexing speed it might be useful to time the object
@@ -1154,10 +1176,60 @@
 hibernate.search.Animals.locking_strategy native
 hibernate.search.Books.locking_strategy org.custom.components.MyLockingFactory</programlisting>
 
-     
+      
+  </section>
 
-    <para />
+  <section>
+    <title>Exception Handling Configuration</title>
 
+    <para>Hibernate Search allows you to configure how exceptions are handled
+    during the ibackend ndexing process. If no configuration is provided then,
+    in synchronous indexing mode, any exceptions thrown are wrapped in a
+    <code>SearchException</code> and propagated back by default. In the case
+    of asynchronous mode any exceptions thrown are logged to the log output.
+    These options are easily configurable and Hibernate Search provides a
+    mechanism to override the error handling implementation. </para>
-     
+
+    <para>In order to provide your own implementation you must implement the
+    <code>ErrorHandler</code> interface, which provides <code>handle (
+    ErrorContext context )</code> method. The <code>ErrorContext</code>
+    provides a handle to the primary <code>LuceneWork</code> that failed, the
+    underlying exception and any subsequent <code>LuceneWork</code> that could
+    not be processed due to the primary exception. </para>
+
+    <para><programlisting>public interface ErrorContext  {
+
+  List&lt;LuceneWork&gt; getFailingOperations();
+  LuceneWork getOperationAtFault();
+  Throwable getThrowable();
+  boolean hasErrors();
+
+}</programlisting></para>
+
+    <para>The following provides an example implementation of
+    <code>ErrorHandler</code>:</para>
+
+    <para><programlisting>public class CustomErrorHandler implements ErrorHandler {
+ 
+ public void handle ( ErrorContext context ) {
+   ...
+   //publish error context to some internal error handling system
+   ...
+ }
+}</programlisting>To register this error handler with Hibernate Search you
+    must declare the <code>CustomErrorHandler</code> in the configuration
+    propertries:</para>
+
+    <para><programlisting>hibernate.search.error_handler CustomerErrorHandler</programlisting>As
+    mentioned above the two default mechanism for error handling are logging
+    or rethrowing depending on the indexing mode. If you are using the
+    synchronous mode of indexing and would rather log the the exceptions
+    instead of rethrowing, then all you have to do is declare the following:
+    </para>
+
+    <para><programlisting>hibernate.search.error_handler log</programlisting>Please
+    note that the 'log' mode can be used in both synchronous and asynchronous
+    indexing, however the 'rethrow' mode of exception handling is only
+    compatible with synchronous indexing. </para>
   </section>
-</chapter>
\ No newline at end of file
+</chapter>
