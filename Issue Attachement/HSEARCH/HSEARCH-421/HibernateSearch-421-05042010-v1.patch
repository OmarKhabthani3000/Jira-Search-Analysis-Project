Index: hibernate-search/src/main/docbook/en-US/modules/configuration.xml
===================================================================
--- hibernate-search/src/main/docbook/en-US/modules/configuration.xml	(revision 19002)
+++ hibernate-search/src/main/docbook/en-US/modules/configuration.xml	Mon Apr 05 09:59:38 BST 2010
@@ -1160,4 +1160,57 @@
 
      
   </section>
+    <section>
+    <title>Exception Handling Configuration</title>
+
+    <para>Hibernate Search allows you to configure how exceptions are handled
+    during the ibackend ndexing process. If no configuration is provided then,
+    in synchronous indexing mode, any exceptions thrown are wrapped in a
+    <code>SearchException</code> and propagated back by default. In the case
+    of asynchronous mode any exceptions thrown are logged to the log output.
+    These options are easily configurable and Hibernate Search provides a
+    mechanism to override the error handling implementation. </para>
+
+    <para>In order to provide your own implementation you must implement the
+    <code>ErrorHandler</code> interface, which provides <code>handle (
+    ErrorContext context )</code> method. The <code>ErrorContext</code>
+    provides a handle to the primary <code>LuceneWork</code> that failed, the
+    underlying exception and any subsequent <code>LuceneWork</code> that could
+    not be processed due to the primary exception. </para>
+
+    <para><programlisting>public interface ErrorContext  {
+
+  List&lt;LuceneWork&gt; getFailingOperations();
+  LuceneWork getOperationAtFault();
+  Throwable getThrowable();
+  boolean hasErrors();
+
+}</programlisting></para>
+
+    <para>The following provides an example implementation of
+    <code>ErrorHandler</code>:</para>
+
+    <para><programlisting>public class CustomErrorHandler implements ErrorHandler {
+
+ public void handle ( ErrorContext context ) {
+   ...
+   //publish error context to some internal error handling system
+   ...
+ }
+}</programlisting>To register this error handler with Hibernate Search you
+    must declare the <code>CustomErrorHandler</code> in the configuration
+    propertries:</para>
+
+    <para><programlisting>hibernate.search.error_handler CustomerErrorHandler</programlisting>As
+    mentioned above the two default mechanism for error handling are logging
+    or rethrowing depending on the indexing mode. If you are using the
+    synchronous mode of indexing and would rather log the the exceptions
+    instead of rethrowing, then all you have to do is declare the following:
+    </para>
+
+    <para><programlisting>hibernate.search.error_handler log</programlisting>Please
+    note that the 'log' mode can be used in both synchronous and asynchronous
+    indexing, however the 'rethrow' mode of exception handling is only
+    compatible with synchronous indexing. </para>
+  </section>
 </chapter>
\ No newline at end of file
