<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.directwebremoting.org/schema/spring-dwr
            http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Datasource configuration -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/Test" />

	<!-- Transaction configuration -->
<!--	<bean id="transactionManager"-->
<!--		class="org.springframework.transaction.jta.JtaTransactionManager">-->
<!--		<property name="transactionManagerName" value="java:appserver/TransactionManager" />-->
<!--	</bean>-->
	
	<tx:jta-transaction-manager/>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="load*" read-only="true" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="list*" read-only="true" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="is*" read-only="true" propagation="REQUIRED"
				rollback-for="java.lang.Throwable" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
		</tx:attributes>
	</tx:advice>

	<!-- Aspect configuration -->
	<aop:aspectj-autoproxy />
	<aop:config>
		<aop:pointcut id="transactionServicesPointcut"
			expression="target(com.infoware.framework.base.service.AbstractBaseService)
        AND execution(public * *(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionServicesPointcut" />
	</aop:config>

	<!-- Tiles configuration -->
	<!--
		PRECAUCION: En la lista de definiciones de tiles, el </value> no debe
		estar en dos lineas y debe ir pagado a .xml, por ejemplo:
		<value>/WEB-INF/config/tiles/tiles.xml</value>.
	-->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/config/tiles/tiles.xml</value>
			</list>
		</property>

		<property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>

	<!-- DWR configuration -->
	<dwr:configuration>
		<dwr:create javascript="validator" type="new"
			class="org.apache.struts2.validators.DWRValidator" />

		<dwr:convert type="bean"
			class="com.opensymphony.xwork2.ValidationAwareSupport" />
	</dwr:configuration>

	<bean id="baseCommonHttpErrorAction"
		class="com.infoware.framework.web.httperror.action.HttpErrorHandlerAction" />

</beans>