<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
		
		<!-- Hibernate configuration -->
		<!-- Es importante el orden del mapeo de los servicios, ya que por herencia debe siempre ir primero ServicioTuristico.hbm.xml -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mappingResources">
			<list>
				<value>/resources/hibernate/Item.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>

				<!--  <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>-->
				
				<prop key="hibernate.default_catalog">TEST</prop>
				
				<!-- Tracing de Desarrollo -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>

				<prop key="hibernate.connection.release_mode">auto</prop>

				<!-- Cache settings -->
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.OSCacheProvider
				</prop>
				<prop key="hibernate.cache.use_minimal_puts">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					true
				</prop>

				<prop key="hibernate.cache.region_prefix">
					AndanteCacheId
				</prop>
				<prop key="hibernate.cache.use_structured_entries">
					true
				</prop>

				<!-- HQL Translator -->
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.classic.ClassicQueryTranslatorFactory
				</prop>
				
<!--				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>-->
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<!-- Search -->
				<prop key="hibernate.search.default.indexBase">../lucene/test/index</prop>
				<prop key="hibernate.search.worker.batch_size">100</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.worker.execution">async</prop>
				<prop key="hibernate.search.default.optimizer.transaction_limit.max">100</prop>
				<prop key="hibernate.search.worker.thread_pool.size">1</prop>
				<prop key="hibernate.search.worker.buffer_queue.max">1000000</prop>

			</props>
		</property>

		<!--		ConfiguraciÃ³n para Hibernate Search		-->
		<property name="eventListeners">
			<map>
				<entry key="post-update"><bean class="org.hibernate.search.event.FullTextIndexEventListener"/></entry>
				<entry key="post-insert"><bean class="org.hibernate.search.event.FullTextIndexEventListener"/></entry>
				<entry key="post-delete"><bean class="org.hibernate.search.event.FullTextIndexEventListener"/></entry>
				<entry key="post-collection-recreate"><bean class="org.hibernate.search.event.FullTextIndexEventListener"/></entry>
				<entry key="post-collection-remove"><bean class="org.hibernate.search.event.FullTextIndexEventListener"/></entry>
				<entry key="post-collection-update"><bean class="org.hibernate.search.event.FullTextIndexEventListener"/></entry>
			</map>
		</property>
	</bean>
	
<!--	<bean id="FullTextIndexEventListener" class="org.hibernate.search.event.FullTextIndexEventListener"/>-->
</beans>
