Index: tools/src/java/net/sf/hibernate/tool/hbm2java/BasicRenderer.java
===================================================================
RCS file: /cvsroot/hibernate/HibernateExt/tools/src/java/net/sf/hibernate/tool/hbm2java/BasicRenderer.java,v
retrieving revision 1.6
diff -u -p -B -r1.6 BasicRenderer.java
--- tools/src/java/net/sf/hibernate/tool/hbm2java/BasicRenderer.java	4 Sep 2003 18:17:01 -0000	1.6
+++ tools/src/java/net/sf/hibernate/tool/hbm2java/BasicRenderer.java	23 Sep 2003 15:32:53 -0000
@@ -104,7 +104,8 @@ public class BasicRenderer extends Abstr
         PrintWriter propWriter = new PrintWriter(strPropWriter);
 
 		if(!classMapping.isInterface()) {
-        	doFields(classMapping, class2classmap, propWriter);		
+            doFieldNameConstants(classMapping, propWriter);
+        	doFields(classMapping, class2classmap, propWriter);
         	doConstructors(savedToClass, classMapping, class2classmap, propWriter);
 		}
 		
@@ -287,6 +288,21 @@ public class BasicRenderer extends Abstr
 		    writer.println();
 		}
 	}
+
+    public void doFieldNameConstants(ClassMapping classMapping, PrintWriter writer) {
+        // fields
+        for ( Iterator fields = classMapping.getFields().iterator(); fields.hasNext(); ) {
+            Field field = (Field) fields.next();
+
+            if(field.isGeneratedAsProperty()) {
+                String fieldName = "    "+"public static String FIELD_"+field.getName().toUpperCase()
+                    +" = \""+classMapping.getCanonicalName()+"."+field.getName()+"\";";
+                writer.println(fieldName);
+            }
+        }
+        writer.println();
+    }
+
 
 	public void doFields(ClassMapping classMapping, Map class2classmap, PrintWriter writer) {
 		// fields
