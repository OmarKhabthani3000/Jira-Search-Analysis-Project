Index: net/sf/hibernate/type/CustomType.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/type/CustomType.java,v
retrieving revision 1.9.2.9
diff -u -r1.9.2.9 CustomType.java
--- net/sf/hibernate/type/CustomType.java	13 Dec 2003 15:43:52 -0000	1.9.2.9
+++ net/sf/hibernate/type/CustomType.java	13 May 2004 09:32:04 -0000
@@ -11,6 +11,7 @@
 import net.sf.hibernate.HibernateException;
 import net.sf.hibernate.MappingException;
 import net.sf.hibernate.UserType;
+import net.sf.hibernate.XmlUserType;
 import net.sf.hibernate.engine.Mapping;
 import net.sf.hibernate.engine.SessionFactoryImplementor;
 import net.sf.hibernate.engine.SessionImplementor;
@@ -26,7 +27,8 @@
 	private final UserType userType;
 	private final String name;
 	private final int[] types;
-	
+    private boolean supportXml;
+
 	public CustomType(Class userTypeClass) throws MappingException {
 		
 		name = userTypeClass.getName();
@@ -48,7 +50,8 @@
 		if ( !Serializable.class.isAssignableFrom( userType.returnedClass() ) ) {
 			LogFactory.getLog(CustomType.class).warn("custom type does not implement Serializable: " + userTypeClass);
 		}
-		
+        supportXml = XmlUserType.class.isAssignableFrom(userTypeClass);
+
 	}
 	
 	/**
@@ -120,12 +123,18 @@
 	
 	/**
 	 */
-	public String toString(Object value, SessionFactoryImplementor factory) {
-		return value==null ? "null" : value.toString();
+	public String toString(Object value, SessionFactoryImplementor factory) throws HibernateException {
+        if (supportXml)
+			return ((XmlUserType) userType).toString(value, factory);
+        else
+			return value==null ? "null" : value.toString();
 	}
 	
-	public Object fromString(String xml) {
-		throw new UnsupportedOperationException("not yet implemented!"); //TODO: look for constructor
+	public Object fromString(String xml) throws HibernateException {
+		if (supportXml)
+			return ((XmlUserType) userType).fromString(xml);
+		else
+			throw new UnsupportedOperationException("type " + name + " doesn't support XML unmarshalling.");
 	}
 	
 	/**
