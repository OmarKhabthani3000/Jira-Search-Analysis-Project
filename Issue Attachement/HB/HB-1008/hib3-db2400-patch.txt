Index: doc/reference/en/modules/configuration.xml
===================================================================
RCS file: /cvsroot/hibernate/Hibernate3/doc/reference/en/modules/configuration.xml,v
retrieving revision 1.3
diff -r1.3 configuration.xml
725a726,737
>                             <entry>DB2 OS390</entry> <entry><literal>net.sf.hibernate.dialect.DB2390Dialect</literal></entry>
>                         </row>
>                         <row>
>                             <entry>DB2 AS/400</entry> <entry><literal>net.sf.hibernate.dialect.DB2400Dialect</literal></entry>
>                         </row>
>                         <row>
>                             <entry>DB2 AS/400 (Pre-V5R2)</entry> <entry><literal>net.sf.hibernate.dialect.DB2400PreV5R2Dialect</literal></entry>
>                         </row>
>                         <row>
>                             <entry>DB2 AS/400 (V5R2+, system naming)</entry> <entry><literal>net.sf.hibernate.dialect.DB2400SysDialect</literal></entry>
>                         </row>
>                         <row>
Index: src/org/hibernate/dialect/DB2390Dialect.java
===================================================================
RCS file: src/org/hibernate/dialect/DB2390Dialect.java
diff -N src/org/hibernate/dialect/DB2390Dialect.java
0a1,13
> //$Id: DB2390Dialect.java,v 1.7 2004/06/12 19:40:58 oneovthafew Exp $
> package org.hibernate.dialect;
> 
> /** 
>  * An SQL dialect for DB2/390. This class provides support for 
>  * DB2 Universal Database for OS/390, also known as DB2/390.
>  * 
>  * @author Eric McIntyre
>  */ 
> public class DB2390Dialect extends DB2LargeSystemsDialect
> {
> 	// No changes - exists to make it easier to find the correct dialect 
> }
Index: src/org/hibernate/dialect/DB2400Dialect.java
===================================================================
RCS file: src/org/hibernate/dialect/DB2400Dialect.java
diff -N src/org/hibernate/dialect/DB2400Dialect.java
0a1,21
> /*
>  * Created on Jul 19, 2004
>  */
> package org.hibernate.dialect;
> 
> /**
>  * An SQL dialect for DB2/400 (DB2 for iSeries) on OS/400 V5R2 and above. The
>  * primary difference from previous releases is that V5R2 introduced support
>  * for identity columns. This class uses &quot;sql naming&quot;, which means
>  * the syntax for qualifying tables is the standard <i>SCHEMA.TABLE</i> (or <i>
>  * LIBRARY.FILE</i> in iSeries terms). If your database connection is setup as 
>  * &quot;naming=system&quot;, then see {@link
>  * net.sf.hibernate.dialect.DB2400SysNamingDialect}.
>  * 
>  * @author Eric McIntyre
>  * @see net.sf.hibernate.dialect.DB2400SysNamingDialect
>  */
> public class DB2400Dialect extends DB2LargeSystemsDialect
> {
> 	// No changes - exists to make it easier to find the correct dialect 
> }
Index: src/org/hibernate/dialect/DB2400PreV5R2Dialect.java
===================================================================
RCS file: src/org/hibernate/dialect/DB2400PreV5R2Dialect.java
diff -N src/org/hibernate/dialect/DB2400PreV5R2Dialect.java
0a1,31
> //$Id: DB2400Dialect.java,v 1.7 2004/06/12 19:40:58 oneovthafew Exp $
> package org.hibernate.dialect;
> 
> /**
>  * An SQL dialect for DB2/400 (DB2 for iSeries) on OS/400 V5R1 and below.
>  * Identity columns are not supported.
>  * 
>  * @author Eric McIntyre 
>  */
> public class DB2400PreV5R2Dialect extends DB2LargeSystemsDialect
> {
> 	public boolean supportsIdentityColumns()
> 	{
> 		return false;
> 	}
> 	
> 	public String getIdentitySelectString()
> 	{
> 		return null;
> 	}
> 	
> 	public String getIdentityColumnString()
> 	{
> 		return null;
> 	}
> 	
> 	public String getIdentityInsertString()
> 	{
> 		return null;
> 	}
> }
Index: src/org/hibernate/dialect/DB2400SysDialect.java
===================================================================
RCS file: src/org/hibernate/dialect/DB2400SysDialect.java
diff -N src/org/hibernate/dialect/DB2400SysDialect.java
0a1,24
> /*
>  * Created on Jul 19, 2004
>  */
> package org.hibernate.dialect;
> 
> /**
>  * An SQL dialect for DB2/400 (DB2 for iSeries) on OS/400 V5R2 and above. The
>  * primary difference from previous releases is that V5R2 introduced support
>  * for identity columns. This class uses &quot;system naming&quot;, which means
>  * the syntax for qualifying tables is <i>SCHEMA/TABLE</i> (or <i>
>  * LIBRARY/FILE</i> in iSeries terms). If your database connection is setup as 
>  * &quot;naming=sql&quot; (which is the default), then see {@link
>  * net.sf.hibernate.dialect.DB2400Dialect}.
>  * 
>  * @author Eric McIntyre
>  * @see net.sf.hibernate.dialect.DB2400Dialect
>  */
> public class DB2400SysDialect extends DB2LargeSystemsDialect
> {
> 	public String getIdentitySelectString()
> 	{ 
> 		return "SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM/SYSDUMMY1"; 
> 	}
> }
Index: src/org/hibernate/dialect/DB2LargeSystemsDialect.java
===================================================================
RCS file: src/org/hibernate/dialect/DB2LargeSystemsDialect.java
diff -N src/org/hibernate/dialect/DB2LargeSystemsDialect.java
0a1,55
> /*
>  * Created on Jul 20, 2004
>  */
> package org.hibernate.dialect;
> 
> /**
>  * An abstract Dialect for DB2 on IBM's large systems (mainframes and
>  * midranges). For the most part these behave similarly. Choose the
>  * appropriate subclass for your system.
>  * 
>  * @author Kristoffer Dyrkorn
>  * @author Eric McIntyre
>  */
> public abstract class DB2LargeSystemsDialect extends DB2Dialect
> {
> 	public boolean supportsSequences()
> 	{
> 		return false;
> 	}
> 
> 	public String getIdentitySelectString()
> 	{ 
> 		return "SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1"; 
> 	}
> 	 
> 	public boolean supportsLimit()
> 	{
> 		return true;
> 	}
> 
> 	public boolean supportsLimitOffset()
> 	{
> 		return false;
> 	}
> 
> 	public String getLimitString(String sql, boolean hasOffset, int limit)
> 	{
> 		return new StringBuffer(sql.length() + 40)
> 			.append(sql)
> 			.append(" fetch first ")
> 			.append(limit)
> 			.append(" rows only ")
> 			.toString();
> 	}
> 
> 	public boolean useMaxForLimit()
> 	{
> 		return true;
> 	}
> 
> 	public boolean supportsVariableLimit()
> 	{
> 		return false;
> 	}
> }
