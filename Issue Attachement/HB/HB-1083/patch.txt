Index: CodeGenerator.java
===================================================================
RCS file: /cvsroot/hibernate/HibernateExt/tools/src/java/org/hibernate/tool/hbm2java/CodeGenerator.java,v
retrieving revision 1.1
diff -u -r1.1 CodeGenerator.java
--- CodeGenerator.java	6 Jun 2004 15:12:24 -0000	1.1
+++ CodeGenerator.java	14 Jul 2004 17:12:36 -0000
@@ -1,5 +1,5 @@
 /*
- * $Id: CodeGenerator.java,v 1.1 2004/06/06 15:12:24 maxcsaucdk Exp $
+ * $Id: CodeGenerator.java,v 1.7 2004/03/22 20:41:47 maxcsaucdk Exp $
  */
 package org.hibernate.tool.hbm2java;
 
@@ -9,9 +9,10 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Map;
 
-import org.hibernate.MappingException;
-import org.hibernate.util.DTDEntityResolver;
+import net.sf.hibernate.MappingException;
+import net.sf.hibernate.util.DTDEntityResolver;
 
 import org.apache.commons.collections.MultiHashMap;
 import org.apache.commons.collections.MultiMap;
@@ -137,20 +138,31 @@
 			if(!extendz) {
 		    	ClassMapping cmap = new ClassMapping(classPackage, clazz, me, mm);
 		    	classMappings.put(cmap.getFullyQualifiedName(),cmap);
+				listClasses_.put(cmap.getFullyQualifiedName(), cmap);
 			} else {				
 				String ex = clazz.getAttributeValue("extends");
 				if(ex==null) {
 					throw new MappingException("Missing extends attribute on <" + clazz.getName() + " name=" + clazz.getAttributeValue("name") + ">" );
 				}
 				ClassMapping superclass = (ClassMapping) classMappings.get(ex);
+				
+				// PHILIPPE
+				superclass = (ClassMapping) listClasses_.get(ex);
+				
 				if(superclass == null) {
 					throw new MappingException("Cannot extend unmapped class " + ex);					
 				}
 				ClassMapping subclassMapping = new ClassMapping(classPackage, me, superclass.getClassName(), superclass, clazz, mm);
+				
+				// PHILIPPE: Added this line otherwise cannot generate Java for inheritance depth > 1
+				listClasses_.put(subclassMapping.getFullyQualifiedName(), subclassMapping);
+				
 				superclass.addSubClass(subclassMapping);
 			}
 		}
 	}
+	// PHILIPPE
+	private static Map listClasses_ = new HashMap();
 }
 
 
