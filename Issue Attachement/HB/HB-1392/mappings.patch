*** Mappings.java	Tue Nov 23 18:47:38 2004
--- ../hibernate-2.1/src/net/sf/hibernate/cfg/Mappings.java	Mon Dec 20 15:39:12 2004
***************
*** 4,12 ****
  import java.util.List;
  import java.util.Map;
  
- import org.apache.commons.logging.Log;
- import org.apache.commons.logging.LogFactory;
- 
  import net.sf.hibernate.MappingException;
  import net.sf.hibernate.cache.CacheConcurrencyStrategy;
  import net.sf.hibernate.mapping.Collection;
--- 4,9 ----
***************
*** 14,19 ****
--- 11,19 ----
  import net.sf.hibernate.mapping.PersistentClass;
  import net.sf.hibernate.mapping.Table;
  
+ import org.apache.commons.logging.Log;
+ import org.apache.commons.logging.LogFactory;
+ 
  /**
   * A collection of mappings from classes and collections to
   * relational database tables. (Represents a single
***************
*** 39,44 ****
--- 39,45 ----
  	private final List propertyReferences;
  	private final Map caches;
  	private final NamingStrategy namingStrategy;
+ 	private final Configuration configuration;
  
  	
  	
***************
*** 52,58 ****
  		final Map caches, 
  		final List secondPasses, 
  		final List propertyReferences,
! 		final NamingStrategy namingStrategy
  	) {
  		this.classes = classes;
  		this.collections = collections;
--- 53,60 ----
  		final Map caches, 
  		final List secondPasses, 
  		final List propertyReferences,
! 		final NamingStrategy namingStrategy,
! 		final Configuration configuration
  	) {
  		this.classes = classes;
  		this.collections = collections;
***************
*** 64,69 ****
--- 66,72 ----
  		this.propertyReferences = propertyReferences;
  		this.caches = caches;
  		this.namingStrategy = namingStrategy;
+ 		this.configuration = configuration;
  	}
  	
  	public void addClass(PersistentClass persistentClass) throws MappingException {
***************
*** 106,111 ****
--- 109,117 ----
  	}
  	
  	public String getSchemaName() {
+ 		if (this.schemaName == null) {
+ 			return this.configuration.getProperty(Environment.DEFAULT_SCHEMA);
+ 		}
  		return schemaName;
  	}
  	
