Index: PathExpressionParser.java
===================================================================
retrieving revision 1.1
diff -u -r1.1 PathExpressionParser.java
--- PathExpressionParser.java	17 Dec 2003 12:46:00 -0000	1.1
+++ PathExpressionParser.java	6 Mar 2004 14:09:04 -0000
@@ -1,4 +1,4 @@
-//$Id: PathExpressionParser.java,v 1.1 2003/12/17 12:46:00 drai Exp $
+//$Id: PathExpressionParser.java,v 1.27.2.17 2003/11/30 12:31:12 oneovthafew Exp $
 package net.sf.hibernate.hql;
 
 import java.util.LinkedList;
@@ -49,6 +49,7 @@
 	private int joinType = JoinFragment.INNER_JOIN; //default mode
 	private boolean useThetaStyleJoin = true;
 	private PropertyMapping currentPropertyMapping;
+	private Queryable classCast;
 	
 	void setJoinType(int joinType) {
 		this.joinType = joinType;
@@ -56,6 +57,9 @@
 	void setUseThetaStyleJoin(boolean useThetaStyleJoin) {
 		this.useThetaStyleJoin = useThetaStyleJoin;
 	}
+	void setClassCast(Queryable classCast) {
+	    this.classCast = classCast;
+	}
 
 	private void addJoin(String table, String name, String[] rhsCols) throws QueryException {
 		String[] lhsCols = currentColumns();
@@ -145,10 +149,20 @@
 	}
 	
 	private void dereferenceEntity(String propertyName, EntityType propertyType, QueryTranslator q) throws QueryException {
-		
+	    
 		Class entityClass = propertyType.getAssociatedClass();
 		
-		Queryable memberPersister = q.getPersister(entityClass);
+		Queryable memberPersister = classCast;
+		
+	    if (memberPersister != null) {
+	        if (!entityClass.isAssignableFrom(memberPersister.getMappedClass()))
+	            throw new QueryException("could not downcast " + propertyName + " of type " + entityClass.getName() + " to " + memberPersister.getMappedClass().getName());
+	        
+	        entityClass = memberPersister.getMappedClass();
+	    }
+	    else
+	        memberPersister = q.getPersister(entityClass);
+	    
 		if (
 			// if its "id"
 			ClassPersister.ENTITY_ID.equals(propertyName) || (
