Index: Configuration.java
===================================================================
retrieving revision 1.1
diff -u -r1.1 Configuration.java
--- Configuration.java	17 Dec 2003 12:45:59 -0000	1.1
+++ Configuration.java	17 Dec 2003 13:44:35 -0000
@@ -1,4 +1,4 @@
-//$Id: Configuration.java,v 1.1 2003/12/17 12:45:59 drai Exp $
+//$Id: Configuration.java,v 1.27.2.23 2003/12/01 05:29:15 oneovthafew Exp $
 package net.sf.hibernate.cfg;
 
 import java.util.Enumeration;
@@ -1042,11 +1042,15 @@
 	protected void configureCaches(Settings settings) throws HibernateException {
 
 		log.info("instantiating and configuring caches");
-
+		
+		String prefix = properties.getProperty(Environment.CACHE_REGION_PREFIX);
+		
 		Iterator iter = caches.entrySet().iterator();
 		while ( iter.hasNext() ) {
 			Map.Entry me = (Map.Entry) iter.next();
 			String name = (String) me.getKey();
+			if (prefix != null)
+			    name = prefix + "." + name;
 			CacheConcurrencyStrategy strat = (CacheConcurrencyStrategy) me.getValue();
 			if ( log.isDebugEnabled() ) log.debug("instantiating cache " + name);
 			Cache cache;
Index: Environment.java
===================================================================
retrieving revision 1.1
diff -u -r1.1 Environment.java
--- Environment.java	17 Dec 2003 12:45:59 -0000	1.1
+++ Environment.java	17 Dec 2003 13:44:35 -0000
@@ -1,4 +1,4 @@
-//$Id: Environment.java,v 1.1 2003/12/17 12:45:59 drai Exp $
+//$Id: Environment.java,v 1.18.2.18 2003/12/11 08:24:58 oneovthafew Exp $
 package net.sf.hibernate.cfg;
 
 import java.io.InputStream;
@@ -359,6 +359,10 @@
 	 * The <tt>CacheProvider</tt> implementation class
 	 */
 	public static final String USE_QUERY_CACHE = "hibernate.cache.use_query_cache";
+	/**
+	 * The <tt>CacheProvider</tt> region name prefix
+	 */
+	public static final String CACHE_REGION_PREFIX = "hibernate.cache.region_prefix";
 	
 	/**
 	 * Use CGLIB <tt>MetaClass</tt> to optimize property access
