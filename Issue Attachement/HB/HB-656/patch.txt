Index: src/net/sf/hibernate/tool/hbm2ddl/SchemaExport.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/tool/hbm2ddl/SchemaExport.java,v
retrieving revision 1.11.2.6
diff -u -r1.11.2.6 SchemaExport.java
--- src/net/sf/hibernate/tool/hbm2ddl/SchemaExport.java	16 Dec 2003 00:24:48 -0000	1.11.2.6
+++ src/net/sf/hibernate/tool/hbm2ddl/SchemaExport.java	28 Jan 2004 15:01:31 -0000
@@ -124,31 +124,30 @@
 				statement = connection.createStatement();
 			}
 			
+			// ignore delimiter when dropping tables.
 			for (int i = 0; i < dropSQL.length; i++) {
 				try {
-					String formatted = dropSQL[i];
-					if (delimiter!=null) formatted += delimiter;
-					if (script) System.out.println(formatted);
-					log.debug(formatted);
-					if (outputFile != null) fileOutput.write( formatted + "\n" );
+					if (script) System.out.println(dropSQL[i]);
+					log.debug(dropSQL[i]);
+					if (outputFile != null) fileOutput.write( dropSQL[i] + "\n" );
 					if (export) statement.executeUpdate( dropSQL[i] );
 				}
 				catch(SQLException e) {
 					log.debug( "Unsuccessful: " + dropSQL[i] );
 					log.debug( e.getMessage() );
 				}
-				
 			}
 			
+			// use delimiter when creating tables.
 			if (!justDrop) {
 				for(int j = 0; j < createSQL.length; j++) {
 					try {
 						String formatted = format ? format( createSQL[j] ) : createSQL[j];
-						if (delimiter!=null) formatted += delimiter;
+						if (delimiter!=null) formatted += (" " + delimiter);
 						if (script) System.out.println(formatted);
 						log.debug(formatted);
 						if (outputFile != null) fileOutput.write( formatted + "\n" );
-						if (export) statement.executeUpdate( createSQL[j] );
+						if (export) statement.executeUpdate( formatted );
 					}
 					catch (SQLException e) {
 						log.error( "Unsuccessful: " + createSQL[j] );
