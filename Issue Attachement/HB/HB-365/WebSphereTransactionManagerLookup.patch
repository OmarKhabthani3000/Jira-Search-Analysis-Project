Index: src/net/sf/hibernate/transaction/WebSphereTransactionManagerLookup.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/transaction/WebSphereTransactionManagerLookup.java,v
retrieving revision 1.5
diff -u -r1.5 WebSphereTransactionManagerLookup.java
--- src/net/sf/hibernate/transaction/WebSphereTransactionManagerLookup.java	15 May 2003 15:13:40 -0000	1.5
+++ src/net/sf/hibernate/transaction/WebSphereTransactionManagerLookup.java	26 Sep 2003 09:53:44 -0000
@@ -1,6 +1,7 @@
 //$Id: WebSphereTransactionManagerLookup.java,v 1.5 2003/05/15 15:13:40 oneovthafew Exp $
 package net.sf.hibernate.transaction;
 
+import java.lang.reflect.Method;
 import java.util.Properties;
 
 import javax.transaction.TransactionManager;
@@ -23,18 +24,19 @@
 	 */
 	public TransactionManager getTransactionManager(Properties props) throws HibernateException {
 		try {
-			Class clazz=null;
+			Class clazz;
+			Method method;
 			try {
 				clazz = Class.forName("com.ibm.ejs.jts.jta.JTSXA");
+				method = clazz.getMethod("getTransactionManager", null);
 				log.info("WebSphere 4");
 			}
 			catch (Exception e) {
-				clazz = Class.forName("com.ibm.ejcs.jts.jta.JTSXA");
+				clazz = Class.forName("com.ibm.ejs.jts.jta.TransactionManagerFactory");
+				method = clazz.getMethod("getTransactionManager", null);
 				log.info("WebSphere 5");
 			}
-			return (TransactionManager) clazz
-				.getMethod("getTransactionManager", null)
-				.invoke(null, null);
+			return (TransactionManager) method.invoke(null, null);
 		}
 		catch (Exception e) {
 			throw new HibernateException( "Could not obtain WebSphere JTSXA instance", e );
