Index: src/net/sf/hibernate/impl/IteratorImpl.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/impl/IteratorImpl.java,v
retrieving revision 1.5
diff -u -r1.5 IteratorImpl.java
--- src/net/sf/hibernate/impl/IteratorImpl.java	21 May 2003 12:10:34 -0000	1.5
+++ src/net/sf/hibernate/impl/IteratorImpl.java	20 Jun 2003 06:13:04 -0000
@@ -24,7 +24,8 @@
 	private final Type[] types;
 	private final boolean single;
 	private Object[] nextResults;
-	private Object[] currentResults;
+	private Object nextResult;
+	private Object currentResult;
 	private boolean hasNext;
 	private final String[][] names;
 	private final PreparedStatement ps;
@@ -52,9 +53,14 @@
 		}
 		else {
 			log.debug("retrieving next results");
-			nextResults = new Object[types.length];
-			for (int i=0; i<types.length; i++) {
-				nextResults[i] = types[i].nullSafeGet( rs, names[i], sess, null );
+			if (single) {
+				nextResult = types[0].nullSafeGet(rs, names[0], sess, null);
+			} else {
+				nextResults = new Object[types.length];
+				for (int i=0; i<types.length; i++) {
+					nextResults[i] = types[i].nullSafeGet( rs, names[i], sess, null );
+				}
+				nextResult = nextResults;
 			}
 		}
 	}
@@ -64,17 +70,12 @@
 	}
 	
 	public Object next() {
-		if ( nextResults==null ) throw new NoSuchElementException("No more results");
+		if ( nextResult==null ) throw new NoSuchElementException("No more results");
 		try {
-			currentResults = nextResults;
+			currentResult = nextResult;
 			postNext( rs.next() );
 			log.debug("returning current results");
-			if (single) {
-				return currentResults[0];
-			}
-			else {
-				return currentResults;
-			}
+			return currentResult;
 		}
 		catch (Exception sqle) {
 			log.error("could not get next result", sqle);
@@ -84,9 +85,9 @@
 	
 	public void remove() {
 		if (!single) throw new UnsupportedOperationException("Not a single column hibernate query result set");
-		if (currentResults==null) throw new IllegalStateException("Called Iterator.remove() before next()");
+		if (currentResult==null) throw new IllegalStateException("Called Iterator.remove() before next()");
 		try {
-			sess.delete( currentResults[0] );
+			sess.delete( currentResult );
 		}
 		catch (Exception sqle) {
 			log.error("could not remove", sqle);
