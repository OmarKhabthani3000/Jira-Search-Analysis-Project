Index: FooBarTest.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/test/FooBarTest.java,v
retrieving revision 1.83.2.30
diff -w -u -r1.83.2.30 FooBarTest.java
--- FooBarTest.java     8 Sep 2003 01:38:06 -0000       1.83.2.30
+++ FooBarTest.java     13 Sep 2003 20:29:57 -0000
@@ -21,6 +21,7 @@
 import junit.framework.Test;
 import junit.framework.TestSuite;
 import net.sf.hibernate.engine.SessionFactoryImplementor;
+import net.sf.hibernate.expression.Example;
 import net.sf.hibernate.expression.Expression;
 import net.sf.hibernate.expression.Order;
 import net.sf.hibernate.Criteria;
@@ -929,6 +930,31 @@
                        .add( Expression.isNotNull("boolean") )
                        .list();
                assertTrue( list.size()==1 && list.get(0)==f );
+
+               Foo example = new Foo();
+               example.setString("a STRing");
+
+               list = s.createCriteria(Foo.class).add(
+                       Example.create(example)
+                               .excludeZeroes()
+                               .ignoreCase()
+                               .excludeProperty("bool")
+                               .excludeProperty("char")
+                               .excludeProperty("yesno"))
+                       .list();
+               assertTrue( "Example API without like did not work correctly, size was " + list.size(), list.size()==1 && list.get(0)==f );
+
+               example.setString("rin");
+
+               list = s.createCriteria(Foo.class).add(
+                       Example.create(example)
+                               .excludeZeroes()
+                               .enableLike(Example.MATCH_ANYWHERE)
+                               .excludeProperty("bool")
+                               .excludeProperty("char")
+                               .excludeProperty("yesno"))
+                       .list();
+               assertTrue( "Example API without like did not work correctly, size was " + list.size(), list.size()==1 && list.get(0)==f );

                list = s.createCriteria(Foo.class)
                        .add( Expression.or(
