<hibernate-mapping default-cascade="save-update">
    <class name="system.Document" table="KMS_DOCUMENT">
        <!-- do not proxy, abstract class -->

        <cache usage="nonstrict-read-write"/>

        <id name="id" unsaved-value="0">
            <generator class="com.proinsight.objects.IdentifierGenerator"/>
        </id>

        <discriminator column="TYPE" type="string"/>

        <property name="name"/>
        <property name="description"/>
        <property name="createdById" column="CREATED_BY"/>
        <property name="creationTime" column="CREATION_TIME"/>
        <property name="modifiedById" column="MODIFIED_BY"/>
        <property name="modificationTime" column="MODIFICATION_TIME"/>

        <property name="container" column="IS_CONTAINER"/>

        <property name="permission"/>

        <many-to-one name="owner" column="OWNER_ID"/>
        <many-to-one name="department" column="DEPARTMENT_ID"/>
        <many-to-one name="parent" column="PARENT_ID"/>

        <map name="permissions" table="KMS_PERMISSION" lazy="true">
            <key column="DOCUMENT_ID"/>
            <index-many-to-many class="system.Role" column="ROLE_ID"/>
            <element column="PERMISSION" type="string"/>
        </map>

        <subclass name="system.FileDocument" discriminator-value="file" lazy="true">
            <set name="versions" sort="natural" inverse="true" lazy="true">
                <key column="DOCUMENT_ID"/>
                <one-to-many class="system.Version"/>
            </set>
        </subclass>

        <subclass name="system.Link" discriminator-value="link" lazy="true">
            <property name="url" column="LINK_URL"/>
        </subclass>

        <subclass name="system.Message" discriminator-value="message" lazy="true">
            <one-to-one name="detail" cascade="all"/>
        </subclass>

        <subclass name="system.Topic" discriminator-value="topic" lazy="true"/>

        <subclass name="system.Folder" discriminator-value="folder" lazy="true"/>
    </class>

    <class name="system.Version" table="KMS_VERSION">
        <!-- do not proxy, not needed -->

        <!-- do not cache, contains a blob -->

        <id name="id" unsaved-value="0">
            <generator class="com.proinsight.objects.IdentifierGenerator"/>
        </id>

        <property name="name"/>
        <property name="description"/>
        <property name="createdById" column="CREATED_BY"/>
        <property name="creationTime" column="CREATION_TIME"/>
        <property name="modifiedById" column="MODIFIED_BY"/>
        <property name="modificationTime" column="MODIFICATION_TIME"/>

        <property name="mimeType" column="MIME_TYPE"/>
        <property name="content"/>

        <many-to-one name="document" column="DOCUMENT_ID" cascade="none"/>
    </class>
</hibernate-mapping>

2003-11-20 09:57:48,878 ERROR [net.sf.hibernate.util.JDBCExceptionReporter] [Microsoft][SQLServer 2000 Driver for JDBC]ResultSet can not re-read row data for column 2.
2003-11-20 09:57:48,888 ERROR [net.sf.hibernate.util.JDBCExceptionReporter] could not initialize collection: [system.FileDocument.versions#1017]
java.sql.SQLException: [Microsoft][SQLServer 2000 Driver for JDBC]ResultSet can not re-read row data for column 2.
	at com.microsoft.jdbc.base.BaseExceptions.createException(Unknown Source)
	at com.microsoft.jdbc.base.BaseExceptions.getException(Unknown Source)
	at com.microsoft.jdbc.base.BaseResultSet.validateColumnIndex(Unknown Source)
	at com.microsoft.jdbc.base.BaseResultSet.getLong(Unknown Source)
	at com.microsoft.jdbc.base.BaseResultSet.getLong(Unknown Source)
	at net.sf.hibernate.type.LongType.get(LongType.java:14)
	at net.sf.hibernate.type.NullableType.nullSafeGet(NullableType.java:62)
	at net.sf.hibernate.type.NullableType.nullSafeGet(NullableType.java:53)
	at net.sf.hibernate.collection.AbstractCollectionPersister.readKey(AbstractCollectionPersister.java:801)
	at net.sf.hibernate.loader.Loader.readCollectionElement(Loader.java:233)
	at net.sf.hibernate.loader.Loader.doResultSet(Loader.java:195)
	at net.sf.hibernate.loader.Loader.doFind(Loader.java:111)
	at net.sf.hibernate.loader.Loader.loadCollection(Loader.java:722)
	at net.sf.hibernate.loader.Loader.loadCollection(Loader.java:705)
	at net.sf.hibernate.loader.OneToManyLoader.initialize(OneToManyLoader.java:80)
	at net.sf.hibernate.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:611)
	at net.sf.hibernate.impl.SessionImpl.initialize(SessionImpl.java:3267)
	at net.sf.hibernate.collection.PersistentCollection.initialize(PersistentCollection.java:199)
	at net.sf.hibernate.collection.PersistentCollection.read(PersistentCollection.java:69)
	at net.sf.hibernate.collection.Set.size(Set.java:107)
	at system.FileDocument.getVersion(FileDocument.java:40)
	at system.FileDocument$$EnhancedByCGLIB$$10$$ProxiedByCGLIB$$675.invoke(<generated>)
	at net.sf.hibernate.proxy.CGLIBLazyInitializer.intercept(CGLIBLazyInitializer.java:75)
	at system.FileDocument$$EnhancedByCGLIB$$10.getVersion(<generated>)
...
2003-11-20 09:57:48,968 ERROR [net.sf.hibernate.collection.PersistentCollection] Failed to lazily initialize a collection
net.sf.hibernate.JDBCException: could not initialize collection: [system.FileDocument.versions#1017]
	at net.sf.hibernate.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:617)
	at net.sf.hibernate.impl.SessionImpl.initialize(SessionImpl.java:3267)
	at net.sf.hibernate.collection.PersistentCollection.initialize(PersistentCollection.java:199)
	at net.sf.hibernate.collection.PersistentCollection.read(PersistentCollection.java:69)
	at net.sf.hibernate.collection.Set.size(Set.java:107)
	at system.FileDocument.getVersion(FileDocument.java:40)
	at system.FileDocument$$EnhancedByCGLIB$$10$$ProxiedByCGLIB$$675.invoke(<generated>)
	at net.sf.hibernate.proxy.CGLIBLazyInitializer.intercept(CGLIBLazyInitializer.java:75)
	at system.FileDocument$$EnhancedByCGLIB$$10.getVersion(<generated>)
...
Caused by: java.sql.SQLException: [Microsoft][SQLServer 2000 Driver for JDBC]ResultSet can not re-read row data for column 2.
	at com.microsoft.jdbc.base.BaseExceptions.createException(Unknown Source)
	at com.microsoft.jdbc.base.BaseExceptions.getException(Unknown Source)
	at com.microsoft.jdbc.base.BaseResultSet.validateColumnIndex(Unknown Source)
	at com.microsoft.jdbc.base.BaseResultSet.getLong(Unknown Source)
	at com.microsoft.jdbc.base.BaseResultSet.getLong(Unknown Source)
	at net.sf.hibernate.type.LongType.get(LongType.java:14)
	at net.sf.hibernate.type.NullableType.nullSafeGet(NullableType.java:62)
	at net.sf.hibernate.type.NullableType.nullSafeGet(NullableType.java:53)
	at net.sf.hibernate.collection.AbstractCollectionPersister.readKey(AbstractCollectionPersister.java:801)
	at net.sf.hibernate.loader.Loader.readCollectionElement(Loader.java:233)
	at net.sf.hibernate.loader.Loader.doResultSet(Loader.java:195)
	at net.sf.hibernate.loader.Loader.doFind(Loader.java:111)
	at net.sf.hibernate.loader.Loader.loadCollection(Loader.java:722)
	at net.sf.hibernate.loader.Loader.loadCollection(Loader.java:705)
	at net.sf.hibernate.loader.OneToManyLoader.initialize(OneToManyLoader.java:80)
	at net.sf.hibernate.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:611)
	... 113 more
