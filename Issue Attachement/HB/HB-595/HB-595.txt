Index: hibernate.properties
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/hibernate.properties,v
retrieving revision 1.19
diff -u -r1.19 hibernate.properties
--- hibernate.properties	15 Jun 2003 08:15:22 -0000	1.19
+++ hibernate.properties	2 Jan 2004 16:43:30 -0000
@@ -41,6 +41,18 @@
 #hibernate.connection.username db2
 #hibernate.connection.password db2
 
+## DB2/400 
+
+#hibernate.dialect net.sf.hibernate.dialect.DB2400Dialect 
+## Native driver
+##hibernate.connection.driver_class COM.ibm.db2.jdbc.app.DB2Driver 
+##hibernate.connection.url jdbc:db2://systemname
+## or Toolbox driver
+##hibernate.connection.driver_class com.ibm.as400.access.AS400JDBCDriver 
+##hibernate.connection.url jdbc:as400://systemname
+#hibernate.connection.username user
+#hibernate.connection.password password 
+
 
 ## MySQL
 
Index: net/sf/hibernate/dialect/DB2400Dialect.java
===================================================================
RCS file: net/sf/hibernate/dialect/DB2400Dialect.java
diff -N net/sf/hibernate/dialect/DB2400Dialect.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ net/sf/hibernate/dialect/DB2400Dialect.java	2 Jan 2004 16:43:32 -0000
@@ -0,0 +1,48 @@
+package net.sf.hibernate.dialect;
+
+/** 
+* An SQL dialect for DB2/400 
+* @author Peter DeGregorio (pdegregorio) 
+* This class provides support for DB2 Universal Database for iSeries, 
+* also known as DB2/400. 
+*/
+public class DB2400Dialect extends DB2Dialect {
+
+   public DB2400Dialect() {
+      super();
+   }
+
+   public boolean supportsIdentityColumns() {
+      return false;
+   }
+
+   public boolean supportsSequences() {
+      return false;
+   }
+
+   public boolean supportsLimit() {
+      return true;
+   }
+
+   public boolean supportsLimitOffset() {
+      return false;
+   }
+
+   public String getLimitString(String sql, boolean hasOffset, int limit) {
+      return new StringBuffer(sql.length() + 40)
+         .append(sql)
+         .append(" fetch first ")
+         .append(limit)
+         .append(" rows only ")
+         .toString();
+   }
+
+   public boolean useMaxForLimit() {
+      return true;
+   }
+
+   public boolean supportsVariableLimit() {
+      return false;
+   }
+
+}
