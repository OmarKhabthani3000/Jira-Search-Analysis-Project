*** AbstractQueryImpl.java	2003-11-29 05:28:19.000000000 -0500
--- AbstractQueryImpl.java	2003-12-28 15:38:30.000000000 -0500
***************
*** 462,471 ****
--- 462,495 ----
  
  		actualNamedParameters = result;
  		positionalParameterCount = StringHelper.countUnquoted(queryString, '?');
  	}
  
+         public Query setProperties(Object bean) throws HibernateException {
+                Class clazz = bean.getClass();
+                String[] params = getNamedParameters();
+                for (int i = 0; i < params.length; i++) {
+                        String namedParam = params[i];
+                        try {
+                                Getter getter = ReflectHelper.getter(clazz, namedParam);
+                                Class retType = getter.getReturnType();
+                                if (retType.isArray() ||
+                                    retType instanceof java.util.Collection) {
+                                        setParameterList( namedParam, getter.get(bean) );
+                                }
+                                else {
+                                        setParameter( namedParam, getter.get(bean),
+                                                      guessType( getter.getReturnType() ) );
+                                }
+                        }
+                        catch (PropertyNotFoundException pnfe) {
+                                // shouldn't something be logged here....?
+                        }
+                }
+                return this;
+         } 
+ 
  	public Query setProperties(Object bean) throws HibernateException {
  		Class clazz = bean.getClass();
  		String[] params = getNamedParameters();
  		for (int i = 0; i < params.length; i++) {
  			String namedParam = params[i];
