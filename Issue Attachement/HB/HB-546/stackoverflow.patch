Index: src/net/sf/hibernate/proxy/CGLIBLazyInitializer.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/proxy/CGLIBLazyInitializer.java,v
retrieving revision 1.9.2.9
diff -u -r1.9.2.9 CGLIBLazyInitializer.java
--- src/net/sf/hibernate/proxy/CGLIBLazyInitializer.java	11 Dec 2003 07:39:14 -0000	1.9.2.9
+++ src/net/sf/hibernate/proxy/CGLIBLazyInitializer.java	12 Dec 2003 05:24:11 -0000
@@ -113,7 +113,7 @@
 		}
 		else {
 			//while constructor is running
-			return proxy.invoke(obj, args);
+			return proxy.invokeSuper(obj, args);
 		}
 	}
 	
@@ -123,7 +123,7 @@
 	
 	private static final MethodInterceptor NULL_METHOD_INTERCEPTOR = new MethodInterceptor() {
 		public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable { 
-			return proxy.invoke(obj, args); 
+			return proxy.invokeSuper(obj, args); 
 		}
 	};
 }
Index: test/org/hibernate/test/D.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/test/org/hibernate/test/Attic/D.java,v
retrieving revision 1.1.2.1
diff -u -r1.1.2.1 D.java
--- test/org/hibernate/test/D.java	8 Nov 2003 02:25:29 -0000	1.1.2.1
+++ test/org/hibernate/test/D.java	12 Dec 2003 05:24:11 -0000
@@ -4,6 +4,12 @@
 	private Long id;
 	private float amount;
 	private A reverse;
+
+	public D() {
+		// try to induce an infinite loop in the lazy-loading machinery
+		getAmount();
+	}
+	
 	/**
 	 * Returns the amount.
 	 * @return float
