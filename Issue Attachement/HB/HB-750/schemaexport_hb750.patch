Index: SchemaExport.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/tool/hbm2ddl/SchemaExport.java,v
retrieving revision 1.11.2.5.2.1
retrieving revision 1.11.2.5.2.2
diff -u -r1.11.2.5.2.1 -r1.11.2.5.2.2
--- SchemaExport.java	28 Jan 2004 22:49:38 -0000	1.11.2.5.2.1
+++ SchemaExport.java	1 Mar 2004 17:23:14 -0000	1.11.2.5.2.2
@@ -1,4 +1,4 @@
-//$Id: SchemaExport.java,v 1.11.2.5.2.1 2004/01/28 22:49:38 steveebersole Exp $
+//$Id: SchemaExport.java,v 1.11.2.5.2.2 2004/03/01 17:23:14 gloeglm Exp $
 package net.sf.hibernate.tool.hbm2ddl;
 
 import java.io.FileInputStream;
@@ -7,6 +7,8 @@
 import java.sql.Connection;
 import java.sql.SQLException;
 import java.sql.Statement;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Properties;
 import java.util.StringTokenizer;
 
@@ -40,6 +42,7 @@
 	private String outputFile = null;
 	private Dialect dialect;
 	private String delimiter;
+   private List exceptions;
 	
 	/**
 	 * Create a schema exporter for the given Configuration
@@ -57,6 +60,7 @@
 		dialect = Dialect.getDialect(connectionProperties);
 		dropSQL = cfg.generateDropSchemaScript(dialect);
 		createSQL = cfg.generateSchemaCreationScript(dialect);
+       exceptions = new ArrayList();
 	}
 	
 	/**
@@ -102,6 +106,8 @@
 		ConnectionProvider connectionProvider = null;
 		Statement statement = null;
 		
+       exceptions.clear();
+        
 		Properties props = new Properties();
 		props.putAll( dialect.getDefaultProperties() );
 		props.putAll(connectionProperties);
@@ -134,6 +140,7 @@
 					if (export) statement.executeUpdate( dropSQL[i] );
 				}
 				catch(SQLException e) {
+                   exceptions.add(e);
 					log.debug( "Unsuccessful: " + dropSQL[i] );
 					log.debug( e.getMessage() );
 				}
@@ -151,6 +158,7 @@
 						if (export) statement.executeUpdate( createSQL[j] );
 					}
 					catch (SQLException e) {
+                       exceptions.add(e);
 						log.error( "Unsuccessful: " + createSQL[j] );
 						log.error( e.getMessage() );
 					}
@@ -162,6 +170,7 @@
 		}
 		
 		catch(Exception e) {
+           exceptions.add(e);
 			log.error("schema export unsuccessful", e);
 		}
 		
@@ -177,6 +186,7 @@
 				}
 			}
 			catch(Exception e) {
+               exceptions.add(e);
 				log.error( "Could not close connection", e );
 			}
 			
@@ -184,6 +194,7 @@
 				if (fileOutput!=null) fileOutput.close();
 			}
 			catch (IOException ioe) {
+               exceptions.add(ioe);
 				log.error( "Error closing output file: " + outputFile, ioe );
 			}
 				
@@ -311,6 +322,14 @@
 			e.printStackTrace();
 		}
 	}
+    
+   /**
+    * Returns a List of all Exceptions which occured during the export.
+    * @return A List containig the Exceptions occured during the export
+    */
+   public List getExceptions() {
+       return exceptions;
+   }
 }