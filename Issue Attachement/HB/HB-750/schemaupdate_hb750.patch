Index: SchemaUpdate.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/tool/hbm2ddl/SchemaUpdate.java,v
retrieving revision 1.9.2.5.2.2
retrieving revision 1.9.2.5.2.3
diff -u -r1.9.2.5.2.2 -r1.9.2.5.2.3
--- SchemaUpdate.java	30 Jan 2004 17:50:29 -0000	1.9.2.5.2.2
+++ SchemaUpdate.java	1 Mar 2004 17:23:14 -0000	1.9.2.5.2.3
@@ -1,10 +1,12 @@
-//$Id: SchemaUpdate.java,v 1.9.2.5.2.2 2004/01/30 17:50:29 steveebersole Exp $
+//$Id: SchemaUpdate.java,v 1.9.2.5.2.3 2004/03/01 17:23:14 gloeglm Exp $
 package net.sf.hibernate.tool.hbm2ddl;
 
 import java.io.FileInputStream;
 import java.sql.Connection;
 import java.sql.SQLException;
 import java.sql.Statement;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Properties;
 
 import net.sf.hibernate.HibernateException;
@@ -30,6 +32,7 @@
 	private ConnectionProvider connectionProvider;
 	private Configuration configuration;
 	private Dialect dialect;
+   private List exceptions;
 
 	public SchemaUpdate(Configuration cfg) throws HibernateException {
 		this( cfg, cfg.getProperties() );
@@ -42,6 +45,7 @@
 		props.putAll( dialect.getDefaultProperties() );
 		props.putAll(connectionProperties);
 		connectionProvider = ConnectionProviderFactory.newConnectionProvider(props);
+       exceptions = new ArrayList();
 	}
 
 	public static void main(String[] args) {
@@ -104,6 +108,9 @@
 		Connection connection=null;
 		DatabaseMetadata meta;
 		Statement stmt=null;
+        
+       exceptions.clear();
+        
 		try {
 
 			try {
@@ -117,6 +124,7 @@
 				stmt = connection.createStatement();
 			}
 			catch (SQLException sqle) {
+               exceptions.add(sqle);
 				log.error("could not get database metadata", sqle);
 				throw sqle;
 			}
@@ -135,6 +143,7 @@
 					}
 				}
 				catch (SQLException e) {
+                   exceptions.add(e);
 					log.error( "Unsuccessful: " + sql );
 					log.error( e.getMessage() );
 				}
@@ -144,6 +153,7 @@
 
 		}
 		catch (Exception e) {
+           exceptions.add(e);
 			log.error("could not complete schema update", e);
 		}
 		finally {
@@ -154,11 +164,20 @@
 				if (connectionProvider!=null) connectionProvider.close();
 			}
 			catch (Exception e) {
+               exceptions.add(e);
 				log.error("Error closing connection", e);
 			}
 
 		}
 	}
+
+   /**
+    * Returns a List of all Exceptions which occured during the export.
+    * @return A List containig the Exceptions occured during the export
+    */
+   public List getExceptions() {
+       return exceptions;
+   }
 }