Index: BooleanType.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate2/src/net/sf/hibernate/type/BooleanType.java,v
retrieving revision 1.5.2.2
diff -u -r1.5.2.2 BooleanType.java
--- BooleanType.java	30 Oct 2003 06:19:31 -0000	1.5.2.2
+++ BooleanType.java	21 Nov 2003 20:27:28 -0000
@@ -6,6 +6,8 @@
 import java.sql.SQLException;
 import java.sql.Types;
 
+import net.sf.hibernate.HibernateException;
+
 // Had to use setShort / getShort instead of setBoolean / getBoolean
 // to work around a HypersonicSQL driver bug
 
@@ -14,8 +16,8 @@
 	private static final String TRUE = "1";
 	private static final String FALSE = "0";
 	
-	public Object get(ResultSet rs, String name) throws SQLException {
-		return new Boolean( rs.getBoolean(name) );
+	public Object get(ResultSet rs, String name) throws HibernateException, SQLException {
+		return rs.getBoolean(name) ? Boolean.TRUE : Boolean.FALSE;
 	}
 	
 	public Class getPrimitiveClass() {
@@ -43,16 +45,11 @@
 	}
 	
 	public Object stringToObject(String xml) throws Exception {
-		return new Boolean(xml);
+		return fromString(xml);
 	}
 	
 	public Object fromString(String xml) {
-		return new Boolean(xml);
+		return Boolean.getBoolean(xml) ? Boolean.TRUE : Boolean.FALSE;
 	}
 	
 }
-
-
-
-
-
Index: CharBooleanType.java
===================================================================
RCS file: CharBooleanType.java
diff -N CharBooleanType.java
--- CharBooleanType.java	5 Jan 2003 02:11:24 -0000	1.4
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,63 +0,0 @@
-//$Id: CharBooleanType.java,v 1.4 2003/01/05 02:11:24 oneovthafew Exp $
-package net.sf.hibernate.type;
-
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Types;
-
-import net.sf.hibernate.HibernateException;
-
-
-/** Alternative boolean types.
- */
-public abstract class CharBooleanType extends BooleanType {
-	
-	protected abstract String getTrueString();
-	protected abstract String getFalseString();
-	
-	public Object get(ResultSet rs, String name) throws SQLException {
-		String code = rs.getString(name);
-		if (code==null) {
-			return null;
-		}
-		else {
-			return new Boolean( code.toUpperCase().equals( getTrueString() ) );
-		}
-	}
-	
-	public void set(PreparedStatement st, Object value, int index)
-	throws SQLException {
-		st.setString( index, ( ( (Boolean) value ).booleanValue() ? getTrueString() : getFalseString() ) );
-		
-	}
-	
-	public int sqlType() {
-		return Types.CHAR;
-	}
-	
-	
-	public String objectToSQLString(Object value) throws Exception {
-		return "'" + ( ( ( (Boolean) value ).booleanValue() ) ? getTrueString() : getFalseString() ) + "'";
-	}
-	
-	public Object stringToObject(String xml) throws Exception {
-		if ( getTrueString().equals(xml) ) {
-			return Boolean.TRUE;
-		}
-		else if ( getFalseString().equals(xml) ) {
-			return Boolean.FALSE;
-		}
-		else {
-			throw new HibernateException("Could not interpret: " + xml);
-		}
-	}
-	
-}
-
-
-
-
-
-
-
