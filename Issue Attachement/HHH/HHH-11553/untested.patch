diff --git a/hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java b/hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java
index 9b1b4af..6b8ae45 100644
--- a/hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java
+++ b/hibernate-core/src/main/java/org/hibernate/jpa/boot/internal/PersistenceXmlParser.java
@@ -260,27 +260,27 @@ public class PersistenceXmlParser {
 						continue;
 					}
 
+					Properties properties = persistenceUnit.getProperties();
+					ConfigurationHelper.overrideProperties( properties, integration );
+
 					// per JPA spec, any settings passed in to PersistenceProvider bootstrap methods should override
 					// values found in persistence.xml
-					if ( integration.containsKey( AvailableSettings.JPA_PERSISTENCE_PROVIDER ) ) {
-						persistenceUnit.setProviderClassName( (String) integration.get( AvailableSettings.JPA_PERSISTENCE_PROVIDER ) );
+					if ( properties.containsKey( AvailableSettings.JPA_PERSISTENCE_PROVIDER ) ) {
+						persistenceUnit.setProviderClassName( (String) properties.get( AvailableSettings.JPA_PERSISTENCE_PROVIDER ) );
 					}
-					if ( integration.containsKey( AvailableSettings.JPA_TRANSACTION_TYPE ) ) {
-						String transactionType = (String) integration.get( AvailableSettings.JPA_TRANSACTION_TYPE );
+					if ( properties.containsKey( AvailableSettings.JPA_TRANSACTION_TYPE ) ) {
+						String transactionType = (String) properties.get( AvailableSettings.JPA_TRANSACTION_TYPE );
 						persistenceUnit.setTransactionType( parseTransactionType( transactionType ) );
 					}
-					if ( integration.containsKey( AvailableSettings.JPA_JTA_DATASOURCE ) ) {
-						persistenceUnit.setJtaDataSource( integration.get( AvailableSettings.JPA_JTA_DATASOURCE ) );
+					if ( properties.containsKey( AvailableSettings.JPA_JTA_DATASOURCE ) ) {
+						persistenceUnit.setJtaDataSource( properties.get( AvailableSettings.JPA_JTA_DATASOURCE ) );
 					}
-					if ( integration.containsKey( AvailableSettings.JPA_NON_JTA_DATASOURCE ) ) {
-						persistenceUnit.setNonJtaDataSource( integration.get( AvailableSettings.JPA_NON_JTA_DATASOURCE ) );
+					if ( properties.containsKey( AvailableSettings.JPA_NON_JTA_DATASOURCE ) ) {
+						persistenceUnit.setNonJtaDataSource( properties.get( AvailableSettings.JPA_NON_JTA_DATASOURCE ) );
 					}
 
 					decodeTransactionType( persistenceUnit );
 
-					Properties properties = persistenceUnit.getProperties();
-					ConfigurationHelper.overrideProperties( properties, integration );
-
 					persistenceUnits.put( persistenceUnit.getName(), persistenceUnit );
 				}
 			}
