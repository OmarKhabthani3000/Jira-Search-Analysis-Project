Index: hibernate-core/src/main/java/org/hibernate/tuple/component/AbstractCompositionAttribute.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hibernate-core/src/main/java/org/hibernate/tuple/component/AbstractCompositionAttribute.java	(date 1508417087000)
+++ hibernate-core/src/main/java/org/hibernate/tuple/component/AbstractCompositionAttribute.java	(date 1513253559000)
@@ -83,6 +83,11 @@
 						int columnPosition = currentColumnPosition;
 						currentColumnPosition += type.getColumnSpan( sessionFactory() );
 
+						final CompositeType cType = getType();
+						final boolean nullable =
+							cType.getPropertyNullability() == null ||
+							cType.getPropertyNullability()[subAttributeNumber];
+
 						if ( type.isAssociationType() ) {
 							// we build the association-key here because of the "goofiness" with 'currentColumnPosition'
 							final AssociationKey associationKey;
@@ -134,11 +139,6 @@
 								);
 							}
 
-							final CompositeType cType = getType();
-							final boolean nullable =
-									cType.getPropertyNullability() == null ||
-											cType.getPropertyNullability()[subAttributeNumber];
-
 							return new CompositeBasedAssociationAttribute(
 									AbstractCompositionAttribute.this,
 									sessionFactory(),
@@ -173,7 +173,7 @@
 											.setUpdateable( AbstractCompositionAttribute.this.isUpdateable() )
 											// todo : handle nested ValueGeneration strategies...
 											//		disallow if our strategy != NEVER
-											.setNullable( getType().getPropertyNullability()[subAttributeNumber] )
+											.setNullable( nullable )
 											.setDirtyCheckable( true )
 											.setVersionable( AbstractCompositionAttribute.this.isVersionable() )
 											.setCascadeStyle( getType().getCascadeStyle( subAttributeNumber ) )
@@ -182,9 +182,6 @@
 							);
 						}
 						else {
-							final CompositeType cType = getType();
-							final boolean nullable = cType.getPropertyNullability() == null || cType.getPropertyNullability()[subAttributeNumber];
-
 							return new CompositeBasedBasicAttribute(
 									AbstractCompositionAttribute.this,
 									sessionFactory(),
