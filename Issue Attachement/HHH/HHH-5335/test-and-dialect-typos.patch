Index: core/src/main/java/org/hibernate/dialect/Dialect.java
===================================================================
--- core/src/main/java/org/hibernate/dialect/Dialect.java	(revision 19799)
+++ core/src/main/java/org/hibernate/dialect/Dialect.java	(working copy)
@@ -1896,7 +1896,7 @@
 	}
 
 	/**
-	 * Does the dialect support propogating changes to LOB
+	 * Does the dialect support propagating changes to LOB
 	 * values back to the database?  Talking about mutating the
 	 * internal value of the locator as opposed to supplying a new
 	 * locator instance...
@@ -1918,7 +1918,7 @@
 	 * databases which (1) are not part of the cruise control process
 	 * or (2) do not {@link #supportsExpectedLobUsagePattern}.
 	 *
-	 * @return True if the changes are propogated back to the
+	 * @return True if the changes are propagated back to the
 	 * database; false otherwise.
 	 * @since 3.2
 	 */
Index: core/src/main/java/org/hibernate/dialect/SQLServerDialect.java
===================================================================
--- core/src/main/java/org/hibernate/dialect/SQLServerDialect.java	(revision 19799)
+++ core/src/main/java/org/hibernate/dialect/SQLServerDialect.java	(working copy)
@@ -147,7 +147,7 @@
 
 	public boolean supportsCircularCascadeDeleteConstraints() {
 		// SQL Server (at least up through 2005) does not support defining
-		// cascade delete constraints which can circel back to the mutating
+		// cascade delete constraints which can circle back to the mutating
 		// table
 		return false;
 	}
Index: testsuite/src/test/java/org/hibernate/test/jpa/lock/JPALockTest.java
===================================================================
--- testsuite/src/test/java/org/hibernate/test/jpa/lock/JPALockTest.java	(revision 19799)
+++ testsuite/src/test/java/org/hibernate/test/jpa/lock/JPALockTest.java	(working copy)
@@ -177,7 +177,7 @@
 		item2.setName( "updated" );
 		try {
 			t2.commit();
-			fail( "optimisitc lock should have failed" );
+			fail( "optimistic lock should have failed" );
 		}
 		catch (Throwable ignore) {
 			// expected behavior
Index: testsuite/src/test/java/org/hibernate/test/optlock/OptimisticLockTest.java
===================================================================
--- testsuite/src/test/java/org/hibernate/test/optlock/OptimisticLockTest.java	(revision 19799)
+++ testsuite/src/test/java/org/hibernate/test/optlock/OptimisticLockTest.java	(working copy)
@@ -12,7 +12,7 @@
 import org.hibernate.junit.functional.FunctionalTestClassTestSuite;
 
 /**
- * Tests relating to the optimisitc-lock mapping option.
+ * Tests relating to the optimistic-lock mapping option.
  *
  * @author Gavin King
  * @author Steve Ebersole
@@ -76,7 +76,7 @@
 		otherSession.close();
 
 		try {
-			doc.setSummary( "A machiavelian achievement of epic proportions" );
+			doc.setSummary( "A machiavellian achievement of epic proportions" );
 			mainSession.flush();
 			fail( "expecting opt lock failure" );
 		}
