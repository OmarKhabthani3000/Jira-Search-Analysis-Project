Index: PersistentList.java
===================================================================
--- PersistentList.java	(revision 10478)
+++ PersistentList.java	(working copy)
@@ -153,8 +153,14 @@
 		Boolean exists = isPutQueueEnabled() ?
 				readElementExistence(value) : null;
 		if ( exists==null ) {
-			write();
-			return list.remove(value);
+			initialize( true );
+			if ( list.remove( value ) ) {
+				dirty();
+				return true;
+			}
+			else {
+				return false;
+			}
 		}
 		else if ( exists.booleanValue() ) {
 			queueOperation( new SimpleRemove(value) );
@@ -208,9 +214,16 @@
 	 * @see java.util.List#removeAll(Collection)
 	 */
 	public boolean removeAll(Collection coll) {
-		if ( coll.size()>0 ) {
-			write();
-			return list.removeAll(coll);
+		if ( coll.size() > 0 ) {
+			initialize( true );
+			if ( list.removeAll( coll ) ) {
+				dirty();
+				return true;
+			}
+			else {
+				return false;
+			}
+		
 		}
 		else {
 			return false;
@@ -221,8 +234,13 @@
 	 * @see java.util.List#retainAll(Collection)
 	 */
 	public boolean retainAll(Collection coll) {
-		write();
-		return list.retainAll(coll);
+		if ( list.retainAll( coll ) ) {
+			dirty();
+			return true;
+		}
+		else {
+			return false;
+		}
 	}
 
 	/**
@@ -233,8 +251,11 @@
 			queueOperation( new Clear() );
 		}
 		else {
-			write();
-			list.clear();
+			initialize( true );
+			if ( !list.isEmpty() ) {
+				list.clear();
+				dirty();
+			}
 		}
 	}
 
