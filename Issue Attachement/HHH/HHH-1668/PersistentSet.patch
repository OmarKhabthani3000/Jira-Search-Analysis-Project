Index: PersistentSet.java
===================================================================
--- PersistentSet.java	(revision 10382)
+++ PersistentSet.java	(working copy)
@@ -165,8 +165,11 @@
 		Boolean exists = isOperationQueueEnabled() ?
 				readElementExistence(value) : null;
 		if (exists==null) {
-			write();
-			return set.add(value);
+			boolean result = set.add(value);
+			if (result) {
+				write();
+			}
+			return result;
 		}
 		else if ( exists.booleanValue() ) {
 			return false;
@@ -184,8 +187,11 @@
 		Boolean exists = isPutQueueEnabled() ?
 				readElementExistence(value) : null;
 		if ( exists==null ) {
-			write();
-			return set.remove(value);
+			boolean result = set.remove(value);
+			if (result) {
+				write();
+			}
+			return result;
 		}
 		else if ( exists.booleanValue() ) {
 			queueOperation( new SimpleRemove(value) );
@@ -209,8 +215,11 @@
 	 */
 	public boolean addAll(Collection coll) {
 		if ( coll.size()> 0 ) {
-			write();
-			return set.addAll(coll);
+			boolean result = set.addAll(coll);
+			if (result) {
+				write();
+			}
+			return result;
 		}
 		else {
 			return false;
@@ -221,8 +230,11 @@
 	 * @see java.util.Set#retainAll(Collection)
 	 */
 	public boolean retainAll(Collection coll) {
-		write();
-		return set.retainAll(coll);
+		boolean result = set.retainAll(coll);
+		if (result) {
+			write();
+		}
+		return result;
 	}
 
 	/**
@@ -230,8 +242,11 @@
 	 */
 	public boolean removeAll(Collection coll) {
 		if ( coll.size()>0 ) {
-			write();
-			return set.removeAll(coll);
+			boolean result = set.removeAll(coll);
+			if (result) {
+				write();
+			}
+			return result;
 		}
 		else {
 			return false;
