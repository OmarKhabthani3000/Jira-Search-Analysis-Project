Index: src/test/java/org/hibernate/ejb/test/User.java
===================================================================
--- src/test/java/org/hibernate/ejb/test/User.java	(revision 0)
+++ src/test/java/org/hibernate/ejb/test/User.java	(revision 0)
@@ -0,0 +1,58 @@
+package org.hibernate.ejb.test;
+
+import java.io.Serializable;
+import java.util.HashSet;
+import java.util.Set;
+
+import javax.persistence.Column;
+import javax.persistence.ElementCollection;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+import javax.persistence.Table;
+
+/**
+ * @author Pascal Thivent
+ */
+@SuppressWarnings( { "unchecked", "serial" })
+@Entity
+@Table(name = "USERS")
+public class User implements Serializable {
+	private Integer id;
+	private String username;
+	private Set<String> roles = new HashSet<String>();
+	
+	public User() {}
+	
+	public User(String username) {
+		this.username = username;
+	}
+	
+	@Id
+	@GeneratedValue
+	public Integer getId() {
+		return id;
+	}
+	
+	public void setId(Integer id) {
+		this.id = id;
+	}
+	
+	@Column(unique = true, nullable = false)
+	public String getUsername() {
+		return username;
+	}
+	
+	public void setUsername(String username) {
+		this.username = username;
+	}
+	
+	@ElementCollection
+	public Set<String> getRoles() {
+		return roles;
+	}
+	
+	public void setRoles(Set<String> roles) {
+		this.roles = roles;
+	}
+}

Property changes on: src/test/java/org/hibernate/ejb/test/User.java
___________________________________________________________________
Added: svn:eol-style
   + native

Index: src/test/java/org/hibernate/ejb/test/query/QueryTest.java
===================================================================
--- src/test/java/org/hibernate/ejb/test/query/QueryTest.java	(revision 19426)
+++ src/test/java/org/hibernate/ejb/test/query/QueryTest.java	(working copy)
@@ -4,6 +4,9 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
+import java.util.HashSet;
+import java.util.Set;
+
 import javax.persistence.EntityManager;
 import javax.persistence.Query;
 import javax.persistence.TemporalType;
@@ -13,6 +16,7 @@
 import org.hibernate.ejb.test.Item;
 import org.hibernate.ejb.test.Wallet;
 import org.hibernate.ejb.test.Distributor;
+import org.hibernate.ejb.test.User;
 
 
 /**
@@ -92,6 +96,26 @@
 		em.close();
 	}
 
+    public void testMemberOfElementCollection() throws Exception {
+		User user = new User( "foobar" );
+		Set<String> roles = new HashSet<String>();
+		roles.add( "admin" );
+		roles.add( "user" );
+		user.setRoles(roles);
+		
+		EntityManager em = getOrCreateEntityManager();
+		em.getTransaction().begin();
+		em.persist(user);
+		
+		Query q = em.createQuery( "select user from User user where :role member of user.roles" );
+		q.setParameter( "role", "admin" );
+		List result = q.getResultList();
+		assertNotNull( result );
+		assertEquals( 1, result.size() );
+		em.getTransaction().rollback();
+		em.close();
+	}
+
 //	public void testDistinct() throws Exception {
 //		Item item = new Item("Mouse", "Micro_oft mouse");
 //		Distributor fnac = new Distributor();
@@ -459,7 +483,8 @@
 		return new Class[]{
 				Item.class,
 				Distributor.class,
-				Wallet.class
+				Wallet.class,
+				User.class
 		};
 	}
 }
