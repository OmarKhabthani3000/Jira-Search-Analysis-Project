Index: C:/work/os/hibernate/Hibernate3/src/org/hibernate/event/def/AbstractFlushingEventListener.java
===================================================================
--- C:/work/os/hibernate/Hibernate3/src/org/hibernate/event/def/AbstractFlushingEventListener.java	(revision 10510)
+++ C:/work/os/hibernate/Hibernate3/src/org/hibernate/event/def/AbstractFlushingEventListener.java	(working copy)
@@ -113,22 +113,23 @@
 		final Map.Entry[] list = IdentityMap.concurrentEntries( session.getPersistenceContext().getEntityEntries() );
 		//safe from concurrent modification because of how entryList() is implemented on IdentityMap
 		final int size = list.length;
+		final Object anything = getAnything();
 		for ( int i=0; i<size; i++ ) {
 			Map.Entry me = list[i];
 			EntityEntry entry = (EntityEntry) me.getValue();
 			Status status = entry.getStatus();
 			if ( status == Status.MANAGED || status == Status.SAVING ) {
-				cascadeOnFlush( session, entry.getPersister(), me.getKey() );
+				cascadeOnFlush( session, entry.getPersister(), me.getKey(), anything );
 			}
 		}
 	}
 	
-	private void cascadeOnFlush(EventSource session, EntityPersister persister, Object object) 
+	private void cascadeOnFlush(EventSource session, EntityPersister persister, Object object, Object anything) 
 	throws HibernateException {
 		session.getPersistenceContext().incrementCascadeLevel();
 		try {
 			new Cascade( getCascadingAction(), Cascade.BEFORE_FLUSH, session )
-				.cascade( persister, object, getAnything() );
+			.cascade( persister, object, anything );
 		}
 		finally {
 			session.getPersistenceContext().decrementCascadeLevel();
