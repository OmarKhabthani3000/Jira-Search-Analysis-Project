Index: src/test/java/org/hibernate/test/annotations/entity/BasicHibernateAnnotationsTest.java
===================================================================
--- src/test/java/org/hibernate/test/annotations/entity/BasicHibernateAnnotationsTest.java	(revision 17580)
+++ src/test/java/org/hibernate/test/annotations/entity/BasicHibernateAnnotationsTest.java	(working copy)
@@ -142,30 +142,49 @@
 		s.close();
 
 	}
-
-	//Test import of TypeDefs from MappedSuperclass and 
-	//Embedded classes  
+	
+	/*
+	 * Test import of TypeDefs from MappedSuperclass and 
+	 * Embedded classes.
+	 * The classes 'Name' and 'FormalLastName' both embed the same 
+	 * component 'LastName'. This is to verify that processing the 
+	 * typedef defined in the component TWICE does not create any 
+	 * issues.  
+	 * 
+	 */
 	public void testImportTypeDefinitions() throws Exception {
+		LastName lastName = new LastName();
+		lastName.setName("reddy");
+				
 		Name name = new Name();
 		name.setFirstName("SHARATH");
-		LastName lastName = new LastName();
-		lastName.setName("reddy");
 		name.setLastName(lastName);
+		
+		FormalLastName formalName = new FormalLastName();
+		formalName.setLastName(lastName);
+		formalName.setDesignation("Mr");
+				
 		Session s;
 		Transaction tx;
 		s = openSession();
 		tx = s.beginTransaction();
 		s.persist(name);
+		s.persist(formalName);
 		tx.commit();
 		s.close();
-		
+		 
 		s = openSession();
 		tx = s.beginTransaction();
 		name = (Name) s.get( Name.class, name.getId() );
 		assertNotNull( name );
 		assertEquals( "sharath", name.getFirstName() );
 		assertEquals( "REDDY", name.getLastName().getName() );
+		
+		formalName = (FormalLastName) s.get(FormalLastName.class, formalName.getId());
+		assertEquals( "REDDY", formalName.getLastName().getName() );
+		
 		s.delete(name);
+		s.delete(formalName);
 		tx.commit();
 		s.close();
 	}
@@ -341,7 +360,7 @@
 		tx.commit();
 		s.close();
 	}
-
+	
 	public BasicHibernateAnnotationsTest(String x) {
 		super( x );
 	}
@@ -353,7 +372,8 @@
 				Ransom.class,
 				ZipCode.class,
 				Flight.class,
-				Name.class
+				Name.class,
+				FormalLastName.class
 		};
 	}
 
Index: src/test/java/org/hibernate/test/annotations/entity/FormalLastName.java
===================================================================
--- src/test/java/org/hibernate/test/annotations/entity/FormalLastName.java	(revision 0)
+++ src/test/java/org/hibernate/test/annotations/entity/FormalLastName.java	(revision 0)
@@ -0,0 +1,71 @@
+/*
+ * Hibernate, Relational Persistence for Idiomatic Java
+ *
+ * Copyright (c) 2008, Red Hat Middleware LLC or third-party contributors as
+ * indicated by the @author tags or express copyright attribution
+ * statements applied by the authors.  All third-party contributions are
+ * distributed under license by Red Hat Middleware LLC.
+ *
+ * This copyrighted material is made available to anyone wishing to use, modify,
+ * copy, or redistribute it subject to the terms and conditions of the GNU
+ * Lesser General Public License, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
+ * for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this distribution; if not, write to:
+ * Free Software Foundation, Inc.
+ * 51 Franklin Street, Fifth Floor
+ * Boston, MA  02110-1301  USA
+ */
+
+package org.hibernate.test.annotations.entity;
+
+import javax.persistence.Embedded;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.Id;
+
+/**
+ * @author Sharath Reddy
+ */
+@Entity
+public class FormalLastName {
+
+	@Id
+	@GeneratedValue
+	private Integer id;
+
+	@Embedded
+	private LastName lastName;
+
+	private String designation; /* Mr/Mrs/Master */
+
+	public Integer getId() {
+		return id;
+	}
+
+	public void setId(Integer id) {
+		this.id = id;
+	}
+
+	public LastName getLastName() {
+		return lastName;
+	}
+
+	public void setLastName(LastName lastName) {
+		this.lastName = lastName;
+	}
+
+	public String getDesignation() {
+		return designation;
+	}
+
+	public void setDesignation(String designation) {
+		this.designation = designation;
+	}
+	
+}
