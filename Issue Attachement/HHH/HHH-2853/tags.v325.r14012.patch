Index: src/org/hibernate/dialect/Dialect.java
===================================================================
--- src/org/hibernate/dialect/Dialect.java	(revision 14012)
+++ src/org/hibernate/dialect/Dialect.java	(working copy)
@@ -33,6 +33,7 @@
 import org.hibernate.id.SequenceGenerator;
 import org.hibernate.id.TableHiLoGenerator;
 import org.hibernate.mapping.Column;
+import org.hibernate.mapping.Table;
 import org.hibernate.persister.entity.Lockable;
 import org.hibernate.sql.ANSICaseFragment;
 import org.hibernate.sql.ANSIJoinFragment;
@@ -1379,6 +1380,14 @@
 	public boolean supportsUniqueConstraintInCreateAlterTable() {
 	    return true;
 	}
+	
+	/** adjust an index name for a dialect, for example to cater for the db's index namespace being
+	 * a schema rather than a table
+	 * @return a modified index name, or null to use the default
+	 */
+	public String getIndexName( String name , Table table , boolean unique , String defaultCatalog , String defaultSchema ) {
+		return null;
+	}
 
 	/**
 	 * The syntax used to add a column to a table (optional).
Index: src/org/hibernate/mapping/Index.java
===================================================================
--- src/org/hibernate/mapping/Index.java	(revision 14012)
+++ src/org/hibernate/mapping/Index.java	(working copy)
@@ -59,6 +59,11 @@
 			String defaultSchema
 	) {
 		//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far
+		
+		// use the dialect to transform the index name to cater for the db's index namespace requirements
+		String nsname = dialect.getIndexName( name , table , unique , defaultCatalog , defaultSchema );
+		name = nsname != null ? nsname : name;
+		
 		StringBuffer buf = new StringBuffer( "create" )
 				.append( unique ?
 						" unique" :
