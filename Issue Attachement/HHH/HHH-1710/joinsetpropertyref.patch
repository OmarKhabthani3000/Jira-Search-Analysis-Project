Index: C:/projects/workspace/Hibernate3/src/org/hibernate/persister/entity/AbstractEntityPersister.java
===================================================================
--- C:/projects/workspace/Hibernate3/src/org/hibernate/persister/entity/AbstractEntityPersister.java	(revision 9841)
+++ C:/projects/workspace/Hibernate3/src/org/hibernate/persister/entity/AbstractEntityPersister.java	(working copy)
@@ -75,6 +75,7 @@
 import org.hibernate.tuple.Tuplizer;
 import org.hibernate.type.AbstractComponentType;
 import org.hibernate.type.AssociationType;
+import org.hibernate.type.CollectionType;
 import org.hibernate.type.EntityType;
 import org.hibernate.type.Type;
 import org.hibernate.type.TypeFactory;
@@ -1315,7 +1316,7 @@
 	 * which takes the entity name.
 	 */
 	public int getSubclassPropertyTableNumber(String propertyPath) {
-		final String rootPropertyName = StringHelper.root(propertyPath);
+		String rootPropertyName = StringHelper.root(propertyPath);
 		Type type = propertyMapping.toType(rootPropertyName);
 		if ( type.isAssociationType() && ( (AssociationType) type ).useLHSPrimaryKey() ) {
 			return 0;
@@ -1328,6 +1329,9 @@
 				return getSubclassColumnTableNumberClosure()[idx];
 			}
 		}*/
+		if ( type.isCollectionType() /*&& ( (CollectionType) type ).getLHSPropertyName() != null*/) {
+			rootPropertyName = ( (CollectionType) type ).getLHSPropertyName();
+		}
 		int index = ArrayHelper.indexOf( getSubclassPropertyNameClosure(), rootPropertyName); //TODO: optimize this better!
 		return index==-1 ? 0 : getSubclassPropertyTableNumber(index);
 	}
