Index: src/main/java/org/hibernate/cfg/AnnotationBinder.java
===================================================================
--- src/main/java/org/hibernate/cfg/AnnotationBinder.java	(revision 17306)
+++ src/main/java/org/hibernate/cfg/AnnotationBinder.java	(working copy)
@@ -429,6 +429,12 @@
 		//TODO: be more strict with secondarytable allowance (not for ids, not for secondary table join columns etc)
 		InheritanceState inheritanceState = inheritanceStatePerClass.get( clazzToProcess );
 		AnnotatedClassType classType = mappings.getClassType( clazzToProcess );
+		
+		//Queries declared in MappedSuperclass should be usable in Subclasses
+		if ( AnnotatedClassType.EMBEDDABLE_SUPERCLASS.equals( classType )) {
+			bindQueries(clazzToProcess, mappings );
+		}
+		
 		if ( AnnotatedClassType.EMBEDDABLE_SUPERCLASS.equals( classType ) //will be processed by their subentities
 				|| AnnotatedClassType.NONE.equals( classType ) //to be ignored
 				|| AnnotatedClassType.EMBEDDABLE.equals( classType ) //allow embeddable element declaration
Index: src/test/java/org/hibernate/test/annotations/query/Darkness.java
===================================================================
--- src/test/java/org/hibernate/test/annotations/query/Darkness.java	(revision 0)
+++ src/test/java/org/hibernate/test/annotations/query/Darkness.java	(revision 0)
@@ -0,0 +1,13 @@
+package org.hibernate.test.annotations.query;
+
+import javax.persistence.MappedSuperclass;
+
+@org.hibernate.annotations.NamedQuery(
+		name = "night.olderThan", 
+		query = "select n from Night n where n.date <= :date"
+)
+
+@MappedSuperclass
+public class Darkness {
+
+}
Index: src/test/java/org/hibernate/test/annotations/query/Night.java
===================================================================
--- src/test/java/org/hibernate/test/annotations/query/Night.java	(revision 17306)
+++ src/test/java/org/hibernate/test/annotations/query/Night.java	(working copy)
@@ -21,7 +21,7 @@
 		query = "select n from Night n where n.duration = :duration",
 		cacheable = true, cacheRegion = "nightQuery"
 )
-public class Night {
+public class Night extends Darkness {
 	private Integer id;
 	private long duration;
 	private Date date;
Index: src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java
===================================================================
--- src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java	(revision 17306)
+++ src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java	(working copy)
@@ -6,6 +6,7 @@
 import java.util.GregorianCalendar;
 import java.util.List;
 
+import org.hibernate.MappingException;
 import org.hibernate.Query;
 import org.hibernate.Session;
 import org.hibernate.Transaction;
@@ -110,6 +111,17 @@
 		s.close();
 	}
 
+	public void testImportQueryFromMappedSuperclass() {
+		Session s = openSession();
+		try {
+			s.getNamedQuery( "night.olderThan" );
+		}
+		catch(MappingException ex) {
+			assertTrue("Query imported from MappedSuperclass", false);
+		}
+		s.close();
+	}
+	
 	public void testSQLQueryWithManyToOne() {
 		Night n = new Night();
 		Calendar c = new GregorianCalendar();
