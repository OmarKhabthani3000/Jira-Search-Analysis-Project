Index: src/test/java/org/hibernate/cfg/SettingsFactoryTest.java
===================================================================
--- src/test/java/org/hibernate/cfg/SettingsFactoryTest.java	(revision 0)
+++ src/test/java/org/hibernate/cfg/SettingsFactoryTest.java	(revision 0)
@@ -0,0 +1,100 @@
+/*
+ * Hibernate, Relational Persistence for Idiomatic Java
+ *
+ * Copyright (c) 2008, Red Hat Middleware LLC or third-party contributors as
+ * indicated by the @author tags or express copyright attribution
+ * statements applied by the authors.  All third-party contributions are
+ * distributed under license by Red Hat Middleware LLC.
+ *
+ * This copyrighted material is made available to anyone wishing to use, modify,
+ * copy, or redistribute it subject to the terms and conditions of the GNU
+ * Lesser General Public License, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
+ * for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this distribution; if not, write to:
+ * Free Software Foundation, Inc.
+ * 51 Franklin Street, Fifth Floor
+ * Boston, MA  02110-1301  USA
+ *
+ */
+package org.hibernate.cfg;
+
+import java.util.Properties;
+
+import org.hibernate.cache.CacheDataDescription;
+import org.hibernate.cache.CacheException;
+import org.hibernate.cache.CollectionRegion;
+import org.hibernate.cache.EntityRegion;
+import org.hibernate.cache.QueryResultsRegion;
+import org.hibernate.cache.RegionFactory;
+import org.hibernate.cache.TimestampsRegion;
+
+import junit.framework.TestCase;
+
+public class SettingsFactoryTest extends TestCase {
+	public void testCreateRegionFactoryPrefersPropertiesConstructor() {
+		// This class will fail construction if the no-arg constructor is invoked
+		createRegionFactory("org.hibernate.cfg.SettingsFactoryTest$PropertiesRegionFactory");
+	}
+
+	public void testCreateRegionFactoryFallsBackToNoArgConstructor() {
+		createRegionFactory("org.hibernate.cfg.SettingsFactoryTest$NoArgRegionFactory");
+	}
+
+	private void createRegionFactory(String regionFactory) {
+		SettingsFactory factory = new SettingsFactory();
+		Properties properties = new Properties();
+		properties.setProperty(Environment.CACHE_REGION_FACTORY, regionFactory);
+		factory.createRegionFactory(properties, true);
+	}
+
+	public static class NoArgRegionFactory extends DummyRegionFactory {
+	}
+
+	public static class PropertiesRegionFactory extends DummyRegionFactory {
+		public PropertiesRegionFactory(Properties props) {
+		}
+
+		public PropertiesRegionFactory() {
+			// Should never be called
+			throw new UnsupportedOperationException("Should not use no-arg constructor");
+		}
+	}
+
+	private static abstract class DummyRegionFactory implements RegionFactory {
+		public void start(Settings settings, Properties properties) throws CacheException {
+		}
+
+		public void stop() {
+		}
+
+		public boolean isMinimalPutsEnabledByDefault() {
+			return false;
+		}
+
+		public long nextTimestamp() {
+			return 0;
+		}
+
+		public EntityRegion buildEntityRegion(String regionName, Properties properties, CacheDataDescription metadata) throws CacheException {
+			return null;
+		}
+
+		public CollectionRegion buildCollectionRegion(String regionName, Properties properties, CacheDataDescription metadata) throws CacheException {
+			return null;
+		}
+
+		public QueryResultsRegion buildQueryResultsRegion(String regionName, Properties properties) throws CacheException {
+			return null;
+		}
+
+		public TimestampsRegion buildTimestampsRegion(String regionName, Properties properties) throws CacheException {
+			return null;
+		}
+	}
+}

Property changes on: src/test/java/org/hibernate/cfg/SettingsFactoryTest.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain
Added: svn:eol-style
   + native

Index: src/main/java/org/hibernate/cfg/SettingsFactory.java
===================================================================
--- src/main/java/org/hibernate/cfg/SettingsFactory.java	(revision 15754)
+++ src/main/java/org/hibernate/cfg/SettingsFactory.java	(working copy)
@@ -386,7 +386,14 @@
 					.newInstance( new Object[] { properties } );
 		}
 		catch ( Exception e ) {
-			throw new HibernateException( "could not instantiate RegionFactory [" + regionFactoryClassName + "]", e );
+			try {
+				return ( RegionFactory ) ReflectHelper.classForName( regionFactoryClassName )
+						.getConstructor( new Class[] { } )
+						.newInstance( new Object[] {  } );
+			}
+			catch ( Exception e2 ) {
+				throw new HibernateException( "could not instantiate RegionFactory [" + regionFactoryClassName + "]", e2 );
+			}
 		}
 	}
 
