Apr 23, 2013 5:57:17 PM org.hibernate.annotations.common.Version <clinit>
INFO: HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
Apr 23, 2013 5:57:17 PM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {4.1.11.Final}
Apr 23, 2013 5:57:17 PM org.hibernate.cfg.Environment <clinit>
INFO: HHH000206: hibernate.properties not found
Apr 23, 2013 5:57:17 PM org.hibernate.cfg.Environment buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : javassist
Apr 23, 2013 5:57:18 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)
Apr 23, 2013 5:57:18 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 20
Apr 23, 2013 5:57:18 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000006: Autocommit mode: true
Apr 23, 2013 5:57:18 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/relationsshipDb]
Apr 23, 2013 5:57:18 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000046: Connection properties: {user=root, password=****, autocommit=true, release_mode=auto}
Apr 23, 2013 5:57:18 PM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Apr 23, 2013 5:57:18 PM org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService
INFO: HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Apr 23, 2013 5:57:18 PM org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init>
INFO: HHH000397: Using ASTQueryTranslatorFactory
Apr 23, 2013 5:57:18 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table Person 
        drop 
        foreign key FK8E488775B78CE81F
Hibernate: 
    alter table Person_Job 
        drop 
        foreign key FK9F4A17D33FEFA6F7
Hibernate: 
    alter table Person_Job 
        drop 
        foreign key FK9F4A17D34CBE167F
Hibernate: 
    drop table if exists Family
Hibernate: 
    drop table if exists Job
Hibernate: 
    drop table if exists Person
Hibernate: 
    drop table if exists Person_Job
Hibernate: 
    drop table if exists hibernate_sequences
Hibernate: 
    create table Family (
        id integer not null,
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    create table Job (
        id integer not null,
        jobDescr varchar(255),
        salery double precision not null,
        primary key (id)
    )
Hibernate: 
    create table Person (
        id bigint not null,
        firstName varchar(255),
        lastName varchar(255),
        nonsenseField varchar(255),
        family_id integer,
        primary key (id)
    )
Hibernate: 
    create table Person_Job (
        Person_id bigint not null,
        jobList_id integer not null
    )
Hibernate: 
    alter table Person 
        add index FK8E488775B78CE81F (family_id), 
        add constraint FK8E488775B78CE81F 
        foreign key (family_id) 
        references Family (id)
Hibernate: 
    alter table Person_Job 
        add constraint UK_9F4A17D33F20B9FF unique (jobList_id)
Hibernate: 
    alter table Person_Job 
        add index FK9F4A17D33FEFA6F7 (jobList_id), 
        add constraint FK9F4A17D33FEFA6F7 
        foreign key (jobList_id) 
        references Job (id)
Hibernate: 
    alter table Person_Job 
        add index FK9F4A17D34CBE167F (Person_id), 
        add constraint FK9F4A17D34CBE167F 
        foreign key (Person_id) 
        references Person (id)
Hibernate: 
    create table hibernate_sequences (
         sequence_name varchar(255),
         sequence_next_hi_value integer 
    ) 
Apr 23, 2013 5:57:20 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000230: Schema export complete
Hibernate: 
    /* select
        m 
    from
        Person m */ select
            person0_.id as id1_2_,
            person0_.family_id as family5_2_,
            person0_.firstName as firstNam2_2_,
            person0_.lastName as lastName3_2_,
            person0_.nonsenseField as nonsense4_2_ 
        from
            Person person0_
Hibernate: 
    /* select
        m 
    from
        Person m */ select
            person0_.id as id1_2_,
            person0_.family_id as family5_2_,
            person0_.firstName as firstNam2_2_,
            person0_.lastName as lastName3_2_,
            person0_.nonsenseField as nonsense4_2_ 
        from
            Person person0_
Hibernate: 
    select
        sequence_next_hi_value 
    from
        hibernate_sequences 
    where
        sequence_name = 'Family' for update
            
Hibernate: 
    insert 
    into
        hibernate_sequences
        (sequence_name, sequence_next_hi_value) 
    values
        ('Family', ?)
Hibernate: 
    update
        hibernate_sequences 
    set
        sequence_next_hi_value = ? 
    where
        sequence_next_hi_value = ? 
        and sequence_name = 'Family'
Hibernate: 
    select
        sequence_next_hi_value 
    from
        hibernate_sequences 
    where
        sequence_name = 'Person' for update
            
Hibernate: 
    insert 
    into
        hibernate_sequences
        (sequence_name, sequence_next_hi_value) 
    values
        ('Person', ?)
Hibernate: 
    update
        hibernate_sequences 
    set
        sequence_next_hi_value = ? 
    where
        sequence_next_hi_value = ? 
        and sequence_name = 'Person'
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Family
        */ insert 
        into
            Family
            (description, id) 
        values
            (?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* select
        f 
    from
        Family f */ select
            family0_.id as id1_0_,
            family0_.description as descript2_0_ 
        from
            Family family0_
Hibernate: 
    /* select
        f 
    from
        Family f */ select
            family0_.id as id1_0_,
            family0_.description as descript2_0_ 
        from
            Family family0_
Hibernate: 
    /* load one-to-many de.vogella.jpa.hibernate.model.Family.members */ select
        members0_.family_id as family5_0_1_,
        members0_.id as id1_2_1_,
        members0_.id as id1_2_0_,
        members0_.family_id as family5_2_0_,
        members0_.firstName as firstNam2_2_0_,
        members0_.lastName as lastName3_2_0_,
        members0_.nonsenseField as nonsense4_2_0_ 
    from
        Person members0_ 
    where
        members0_.family_id=?
Apr 23, 2013 5:57:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)
Apr 23, 2013 5:57:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 20
Apr 23, 2013 5:57:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000006: Autocommit mode: true
Apr 23, 2013 5:57:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/relationsshipDb]
Apr 23, 2013 5:57:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000046: Connection properties: {user=root, password=****, autocommit=true, release_mode=auto}
Apr 23, 2013 5:57:20 PM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Apr 23, 2013 5:57:20 PM org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService
INFO: HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Apr 23, 2013 5:57:20 PM org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init>
INFO: HHH000397: Using ASTQueryTranslatorFactory
Apr 23, 2013 5:57:20 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table Person 
        drop 
        foreign key FK8E488775B78CE81F
Hibernate: 
    alter table Person_Job 
        drop 
        foreign key FK9F4A17D33FEFA6F7
Hibernate: 
    alter table Person_Job 
        drop 
        foreign key FK9F4A17D34CBE167F
Hibernate: 
    drop table if exists Family
Hibernate: 
    drop table if exists Job
Hibernate: 
    drop table if exists Person
Hibernate: 
    drop table if exists Person_Job
Hibernate: 
    drop table if exists hibernate_sequences
Hibernate: 
    create table Family (
        id integer not null,
        description varchar(255),
        primary key (id)
    )
Hibernate: 
    create table Job (
        id integer not null,
        jobDescr varchar(255),
        salery double precision not null,
        primary key (id)
    )
Hibernate: 
    create table Person (
        id bigint not null,
        firstName varchar(255),
        lastName varchar(255),
        nonsenseField varchar(255),
        family_id integer,
        primary key (id)
    )
Hibernate: 
    create table Person_Job (
        Person_id bigint not null,
        jobList_id integer not null
    )
Hibernate: 
    alter table Person 
        add index FK8E488775B78CE81F (family_id), 
        add constraint FK8E488775B78CE81F 
        foreign key (family_id) 
        references Family (id)
Hibernate: 
    alter table Person_Job 
        add constraint UK_9F4A17D33F20B9FF unique (jobList_id)
Hibernate: 
    alter table Person_Job 
        add index FK9F4A17D33FEFA6F7 (jobList_id), 
        add constraint FK9F4A17D33FEFA6F7 
        foreign key (jobList_id) 
        references Job (id)
Hibernate: 
    alter table Person_Job 
        add index FK9F4A17D34CBE167F (Person_id), 
        add constraint FK9F4A17D34CBE167F 
        foreign key (Person_id) 
        references Person (id)
Hibernate: 
    create table hibernate_sequences (
         sequence_name varchar(255),
         sequence_next_hi_value integer 
    ) 
Apr 23, 2013 5:57:22 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000230: Schema export complete
Apr 23, 2013 5:57:22 PM org.hibernate.ejb.internal.EntityManagerFactoryRegistry addEntityManagerFactory
WARN: HHH000436: Entity manager factory name (people) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Hibernate: 
    /* select
        m 
    from
        Person m */ select
            person0_.id as id1_2_,
            person0_.family_id as family5_2_,
            person0_.firstName as firstNam2_2_,
            person0_.lastName as lastName3_2_,
            person0_.nonsenseField as nonsense4_2_ 
        from
            Person person0_
Hibernate: 
    /* select
        m 
    from
        Person m */ select
            person0_.id as id1_2_,
            person0_.family_id as family5_2_,
            person0_.firstName as firstNam2_2_,
            person0_.lastName as lastName3_2_,
            person0_.nonsenseField as nonsense4_2_ 
        from
            Person person0_
Hibernate: 
    select
        sequence_next_hi_value 
    from
        hibernate_sequences 
    where
        sequence_name = 'Family' for update
            
Hibernate: 
    insert 
    into
        hibernate_sequences
        (sequence_name, sequence_next_hi_value) 
    values
        ('Family', ?)
Hibernate: 
    update
        hibernate_sequences 
    set
        sequence_next_hi_value = ? 
    where
        sequence_next_hi_value = ? 
        and sequence_name = 'Family'
Hibernate: 
    select
        sequence_next_hi_value 
    from
        hibernate_sequences 
    where
        sequence_name = 'Person' for update
            
Hibernate: 
    insert 
    into
        hibernate_sequences
        (sequence_name, sequence_next_hi_value) 
    values
        ('Person', ?)
Hibernate: 
    update
        hibernate_sequences 
    set
        sequence_next_hi_value = ? 
    where
        sequence_next_hi_value = ? 
        and sequence_name = 'Person'
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Family
        */ insert 
        into
            Family
            (description, id) 
        values
            (?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* insert de.vogella.jpa.hibernate.model.Person
        */ insert 
        into
            Person
            (family_id, firstName, lastName, nonsenseField, id) 
        values
            (?, ?, ?, ?, ?)
Hibernate: 
    /* SELECT
        p 
    FROM
        Person p 
    WHERE
        p.firstName = :firstName 
        AND p.lastName = :lastName */ select
            person0_.id as id1_2_,
            person0_.family_id as family5_2_,
            person0_.firstName as firstNam2_2_,
            person0_.lastName as lastName3_2_,
            person0_.nonsenseField as nonsense4_2_ 
        from
            Person person0_ 
        where
            person0_.firstName=? 
            and person0_.lastName=?
Apr 23, 2013 5:57:22 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)
Apr 23, 2013 5:57:22 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 20
Apr 23, 2013 5:57:22 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000006: Autocommit mode: true
Apr 23, 2013 5:57:22 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/relationsshipDb]
Apr 23, 2013 5:57:22 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000046: Connection properties: {user=root, password=****, autocommit=true, release_mode=auto}
Apr 23, 2013 5:57:22 PM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Apr 23, 2013 5:57:22 PM org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService
INFO: HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Apr 23, 2013 5:57:22 PM org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init>
INFO: HHH000397: Using ASTQueryTranslatorFactory
Apr 23, 2013 5:57:22 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000227: Running hbm2ddl schema export
Hibernate: 
    alter table Person 
        drop 
        foreign key FK8E488775B78CE81F
