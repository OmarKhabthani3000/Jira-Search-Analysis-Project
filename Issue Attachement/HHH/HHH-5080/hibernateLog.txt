14:56:49,902 TRACE QueryPlanCache:96 - unable to locate HQL query plan in cache; generating (SELECT COUNT(*) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted )),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date2 AND i.dueDate < :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date3 AND i.dueDate < :date2 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date4 AND i.dueDate < :date3 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate < :date4 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ))) WHERE (1=1))
14:56:49,903 DEBUG QueryTranslatorImpl:272 - parse() - HQL: SELECT COUNT(*) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted )),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date2 AND i.dueDate < :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date3 AND i.dueDate < :date2 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date4 AND i.dueDate < :date3 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate < :date4 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ))) WHERE (1=1)
14:56:49,904 TRACE HqlParser:88 - -> statement
14:56:49,904 TRACE HqlParser:88 - ---> selectStatement
14:56:49,904 TRACE HqlParser:88 - -----> queryRule
14:56:49,905 TRACE HqlParser:88 - -------> selectFrom
14:56:49,905 TRACE HqlParser:88 - ---------> selectClause
14:56:49,905 TRACE HqlParser:88 - -----------> selectedPropertiesList
14:56:49,906 TRACE HqlParser:88 - -------------> aliasedExpression
14:56:49,906 TRACE HqlParser:88 - ---------------> expression
14:56:49,906 TRACE HqlParser:88 - -----------------> logicalOrExpression
14:56:49,906 TRACE HqlParser:88 - -------------------> logicalAndExpression
14:56:49,907 TRACE HqlParser:88 - ---------------------> negatedExpression
14:56:49,907 TRACE HqlParser:88 - -----------------------> equalityExpression
14:56:49,907 TRACE HqlParser:88 - -------------------------> relationalExpression
14:56:49,908 TRACE HqlParser:88 - ---------------------------> concatenation
14:56:49,908 TRACE HqlParser:88 - -----------------------------> additiveExpression
14:56:49,908 TRACE HqlParser:88 - -------------------------------> multiplyExpression
14:56:49,908 TRACE HqlParser:88 - ---------------------------------> unaryExpression
14:56:49,909 TRACE HqlParser:88 - -----------------------------------> atom
14:56:49,909 TRACE HqlParser:88 - -------------------------------------> primaryExpression
14:56:49,909 TRACE HqlParser:88 - ---------------------------------------> identPrimary
14:56:49,910 TRACE HqlParser:88 - -----------------------------------------> aggregate
14:56:49,910 TRACE HqlParser:96 - <----------------------------------------- aggregate
14:56:49,910 TRACE HqlParser:96 - <--------------------------------------- identPrimary
14:56:49,911 TRACE HqlParser:96 - <------------------------------------- primaryExpression
14:56:49,911 TRACE HqlParser:96 - <----------------------------------- atom
14:56:49,912 TRACE HqlParser:96 - <--------------------------------- unaryExpression
14:56:49,912 TRACE HqlParser:96 - <------------------------------- multiplyExpression
14:56:49,912 TRACE HqlParser:96 - <----------------------------- additiveExpression
14:56:49,912 TRACE HqlParser:96 - <--------------------------- concatenation
14:56:49,913 TRACE HqlParser:96 - <------------------------- relationalExpression
14:56:49,913 TRACE HqlParser:96 - <----------------------- equalityExpression
14:56:49,913 TRACE HqlParser:96 - <--------------------- negatedExpression
14:56:49,914 TRACE HqlParser:96 - <------------------- logicalAndExpression
14:56:49,914 TRACE HqlParser:96 - <----------------- logicalOrExpression
14:56:49,914 TRACE HqlParser:96 - <--------------- expression
14:56:49,914 TRACE HqlParser:96 - <------------- aliasedExpression
14:56:49,915 TRACE HqlParser:96 - <----------- selectedPropertiesList
14:56:49,915 TRACE HqlParser:96 - <--------- selectClause
14:56:49,915 TRACE HqlParser:88 - ---------> fromClause
14:56:49,916 TRACE HqlParser:88 - -----------> fromRange
14:56:49,916 TRACE HqlParser:88 - -------------> fromClassOrOuterQueryPath
14:56:49,916 TRACE HqlParser:88 - ---------------> path
14:56:49,916 TRACE HqlParser:88 - -----------------> identifier
14:56:49,917 TRACE HqlParser:96 - <----------------- identifier
14:56:49,917 TRACE HqlParser:88 - -----------------> identifier
14:56:49,917 TRACE HqlParser:96 - <----------------- identifier
14:56:49,918 TRACE HqlParser:88 - -----------------> identifier
14:56:49,918 TRACE HqlParser:96 - <----------------- identifier
14:56:49,918 TRACE HqlParser:88 - -----------------> identifier
14:56:49,919 TRACE HqlParser:96 - <----------------- identifier
14:56:49,919 TRACE HqlParser:88 - -----------------> identifier
14:56:49,919 TRACE HqlParser:96 - <----------------- identifier
14:56:49,920 TRACE HqlParser:88 - -----------------> identifier
14:56:49,920 TRACE HqlParser:96 - <----------------- identifier
14:56:49,920 TRACE HqlParser:96 - <--------------- path
14:56:49,920 TRACE HqlParser:88 - ---------------> asAlias
14:56:49,921 TRACE HqlParser:88 - -----------------> alias
14:56:49,921 TRACE HqlParser:88 - -------------------> identifier
14:56:49,921 TRACE HqlParser:96 - <------------------- identifier
14:56:49,922 TRACE HqlParser:96 - <----------------- alias
14:56:49,922 TRACE HqlParser:96 - <--------------- asAlias
14:56:49,922 TRACE HqlParser:96 - <------------- fromClassOrOuterQueryPath
14:56:49,923 TRACE HqlParser:96 - <----------- fromRange
14:56:49,923 TRACE HqlParser:96 - <--------- fromClause
14:56:49,923 TRACE HqlParser:96 - <------- selectFrom
14:56:49,923 TRACE HqlParser:88 - -------> whereClause
14:56:49,924 TRACE HqlParser:88 - ---------> logicalExpression
14:56:49,924 TRACE HqlParser:88 - -----------> expression
14:56:49,924 TRACE HqlParser:88 - -------------> logicalOrExpression
14:56:49,924 TRACE HqlParser:88 - ---------------> logicalAndExpression
14:56:49,925 TRACE HqlParser:88 - -----------------> negatedExpression
14:56:49,925 TRACE HqlParser:88 - -------------------> equalityExpression
14:56:49,925 TRACE HqlParser:88 - ---------------------> relationalExpression
14:56:49,926 TRACE HqlParser:88 - -----------------------> concatenation
14:56:49,926 TRACE HqlParser:88 - -------------------------> additiveExpression
14:56:49,926 TRACE HqlParser:88 - ---------------------------> multiplyExpression
14:56:49,927 TRACE HqlParser:88 - -----------------------------> unaryExpression
14:56:49,927 TRACE HqlParser:88 - -------------------------------> atom
14:56:49,927 TRACE HqlParser:88 - ---------------------------------> primaryExpression
14:56:49,927 TRACE HqlParser:88 - -----------------------------------> identPrimary
14:56:49,928 TRACE HqlParser:88 - -------------------------------------> identifier
14:56:49,928 TRACE HqlParser:96 - <------------------------------------- identifier
14:56:49,928 TRACE HqlParser:88 - -------------------------------------> identifier
14:56:49,929 TRACE HqlParser:96 - <------------------------------------- identifier
14:56:49,929 TRACE HqlParser:96 - <----------------------------------- identPrimary
14:56:49,929 TRACE HqlParser:96 - <--------------------------------- primaryExpression
14:56:49,930 TRACE HqlParser:96 - <------------------------------- atom
14:56:49,930 TRACE HqlParser:96 - <----------------------------- unaryExpression
14:56:49,930 TRACE HqlParser:96 - <--------------------------- multiplyExpression
14:56:49,931 TRACE HqlParser:96 - <------------------------- additiveExpression
14:56:49,931 TRACE HqlParser:96 - <----------------------- concatenation
14:56:49,931 TRACE HqlParser:96 - <--------------------- relationalExpression
14:56:49,932 TRACE HqlParser:88 - ---------------------> relationalExpression
14:56:49,932 TRACE HqlParser:88 - -----------------------> concatenation
14:56:49,932 TRACE HqlParser:88 - -------------------------> additiveExpression
14:56:49,932 TRACE HqlParser:88 - ---------------------------> multiplyExpression
14:56:49,933 TRACE HqlParser:88 - -----------------------------> unaryExpression
14:56:49,933 TRACE HqlParser:88 - -------------------------------> atom
14:56:49,933 TRACE HqlParser:88 - ---------------------------------> primaryExpression
14:56:49,934 TRACE HqlParser:88 - -----------------------------------> identPrimary
14:56:49,934 TRACE HqlParser:88 - -------------------------------------> identifier
14:56:49,934 TRACE HqlParser:96 - <------------------------------------- identifier
14:56:49,935 TRACE HqlParser:96 - <----------------------------------- identPrimary
14:56:49,935 TRACE HqlParser:96 - <--------------------------------- primaryExpression
14:56:49,935 TRACE HqlParser:96 - <------------------------------- atom
14:56:49,936 TRACE HqlParser:96 - <----------------------------- unaryExpression
14:56:49,936 TRACE HqlParser:96 - <--------------------------- multiplyExpression
14:56:49,936 TRACE HqlParser:96 - <------------------------- additiveExpression
14:56:49,937 TRACE HqlParser:96 - <----------------------- concatenation
14:56:49,937 TRACE HqlParser:96 - <--------------------- relationalExpression
14:56:49,937 TRACE HqlParser:96 - <------------------- equalityExpression
14:56:49,937 TRACE HqlParser:96 - <----------------- negatedExpression
14:56:49,938 TRACE HqlParser:88 - -----------------> negatedExpression
14:56:49,938 TRACE HqlParser:88 - -------------------> equalityExpression
14:56:49,938 TRACE HqlParser:88 - ---------------------> relationalExpression
14:56:49,938 TRACE HqlParser:88 - -----------------------> concatenation
14:56:49,939 TRACE HqlParser:88 - -------------------------> additiveExpression
14:56:49,939 TRACE HqlParser:88 - ---------------------------> multiplyExpression
14:56:49,939 TRACE HqlParser:88 - -----------------------------> unaryExpression
14:56:49,940 TRACE HqlParser:88 - -------------------------------> atom
14:56:49,940 TRACE HqlParser:88 - ---------------------------------> primaryExpression
14:56:49,940 TRACE HqlParser:88 - -----------------------------------> identPrimary
14:56:49,941 TRACE HqlParser:88 - -------------------------------------> identifier
14:56:49,941 TRACE HqlParser:96 - <------------------------------------- identifier
14:56:49,941 TRACE HqlParser:88 - -------------------------------------> identifier
14:56:49,942 TRACE HqlParser:96 - <------------------------------------- identifier
14:56:49,942 TRACE HqlParser:96 - <----------------------------------- identPrimary
14:56:49,942 TRACE HqlParser:96 - <--------------------------------- primaryExpression
14:56:49,943 TRACE HqlParser:96 - <------------------------------- atom
14:56:49,943 TRACE HqlParser:96 - <----------------------------- unaryExpression
14:56:49,943 TRACE HqlParser:96 - <--------------------------- multiplyExpression
14:56:49,943 TRACE HqlParser:96 - <------------------------- additiveExpression
14:56:49,944 TRACE HqlParser:96 - <----------------------- concatenation
14:56:49,944 TRACE HqlParser:88 - -----------------------> inList
14:56:49,944 TRACE HqlParser:88 - -------------------------> compoundExpr
14:56:49,945 TRACE HqlParser:88 - ---------------------------> expression
14:56:49,945 TRACE HqlParser:88 - -----------------------------> logicalOrExpression
14:56:49,945 TRACE HqlParser:88 - -------------------------------> logicalAndExpression
14:56:49,946 TRACE HqlParser:88 - ---------------------------------> negatedExpression
14:56:49,946 TRACE HqlParser:88 - -----------------------------------> equalityExpression
14:56:49,946 TRACE HqlParser:88 - -------------------------------------> relationalExpression
14:56:49,947 TRACE HqlParser:88 - ---------------------------------------> concatenation
14:56:49,947 TRACE HqlParser:88 - -----------------------------------------> additiveExpression
14:56:49,947 TRACE HqlParser:88 - -------------------------------------------> multiplyExpression
14:56:49,947 TRACE HqlParser:88 - ---------------------------------------------> unaryExpression
14:56:49,948 TRACE HqlParser:88 - -----------------------------------------------> atom
14:56:49,948 TRACE HqlParser:88 - -------------------------------------------------> primaryExpression
14:56:49,948 TRACE HqlParser:88 - ---------------------------------------------------> identifier
14:56:49,949 TRACE HqlParser:96 - <--------------------------------------------------- identifier
14:56:49,949 TRACE HqlParser:96 - <------------------------------------------------- primaryExpression
14:56:49,950 TRACE HqlParser:96 - <----------------------------------------------- atom
14:56:49,950 TRACE HqlParser:96 - <--------------------------------------------- unaryExpression
14:56:49,950 TRACE HqlParser:96 - <------------------------------------------- multiplyExpression
14:56:49,951 TRACE HqlParser:96 - <----------------------------------------- additiveExpression
14:56:49,951 TRACE HqlParser:96 - <--------------------------------------- concatenation
14:56:49,951 TRACE HqlParser:96 - <------------------------------------- relationalExpression
14:56:49,952 TRACE HqlParser:96 - <----------------------------------- equalityExpression
14:56:49,952 TRACE HqlParser:96 - <--------------------------------- negatedExpression
14:56:49,952 TRACE HqlParser:96 - <------------------------------- logicalAndExpression
14:56:49,952 TRACE HqlParser:96 - <----------------------------- logicalOrExpression
14:56:49,953 TRACE HqlParser:96 - <--------------------------- expression
14:56:49,953 TRACE HqlParser:88 - ---------------------------> expression
14:56:49,953 TRACE HqlParser:88 - -----------------------------> logicalOrExpression
14:56:49,954 TRACE HqlParser:88 - -------------------------------> logicalAndExpression
14:56:49,954 TRACE HqlParser:88 - ---------------------------------> negatedExpression
14:56:49,954 TRACE HqlParser:88 - -----------------------------------> equalityExpression
14:56:49,954 TRACE HqlParser:88 - -------------------------------------> relationalExpression
14:56:49,955 TRACE HqlParser:88 - ---------------------------------------> concatenation
14:56:49,955 TRACE HqlParser:88 - -----------------------------------------> additiveExpression
14:56:49,955 TRACE HqlParser:88 - -------------------------------------------> multiplyExpression
14:56:49,956 TRACE HqlParser:88 - ---------------------------------------------> unaryExpression
14:56:49,956 TRACE HqlParser:88 - -----------------------------------------------> atom
14:56:49,956 TRACE HqlParser:88 - -------------------------------------------------> primaryExpression
14:56:49,957 TRACE HqlParser:88 - ---------------------------------------------------> identifier
14:56:49,957 TRACE HqlParser:96 - <--------------------------------------------------- identifier
14:56:49,957 TRACE HqlParser:96 - <------------------------------------------------- primaryExpression
14:56:49,958 TRACE HqlParser:96 - <----------------------------------------------- atom
14:56:49,958 TRACE HqlParser:96 - <--------------------------------------------- unaryExpression
14:56:49,958 TRACE HqlParser:96 - <------------------------------------------- multiplyExpression
14:56:49,959 TRACE HqlParser:96 - <----------------------------------------- additiveExpression
14:56:49,959 TRACE HqlParser:96 - <--------------------------------------- concatenation
14:56:49,959 TRACE HqlParser:96 - <------------------------------------- relationalExpression
14:56:49,960 TRACE HqlParser:96 - <----------------------------------- equalityExpression
14:56:49,960 TRACE HqlParser:96 - <--------------------------------- negatedExpression
14:56:49,960 TRACE HqlParser:96 - <------------------------------- logicalAndExpression
14:56:49,961 TRACE HqlParser:96 - <----------------------------- logicalOrExpression
14:56:49,961 TRACE HqlParser:96 - <--------------------------- expression
14:56:49,961 TRACE HqlParser:96 - <------------------------- compoundExpr
14:56:49,962 TRACE HqlParser:96 - <----------------------- inList
14:56:49,962 TRACE HqlParser:96 - <--------------------- relationalExpression
14:56:49,962 TRACE HqlParser:96 - <------------------- equalityExpression
14:56:49,962 TRACE HqlParser:96 - <----------------- negatedExpression
14:56:49,963 TRACE HqlParser:96 - <--------------- logicalAndExpression
14:56:49,963 TRACE HqlParser:96 - <------------- logicalOrExpression
14:56:49,963 TRACE HqlParser:96 - <----------- expression
14:56:49,963 TRACE HqlParser:96 - <--------- logicalExpression
14:56:49,964 TRACE HqlParser:96 - <------- whereClause
14:56:49,964 TRACE HqlParser:96 - <----- queryRule
14:56:49,964 TRACE HqlParser:96 - <--- selectStatement
14:56:49,965 TRACE HqlParser:96 - <- statement
14:56:49,966 DEBUG AST:291 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'cicat'
    |  |     |  |  |  |  \-[IDENT] Node: 'bedrock'
    |  |     |  |  |  \-[IDENT] Node: 'billing'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Invoice'
    |  |     \-[ALIAS] Node: 'i'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[COUNT] Node: 'COUNT'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'i'
          |  |  \-[IDENT] Node: 'billingAccount'
          |  \-[IDENT] Node: 'ba'
          \-[IN] Node: 'in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'i'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                +-[COLON] Node: ':'
                |  \-[IDENT] Node: 'paymentReceived'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'posted'

14:56:49,967 DEBUG ErrorCounter:91 - throwQueryException() : no errors
14:56:49,967 TRACE HqlSqlWalker:185 - -> statement (query [QUERY])
14:56:49,968 TRACE HqlSqlWalker:185 - ---> selectStatement (query [QUERY])
14:56:49,968 TRACE HqlSqlWalker:185 - -----> query (query [QUERY])
14:56:49,968 DEBUG HqlSqlBaseWalker:111 - select << begin [level=1, statement=select]
14:56:49,969 TRACE HqlSqlWalker:185 - -------> fromClause (FROM [FROM])
14:56:49,969 TRACE HqlSqlWalker:185 - ---------> fromElementList (RANGE [RANGE])
14:56:49,969 TRACE HqlSqlWalker:185 - -----------> fromElement (RANGE [RANGE])
14:56:49,969 TRACE HqlSqlWalker:185 - -------------> path (. [DOT])
14:56:49,970 TRACE HqlSqlWalker:185 - ---------------> path (. [DOT])
14:56:49,971 TRACE HqlSqlWalker:185 - -----------------> path (. [DOT])
14:56:49,971 TRACE HqlSqlWalker:185 - -------------------> path (. [DOT])
14:56:49,971 TRACE HqlSqlWalker:185 - ---------------------> path (. [DOT])
14:56:49,972 TRACE HqlSqlWalker:185 - -----------------------> path (com [IDENT])
14:56:49,972 TRACE HqlSqlWalker:185 - -------------------------> identifier (com [IDENT])
14:56:49,972 TRACE HqlSqlWalker:199 - <------------------------- identifier
14:56:49,972 TRACE HqlSqlWalker:199 - <----------------------- path
14:56:49,973 TRACE HqlSqlWalker:185 - -----------------------> identifier (cicat [IDENT])
14:56:49,973 TRACE HqlSqlWalker:199 - <----------------------- identifier
14:56:49,973 TRACE HqlSqlWalker:199 - <--------------------- path
14:56:49,974 TRACE HqlSqlWalker:185 - ---------------------> identifier (bedrock [IDENT])
14:56:49,974 TRACE HqlSqlWalker:199 - <--------------------- identifier
14:56:49,974 TRACE HqlSqlWalker:199 - <------------------- path
14:56:49,974 TRACE HqlSqlWalker:185 - -------------------> identifier (billing [IDENT])
14:56:49,975 TRACE HqlSqlWalker:199 - <------------------- identifier
14:56:49,975 TRACE HqlSqlWalker:199 - <----------------- path
14:56:49,975 TRACE HqlSqlWalker:185 - -----------------> identifier (model [IDENT])
14:56:49,976 TRACE HqlSqlWalker:199 - <----------------- identifier
14:56:49,976 TRACE HqlSqlWalker:199 - <--------------- path
14:56:49,976 TRACE HqlSqlWalker:185 - ---------------> identifier (Invoice [IDENT])
14:56:49,977 TRACE HqlSqlWalker:199 - <--------------- identifier
14:56:49,977 TRACE HqlSqlWalker:199 - <------------- path
14:56:49,977 DEBUG FromElement:157 - FromClause{level=1} :  com.cicat.bedrock.billing.model.Invoice (i) -> invoice0_
14:56:49,978 TRACE HqlSqlWalker:199 - <----------- fromElement
14:56:49,978 TRACE HqlSqlWalker:199 - <--------- fromElementList
14:56:49,978 TRACE HqlSqlWalker:199 - <------- fromClause
14:56:49,978 TRACE HqlSqlWalker:185 - -------> selectClause (SELECT [SELECT])
14:56:49,979 TRACE HqlSqlWalker:185 - ---------> selectExprList (COUNT [COUNT])
14:56:49,979 TRACE HqlSqlWalker:185 - -----------> selectExpr (COUNT [COUNT])
14:56:49,979 TRACE HqlSqlWalker:185 - -------------> count (COUNT [COUNT])
14:56:49,980 TRACE HqlSqlWalker:199 - <------------- count
14:56:49,981 TRACE HqlSqlWalker:199 - <----------- selectExpr
14:56:49,981 TRACE HqlSqlWalker:199 - <--------- selectExprList
14:56:49,981 TRACE HqlSqlWalker:199 - <------- selectClause
14:56:49,982 TRACE HqlSqlWalker:185 - -------> whereClause (WHERE [WHERE])
14:56:49,982 TRACE HqlSqlWalker:185 - ---------> logicalExpr (AND [AND])
14:56:49,982 TRACE HqlSqlWalker:185 - -----------> logicalExpr (= [EQ])
14:56:49,983 TRACE HqlSqlWalker:185 - -------------> comparisonExpr (= [EQ])
14:56:49,983 TRACE HqlSqlWalker:185 - ---------------> exprOrSubquery (. [DOT])
14:56:49,983 TRACE HqlSqlWalker:185 - -----------------> expr (. [DOT])
14:56:49,983 TRACE HqlSqlWalker:185 - -------------------> addrExpr (. [DOT])
14:56:49,984 TRACE HqlSqlWalker:185 - ---------------------> addrExprLhs (i [IDENT])
14:56:49,984 TRACE HqlSqlWalker:185 - -----------------------> addrExpr (i [IDENT])
14:56:49,984 TRACE HqlSqlWalker:185 - -------------------------> identifier (i [IDENT])
14:56:49,985 TRACE HqlSqlWalker:199 - <------------------------- identifier
14:56:49,985 DEBUG FromReferenceNode:74 - Resolved :  i -> invoice0_.id
14:56:49,985 TRACE HqlSqlWalker:199 - <----------------------- addrExpr
14:56:49,986 TRACE HqlSqlWalker:199 - <--------------------- addrExprLhs
14:56:49,986 TRACE HqlSqlWalker:185 - ---------------------> propertyName (billingAccount [IDENT])
14:56:49,986 TRACE HqlSqlWalker:185 - -----------------------> identifier (billingAccount [IDENT])
14:56:49,986 TRACE HqlSqlWalker:199 - <----------------------- identifier
14:56:49,987 TRACE HqlSqlWalker:199 - <--------------------- propertyName
14:56:49,987 TRACE FromElement:626 - handling property dereference [com.cicat.bedrock.billing.model.Invoice (i) -> billingAccount (class)]
14:56:49,987 TRACE HqlSqlWalker:199 - <------------------- addrExpr
14:56:49,988 DEBUG DotNode:613 - getDataType() : billingAccount -> org.hibernate.type.ManyToOneType(com.cicat.bedrock.billing.model.BillingAccount)
14:56:49,988 DEBUG DotNode:570 - dereferenceShortcut() : property billingAccount in com.cicat.bedrock.billing.model.Invoice does not require a join.
14:56:49,988 DEBUG DotNode:599 - terminal propertyPath = [billingAccount]
14:56:49,989 DEBUG FromReferenceNode:74 - Resolved :  i.billingAccount -> invoice0_.billingAccount_id
14:56:49,989 TRACE HqlSqlWalker:199 - <----------------- expr
14:56:49,989 TRACE HqlSqlWalker:199 - <--------------- exprOrSubquery
14:56:49,990 TRACE HqlSqlWalker:185 - ---------------> exprOrSubquery (ba [IDENT])
14:56:49,990 TRACE HqlSqlWalker:185 - -----------------> expr (ba [IDENT])
14:56:49,990 TRACE HqlSqlWalker:185 - -------------------> addrExpr (ba [IDENT])
14:56:49,990 TRACE HqlSqlWalker:185 - ---------------------> identifier (ba [IDENT])
14:56:49,991 TRACE HqlSqlWalker:199 - <--------------------- identifier
14:56:49,991 TRACE HqlSqlWalker:577 - attempting to resolve property [ba] as a non-qualified ref
14:56:49,992 TRACE HqlSqlWalker:199 - <------------------- addrExpr
14:56:49,993 TRACE HqlSqlWalker:199 - <----------------- expr
14:56:49,994 TRACE HqlSqlWalker:199 - <--------------- exprOrSubquery
14:56:49,994 TRACE HqlSqlWalker:199 - <------------- comparisonExpr
14:56:49,994 TRACE HqlSqlWalker:199 - <----------- logicalExpr
14:56:49,994 TRACE HqlSqlWalker:185 - -----------> logicalExpr (in [IN])
14:56:49,995 TRACE HqlSqlWalker:185 - -------------> comparisonExpr (in [IN])
14:56:49,996 TRACE HqlSqlWalker:185 - ---------------> exprOrSubquery (. [DOT])
14:56:49,996 TRACE HqlSqlWalker:185 - -----------------> expr (. [DOT])
14:56:49,997 TRACE HqlSqlWalker:185 - -------------------> addrExpr (. [DOT])
14:56:49,997 TRACE HqlSqlWalker:185 - ---------------------> addrExprLhs (i [IDENT])
14:56:49,997 TRACE HqlSqlWalker:185 - -----------------------> addrExpr (i [IDENT])
14:56:49,998 TRACE HqlSqlWalker:185 - -------------------------> identifier (i [IDENT])
14:56:49,998 TRACE HqlSqlWalker:199 - <------------------------- identifier
14:56:49,998 DEBUG FromReferenceNode:74 - Resolved :  i -> invoice0_.id
14:56:49,999 TRACE HqlSqlWalker:199 - <----------------------- addrExpr
14:56:49,999 TRACE HqlSqlWalker:199 - <--------------------- addrExprLhs
14:56:49,999 TRACE HqlSqlWalker:185 - ---------------------> propertyName (state [IDENT])
14:56:49,999 TRACE HqlSqlWalker:185 - -----------------------> identifier (state [IDENT])
14:56:50,000 TRACE HqlSqlWalker:199 - <----------------------- identifier
14:56:50,000 TRACE HqlSqlWalker:199 - <--------------------- propertyName
14:56:50,000 TRACE FromElement:626 - handling property dereference [com.cicat.bedrock.billing.model.Invoice (i) -> state (class)]
14:56:50,001 TRACE HqlSqlWalker:199 - <------------------- addrExpr
14:56:50,001 DEBUG DotNode:613 - getDataType() : state -> org.hibernate.type.CustomType@4a5a12f5
14:56:50,001 DEBUG FromReferenceNode:74 - Resolved :  i.state -> invoice0_.state
14:56:50,002 TRACE HqlSqlWalker:199 - <----------------- expr
14:56:50,002 TRACE HqlSqlWalker:199 - <--------------- exprOrSubquery
14:56:50,002 TRACE HqlSqlWalker:185 - ---------------> inRhs (inList [IN_LIST])
14:56:50,003 TRACE HqlSqlWalker:185 - -----------------> expr (: [COLON])
14:56:50,003 TRACE HqlSqlWalker:185 - -------------------> parameter (: [COLON])
14:56:50,003 TRACE HqlSqlWalker:185 - ---------------------> identifier (paymentReceived [IDENT])
14:56:50,004 TRACE HqlSqlWalker:199 - <--------------------- identifier
14:56:50,004 TRACE HqlSqlWalker:199 - <------------------- parameter
14:56:50,004 TRACE HqlSqlWalker:199 - <----------------- expr
14:56:50,004 TRACE HqlSqlWalker:185 - -----------------> expr (: [COLON])
14:56:50,005 TRACE HqlSqlWalker:185 - -------------------> parameter (: [COLON])
14:56:50,005 TRACE HqlSqlWalker:185 - ---------------------> identifier (posted [IDENT])
14:56:50,005 TRACE HqlSqlWalker:199 - <--------------------- identifier
14:56:50,006 TRACE HqlSqlWalker:199 - <------------------- parameter
14:56:50,006 TRACE HqlSqlWalker:199 - <----------------- expr
14:56:50,006 TRACE HqlSqlWalker:199 - <--------------- inRhs
14:56:50,007 TRACE HqlSqlWalker:199 - <------------- comparisonExpr
14:56:50,007 TRACE HqlSqlWalker:199 - <----------- logicalExpr
14:56:50,007 TRACE HqlSqlWalker:199 - <--------- logicalExpr
14:56:50,008 TRACE HqlSqlWalker:199 - <------- whereClause
14:56:50,008 DEBUG HqlSqlBaseWalker:117 - select : finishing up [level=1, statement=select]
14:56:50,008 DEBUG HqlSqlWalker:611 - processQuery() :  ( SELECT ( {select clause} ( COUNT * ) ) ( FromClause{level=1} Invoice invoice0_ ) ( WHERE ( AND ( = ( invoice0_.billingAccount_id invoice0_.id billingAccount ) ba ) ( in ( invoice0_.state invoice0_.id state ) ( inList ? ? ) ) ) ) )
14:56:50,009 DEBUG JoinProcessor:179 - Using FROM fragment [Invoice invoice0_]
14:56:50,010 DEBUG HqlSqlBaseWalker:123 - select >> end [level=1, statement=select]
14:56:50,010 TRACE HqlSqlWalker:199 - <----- query
14:56:50,010 TRACE HqlSqlWalker:199 - <--- selectStatement
14:56:50,010 TRACE HqlSqlWalker:199 - <- statement
14:56:50,011 DEBUG AST:258 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Invoice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'COUNT'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[invoice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Invoice invoice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=Invoice,tableAlias=invoice0_,origin=null,columns={,className=com.cicat.bedrock.billing.model.Invoice}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'invoice0_.billingAccount_id' {propertyName=billingAccount,dereferenceType=0,propertyPath=billingAccount,path=i.billingAccount,tableAlias=invoice0_,className=com.cicat.bedrock.billing.model.Invoice,classAlias=i}
          |  |  +-[ALIAS_REF] IdentNode: 'invoice0_.id' {alias=i, className=com.cicat.bedrock.billing.model.Invoice, tableAlias=invoice0_}
          |  |  \-[IDENT] IdentNode: 'billingAccount' {originalText=billingAccount}
          |  \-[IDENT] IdentNode: 'ba' {originalText=ba}
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'invoice0_.state' {propertyName=state,dereferenceType=ALL,propertyPath=state,path=i.state,tableAlias=invoice0_,className=com.cicat.bedrock.billing.model.Invoice,classAlias=i}
             |  +-[ALIAS_REF] IdentNode: 'invoice0_.id' {alias=i, className=com.cicat.bedrock.billing.model.Invoice, tableAlias=invoice0_}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[IN_LIST] SqlNode: 'inList'
                +-[NAMED_PARAM] ParameterNode: '?' {name=paymentReceived, expectedType=org.hibernate.type.CustomType@4a5a12f5}
                \-[NAMED_PARAM] ParameterNode: '?' {name=posted, expectedType=org.hibernate.type.CustomType@4a5a12f5}

14:56:50,012 DEBUG ErrorCounter:91 - throwQueryException() : no errors
14:56:50,012 TRACE SqlGenerator:89 - -> statement (SELECT [SELECT])
14:56:50,012 TRACE SqlGenerator:89 - ---> selectStatement (SELECT [SELECT])
14:56:50,013 TRACE SqlGenerator:89 - -----> selectClause ({select clause} [SELECT_CLAUSE])
14:56:50,013 TRACE SqlGenerator:89 - -------> selectColumn (COUNT [COUNT])
14:56:50,013 TRACE SqlGenerator:89 - ---------> selectExpr (COUNT [COUNT])
14:56:50,013 TRACE SqlGenerator:89 - -----------> count (COUNT [COUNT])
14:56:50,014 TRACE SqlGenerator:89 - -------------> countExpr (* [ROW_STAR])
14:56:50,014 TRACE SqlGenerator:103 - <------------- countExpr
14:56:50,014 TRACE SqlGenerator:103 - <----------- count
14:56:50,015 TRACE SqlGenerator:103 - <--------- selectExpr
14:56:50,015 TRACE SqlGenerator:103 - <------- selectColumn
14:56:50,015 TRACE SqlGenerator:103 - <----- selectClause
14:56:50,015 TRACE SqlGenerator:89 - -----> from (FROM [FROM])
14:56:50,016 TRACE SqlGenerator:89 - -------> fromTable (Invoice invoice0_ [FROM_FRAGMENT])
14:56:50,016 TRACE SqlGenerator:103 - <------- fromTable
14:56:50,016 TRACE SqlGenerator:103 - <----- from
14:56:50,017 TRACE SqlGenerator:89 - -----> whereExpr (AND [AND])
14:56:50,017 TRACE SqlGenerator:89 - -------> booleanExpr (AND [AND])
14:56:50,017 TRACE SqlGenerator:89 - ---------> booleanOp (AND [AND])
14:56:50,017 TRACE SqlGenerator:89 - -----------> booleanExpr (= [EQ])
14:56:50,018 TRACE SqlGenerator:89 - -------------> comparisonExpr (= [EQ])
14:56:50,018 TRACE SqlGenerator:89 - ---------------> binaryComparisonExpression (= [EQ])
14:56:50,018 TRACE SqlGenerator:89 - -----------------> expr (invoice0_.billingAccount_id [DOT])
14:56:50,018 TRACE SqlGenerator:89 - -------------------> simpleExpr (invoice0_.billingAccount_id [DOT])
14:56:50,019 TRACE SqlGenerator:89 - ---------------------> addrExpr (invoice0_.billingAccount_id [DOT])
14:56:50,019 TRACE SqlGenerator:103 - <--------------------- addrExpr
14:56:50,019 TRACE SqlGenerator:103 - <------------------- simpleExpr
14:56:50,020 TRACE SqlGenerator:103 - <----------------- expr
14:56:50,020 TRACE SqlGenerator:89 - -----------------> expr (ba [IDENT])
14:56:50,020 TRACE SqlGenerator:89 - -------------------> simpleExpr (ba [IDENT])
14:56:50,020 TRACE SqlGenerator:89 - ---------------------> constant (ba [IDENT])
14:56:50,021 TRACE SqlGenerator:103 - <--------------------- constant
14:56:50,021 TRACE SqlGenerator:103 - <------------------- simpleExpr
14:56:50,021 TRACE SqlGenerator:103 - <----------------- expr
14:56:50,022 TRACE SqlGenerator:103 - <--------------- binaryComparisonExpression
14:56:50,022 TRACE SqlGenerator:103 - <------------- comparisonExpr
14:56:50,022 TRACE SqlGenerator:103 - <----------- booleanExpr
14:56:50,022 TRACE SqlGenerator:89 - -----------> booleanExpr (in [IN])
14:56:50,023 TRACE SqlGenerator:89 - -------------> comparisonExpr (in [IN])
14:56:50,023 TRACE SqlGenerator:89 - ---------------> exoticComparisonExpression (in [IN])
14:56:50,023 TRACE SqlGenerator:89 - -----------------> expr (invoice0_.state [DOT])
14:56:50,024 TRACE SqlGenerator:89 - -------------------> simpleExpr (invoice0_.state [DOT])
14:56:50,024 TRACE SqlGenerator:89 - ---------------------> addrExpr (invoice0_.state [DOT])
14:56:50,024 TRACE SqlGenerator:103 - <--------------------- addrExpr
14:56:50,024 TRACE SqlGenerator:103 - <------------------- simpleExpr
14:56:50,025 TRACE SqlGenerator:103 - <----------------- expr
14:56:50,025 TRACE SqlGenerator:89 - -----------------> inList (inList [IN_LIST])
14:56:50,025 TRACE SqlGenerator:89 - -------------------> simpleExprList (? [NAMED_PARAM])
14:56:50,026 TRACE SqlGenerator:89 - ---------------------> simpleExpr (? [NAMED_PARAM])
14:56:50,026 TRACE SqlGenerator:89 - -----------------------> parameter (? [NAMED_PARAM])
14:56:50,026 TRACE SqlGenerator:103 - <----------------------- parameter
14:56:50,026 TRACE SqlGenerator:103 - <--------------------- simpleExpr
14:56:50,027 TRACE SqlGenerator:89 - ---------------------> simpleExpr (? [NAMED_PARAM])
14:56:50,027 TRACE SqlGenerator:89 - -----------------------> parameter (? [NAMED_PARAM])
14:56:50,027 TRACE SqlGenerator:103 - <----------------------- parameter
14:56:50,028 TRACE SqlGenerator:103 - <--------------------- simpleExpr
14:56:50,028 TRACE SqlGenerator:103 - <------------------- simpleExprList
14:56:50,028 TRACE SqlGenerator:103 - <----------------- inList
14:56:50,029 TRACE SqlGenerator:103 - <--------------- exoticComparisonExpression
14:56:50,029 TRACE SqlGenerator:103 - <------------- comparisonExpr
14:56:50,029 TRACE SqlGenerator:103 - <----------- booleanExpr
14:56:50,029 TRACE SqlGenerator:103 - <--------- booleanOp
14:56:50,030 TRACE SqlGenerator:103 - <------- booleanExpr
14:56:50,030 TRACE SqlGenerator:103 - <----- whereExpr
14:56:50,030 TRACE SqlGenerator:103 - <--- selectStatement
14:56:50,030 TRACE SqlGenerator:103 - <- statement
14:56:50,031 DEBUG QueryTranslatorImpl:241 - HQL: SELECT COUNT(*) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted )),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date2 AND i.dueDate < :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date3 AND i.dueDate < :date2 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date4 AND i.dueDate < :date3 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate < :date4 ),(SELECT SUM(i.total - i.paymentAmount) FROM com.cicat.bedrock.billing.model.Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ))) WHERE (1=1)
14:56:50,031 DEBUG QueryTranslatorImpl:242 - SQL: select count(*) as col_0_0_ from Invoice invoice0_ where invoice0_.billingAccount_id=ba and (invoice0_.state in (? , ?))
14:56:50,031 DEBUG ErrorCounter:91 - throwQueryException() : no errors
14:56:50,032 TRACE HQLQueryPlan:293 - HQL param location recognition took 0 mills (SELECT COUNT(*) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted )),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date2 AND i.dueDate < :date1 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date3 AND i.dueDate < :date2 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate >= :date4 AND i.dueDate < :date3 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ) AND i.dueDate < :date4 ),(SELECT SUM(i.total - i.paymentAmount) FROM Invoice AS i WHERE i.billingAccount = ba AND i.state IN ( :paymentReceived, :posted ))) WHERE (1=1))
14:56:50,036 DEBUG JDBCTransaction:186 - rollback
14:56:50,037 DEBUG JDBCTransaction:197 - rolled back JDBC Connection
14:56:50,037 TRACE JDBCContext:242 - after transaction completion
14:56:50,037 DEBUG ConnectionManager:427 - aggressively releasing JDBC connection
14:56:50,038 DEBUG ConnectionManager:464 - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
14:56:50,039 TRACE SessionImpl:592 - after transaction completion
14:56:50,040 TRACE SessionImpl:310 - closing session
14:56:50,040 TRACE ConnectionManager:398 - connection already null in cleanup : no action
14:56:50,043 DEBUG SessionImpl:257 - opened session at timestamp: 5204650434736128
14:56:50,044 DEBUG JDBCTransaction:82 - begin
14:56:50,044 DEBUG ConnectionManager:444 - opening JDBC connection
14:56:50,044 DEBUG JDBCTransaction:87 - current autocommit status: false
14:56:50,044 TRACE JDBCContext:237 - after transaction begin
