Index: C:/samppasa/workspace/HibernateExt/metadata/src/java/org/hibernate/cfg/annotations/EntityBinder.java
===================================================================
--- C:/samppasa/workspace/HibernateExt/metadata/src/java/org/hibernate/cfg/annotations/EntityBinder.java	(revision 11156)
+++ C:/samppasa/workspace/HibernateExt/metadata/src/java/org/hibernate/cfg/annotations/EntityBinder.java	(working copy)
@@ -63,6 +63,7 @@
  */
 public class EntityBinder {
 	private String name;
+    private boolean annotatedName;
 	private XClass annotatedClass;
 	private PersistentClass persistentClass;
 	private ExtendedMappings mappings;
@@ -140,9 +141,11 @@
 		if ( ejb3Ann == null ) throw new AssertionFailure( "@Entity should always be not null" );
 		if ( BinderHelper.isDefault( ejb3Ann.name() ) ) {
 			name = StringHelper.unqualify( annotatedClass.getName() );
+            annotatedName = false;
 		}
 		else {
 			name = ejb3Ann.name();
+            annotatedName = true;
 		}
 	}
 
@@ -349,8 +352,18 @@
 	}
 
 	private String getClassTableName(String tableName) {
+        /* EJB3 Table name search path: 
+         * 1) Table annotation name which defaults to
+         * 2) Entity annotation name which defaults to
+         * 3) Unqualified class name in EJB3 but in Hibernate should
+         *    actually use the given NamingStrategy instead.    
+         */ 
 		if ( StringHelper.isEmpty( tableName ) ) {
-			return mappings.getNamingStrategy().classToTableName( name );
+            if (annotatedName) {
+                return mappings.getNamingStrategy().tableName(name);
+            } else {
+                return mappings.getNamingStrategy().classToTableName( annotatedClass.getName() );
+            }
 		}
 		else {
 			return mappings.getNamingStrategy().tableName( tableName );
