Index: test/java/org/hibernate/envers/test/entities/components/NullableComponentEntity.java
===================================================================
--- test/java/org/hibernate/envers/test/entities/components/NullableComponentEntity.java	(revision 0)
+++ test/java/org/hibernate/envers/test/entities/components/NullableComponentEntity.java	(revision 0)
@@ -0,0 +1,59 @@
+package org.hibernate.envers.test.entities.components;
+
+import java.io.Serializable;
+
+import javax.persistence.Embeddable;
+import javax.persistence.Entity;
+import javax.persistence.Id;
+
+import org.hibernate.envers.Audited;
+
+@Entity
+@Audited
+public class NullableComponentEntity implements Serializable {
+
+	private static final long serialVersionUID = 1L;
+
+	@Id
+	private String id;
+
+	private EmbeddedChild child;
+
+	protected NullableComponentEntity() {
+	}
+
+	public NullableComponentEntity(String id) {
+		this.id = id;
+	}
+
+	public String getId() {
+		return id;
+	}
+
+	public void setChild(EmbeddedChild child) {
+		this.child = child;
+	}
+
+	public EmbeddedChild getChild() {
+		return child;
+	}
+
+	@Embeddable
+	public static class EmbeddedChild implements Serializable {
+
+		private static final long serialVersionUID = 1L;
+
+		private String name;
+
+		protected EmbeddedChild() {
+		}
+
+		public EmbeddedChild(String name) {
+			this.name = name;
+		}
+
+		public String getName() {
+			return name;
+		}
+	}
+}
Index: test/java/org/hibernate/envers/test/integration/components/NullableComponentEntityTest.java
===================================================================
--- test/java/org/hibernate/envers/test/integration/components/NullableComponentEntityTest.java	(revision 0)
+++ test/java/org/hibernate/envers/test/integration/components/NullableComponentEntityTest.java	(revision 0)
@@ -0,0 +1,65 @@
+/*
+ * Hibernate, Relational Persistence for Idiomatic Java
+ *
+ * Copyright (c) 2008, Red Hat Middleware LLC or third-party contributors as
+ * indicated by the @author tags or express copyright attribution
+ * statements applied by the authors.  All third-party contributions are
+ * distributed under license by Red Hat Middleware LLC.
+ *
+ * This copyrighted material is made available to anyone wishing to use, modify,
+ * copy, or redistribute it subject to the terms and conditions of the GNU
+ * Lesser General Public License, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
+ * for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public License
+ * along with this distribution; if not, write to:
+ * Free Software Foundation, Inc.
+ * 51 Franklin Street, Fifth Floor
+ * Boston, MA  02110-1301  USA
+ */
+package org.hibernate.envers.test.integration.components;
+
+import javax.persistence.EntityManager;
+
+import org.hibernate.ejb.Ejb3Configuration;
+import org.hibernate.envers.test.AbstractEntityTest;
+import org.hibernate.envers.test.entities.components.NullableComponentEntity;
+import org.testng.annotations.BeforeClass;
+import org.testng.annotations.Test;
+
+public class NullableComponentEntityTest extends AbstractEntityTest {
+
+	@Override
+	public void configure(Ejb3Configuration cfg) {
+		cfg.addAnnotatedClass(NullableComponentEntity.class);
+		cfg.addAnnotatedClass(NullableComponentEntity.EmbeddedChild.class);
+	}
+
+	@BeforeClass(dependsOnMethods = "init")
+	public void initData() {
+		EntityManager em = getEntityManager();
+
+		em.getTransaction().begin();
+
+		NullableComponentEntity parent = new NullableComponentEntity("1");
+		em.persist(parent);
+		em.getTransaction().commit();
+	}
+
+	@Test
+	public void shouldReturnNullEmbeddedObject() throws Exception {
+
+		NullableComponentEntity hibernateEntity = getEntityManager().find(NullableComponentEntity.class, "1");
+		assert hibernateEntity != null;
+		assert hibernateEntity.getChild() == null;
+
+		NullableComponentEntity enversEntity = getAuditReader().find(NullableComponentEntity.class, "1", 1);
+		assert enversEntity != null;
+		assert enversEntity.getChild() == null : "Child should be null, all of its values are..";
+	}
+}
+
