Index: src/org/hibernate/cfg/Configuration.java
===================================================================
--- src/org/hibernate/cfg/Configuration.java	(revision 10462)
+++ src/org/hibernate/cfg/Configuration.java	(working copy)
@@ -1605,7 +1605,7 @@
 	}
 
 	public void setListeners(String type, Object[] listeners) {
-		if ( "auto-flush".equals( type ) ) {
+		if ( EventListeners.AUTO_FLUSH.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setAutoFlushEventListeners( new AutoFlushEventListener[]{} );
 			}
@@ -1613,7 +1613,7 @@
 				eventListeners.setAutoFlushEventListeners( (AutoFlushEventListener[]) listeners );
 			}
 		}
-		else if ( "merge".equals( type ) ) {
+		else if ( EventListeners.MERGE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setMergeEventListeners( new MergeEventListener[]{} );
 			}
@@ -1621,7 +1621,7 @@
 				eventListeners.setMergeEventListeners( (MergeEventListener[]) listeners );
 			}
 		}
-		else if ( "create".equals( type ) ) {
+		else if ( EventListeners.CREATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPersistEventListeners( new PersistEventListener[]{} );
 			}
@@ -1629,7 +1629,7 @@
 				eventListeners.setPersistEventListeners( (PersistEventListener[]) listeners );
 			}
 		}
-		else if ( "create-onflush".equals( type ) ) {
+		else if ( EventListeners.CREATE_ONFLUSH.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPersistOnFlushEventListeners( new PersistEventListener[]{} );
 			}
@@ -1637,7 +1637,7 @@
 				eventListeners.setPersistOnFlushEventListeners( (PersistEventListener[]) listeners );
 			}
 		}
-		else if ( "delete".equals( type ) ) {
+		else if ( EventListeners.DELETE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setDeleteEventListeners( new DeleteEventListener[]{} );
 			}
@@ -1645,7 +1645,7 @@
 				eventListeners.setDeleteEventListeners( (DeleteEventListener[]) listeners );
 			}
 		}
-		else if ( "dirty-check".equals( type ) ) {
+		else if ( EventListeners.DIRTY_CHECK.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setDirtyCheckEventListeners( new DirtyCheckEventListener[]{} );
 			}
@@ -1653,7 +1653,7 @@
 				eventListeners.setDirtyCheckEventListeners( (DirtyCheckEventListener[]) listeners );
 			}
 		}
-		else if ( "evict".equals( type ) ) {
+		else if ( EventListeners.EVICT.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setEvictEventListeners( new EvictEventListener[]{} );
 			}
@@ -1661,7 +1661,7 @@
 				eventListeners.setEvictEventListeners( (EvictEventListener[]) listeners );
 			}
 		}
-		else if ( "flush".equals( type ) ) {
+		else if ( EventListeners.FLUSH.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setFlushEventListeners( new FlushEventListener[]{} );
 			}
@@ -1669,7 +1669,7 @@
 				eventListeners.setFlushEventListeners( (FlushEventListener[]) listeners );
 			}
 		}
-		else if ( "flush-entity".equals( type ) ) {
+		else if ( EventListeners.FLUSH_ENTITY.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setFlushEntityEventListeners( new FlushEntityEventListener[]{} );
 			}
@@ -1677,7 +1677,7 @@
 				eventListeners.setFlushEntityEventListeners( (FlushEntityEventListener[]) listeners );
 			}
 		}
-		else if ( "load".equals( type ) ) {
+		else if ( EventListeners.LOAD.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setLoadEventListeners( new LoadEventListener[]{} );
 			}
@@ -1685,7 +1685,7 @@
 				eventListeners.setLoadEventListeners( (LoadEventListener[]) listeners );
 			}
 		}
-		else if ( "load-collection".equals( type ) ) {
+		else if ( EventListeners.LOAD_COLLECTION.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setInitializeCollectionEventListeners(
 						new InitializeCollectionEventListener[]{}
@@ -1697,7 +1697,7 @@
 					);
 			}
 		}
-		else if ( "lock".equals( type ) ) {
+		else if ( EventListeners.LOCK.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setLockEventListeners( new LockEventListener[]{} );
 			}
@@ -1705,7 +1705,7 @@
 				eventListeners.setLockEventListeners( (LockEventListener[]) listeners );
 			}
 		}
-		else if ( "refresh".equals( type ) ) {
+		else if ( EventListeners.REFRESH.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setRefreshEventListeners( new RefreshEventListener[]{} );
 			}
@@ -1713,7 +1713,7 @@
 				eventListeners.setRefreshEventListeners( (RefreshEventListener[]) listeners );
 			}
 		}
-		else if ( "replicate".equals( type ) ) {
+		else if ( EventListeners.REPLICATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setReplicateEventListeners( new ReplicateEventListener[]{} );
 			}
@@ -1721,7 +1721,7 @@
 				eventListeners.setReplicateEventListeners( (ReplicateEventListener[]) listeners );
 			}
 		}
-		else if ( "save-update".equals( type ) ) {
+		else if ( EventListeners.SAVE_UPDATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setSaveOrUpdateEventListeners( new SaveOrUpdateEventListener[]{} );
 			}
@@ -1729,7 +1729,7 @@
 				eventListeners.setSaveOrUpdateEventListeners( (SaveOrUpdateEventListener[]) listeners );
 			}
 		}
-		else if ( "save".equals( type ) ) {
+		else if ( EventListeners.SAVE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setSaveEventListeners( new SaveOrUpdateEventListener[]{} );
 			}
@@ -1737,7 +1737,7 @@
 				eventListeners.setSaveEventListeners( (SaveOrUpdateEventListener[]) listeners );
 			}
 		}
-		else if ( "update".equals( type ) ) {
+		else if ( EventListeners.UPDATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setUpdateEventListeners( new SaveOrUpdateEventListener[]{} );
 			}
@@ -1745,7 +1745,7 @@
 				eventListeners.setUpdateEventListeners( (SaveOrUpdateEventListener[]) listeners );
 			}
 		}
-		else if ( "pre-load".equals( type ) ) {
+		else if ( EventListeners.PRE_LOAD.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPreLoadEventListeners( new PreLoadEventListener[]{} );
 			}
@@ -1753,7 +1753,7 @@
 				eventListeners.setPreLoadEventListeners( (PreLoadEventListener[]) listeners );
 			}
 		}
-		else if ( "pre-update".equals( type ) ) {
+		else if ( EventListeners.PRE_UPDATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPreUpdateEventListeners( new PreUpdateEventListener[]{} );
 			}
@@ -1761,7 +1761,7 @@
 				eventListeners.setPreUpdateEventListeners( (PreUpdateEventListener[]) listeners );
 			}
 		}
-		else if ( "pre-delete".equals( type ) ) {
+		else if ( EventListeners.PRE_DELETE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPreDeleteEventListeners( new PreDeleteEventListener[]{} );
 			}
@@ -1769,7 +1769,7 @@
 				eventListeners.setPreDeleteEventListeners( (PreDeleteEventListener[]) listeners );
 			}
 		}
-		else if ( "pre-insert".equals( type ) ) {
+		else if ( EventListeners.PRE_INSERT.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPreInsertEventListeners( new PreInsertEventListener[]{} );
 			}
@@ -1777,7 +1777,7 @@
 				eventListeners.setPreInsertEventListeners( (PreInsertEventListener[]) listeners );
 			}
 		}
-		else if ( "post-load".equals( type ) ) {
+		else if ( EventListeners.POST_LOAD.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostLoadEventListeners( new PostLoadEventListener[]{} );
 			}
@@ -1785,7 +1785,7 @@
 				eventListeners.setPostLoadEventListeners( (PostLoadEventListener[]) listeners );
 			}
 		}
-		else if ( "post-update".equals( type ) ) {
+		else if ( EventListeners.POST_UPDATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostUpdateEventListeners( new PostUpdateEventListener[]{} );
 			}
@@ -1793,7 +1793,7 @@
 				eventListeners.setPostUpdateEventListeners( (PostUpdateEventListener[]) listeners );
 			}
 		}
-		else if ( "post-delete".equals( type ) ) {
+		else if ( EventListeners.POST_DELETE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostDeleteEventListeners( new PostDeleteEventListener[]{} );
 			}
@@ -1801,7 +1801,7 @@
 				eventListeners.setPostDeleteEventListeners( (PostDeleteEventListener[]) listeners );
 			}
 		}
-		else if ( "post-insert".equals( type ) ) {
+		else if ( EventListeners.POST_INSERT.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostInsertEventListeners( new PostInsertEventListener[]{} );
 			}
@@ -1809,7 +1809,7 @@
 				eventListeners.setPostInsertEventListeners( (PostInsertEventListener[]) listeners );
 			}
 		}
-		else if ( "post-commit-update".equals( type ) ) {
+		else if ( EventListeners.POST_COMMIT_UPDATE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostCommitUpdateEventListeners(
 						new PostUpdateEventListener[]{}
@@ -1819,7 +1819,7 @@
 				eventListeners.setPostCommitUpdateEventListeners( (PostUpdateEventListener[]) listeners );
 			}
 		}
-		else if ( "post-commit-delete".equals( type ) ) {
+		else if ( EventListeners.POST_COMMIT_DELETE.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostCommitDeleteEventListeners(
 						new PostDeleteEventListener[]{}
@@ -1829,7 +1829,7 @@
 				eventListeners.setPostCommitDeleteEventListeners( (PostDeleteEventListener[]) listeners );
 			}
 		}
-		else if ( "post-commit-insert".equals( type ) ) {
+		else if ( EventListeners.POST_COMMIT_INSERT.equals( type ) ) {
 			if ( listeners == null ) {
 				eventListeners.setPostCommitInsertEventListeners(
 						new PostInsertEventListener[]{}
