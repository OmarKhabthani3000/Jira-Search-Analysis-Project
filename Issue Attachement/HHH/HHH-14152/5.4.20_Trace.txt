- <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.227 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.228 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.228 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.228 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.228 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |  |  |  |  |  \-[IDENT] Node: 'bip'
    |  |  |  |  |  \-[IDENT] Node: 'biometric'
    |  |  |  |  \-[IDENT] Node: 'FaceImpl'
    |  |  |  \-[ALIAS] Node: 'resource'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'resource'
    |  |        \-[IDENT] Node: 'biometricrecord'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[AND] Node: 'AND'
    |     |  +-[IN] Node: 'in'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'resource'
    |     |  |  |  \-[IDENT] Node: 'abisidentifier'
    |     |  |  \-[IN_LIST] Node: 'inList'
    |     |  |     \-[COLON] Node: ':'
    |     |  |        \-[IDENT] Node: 'abisidentifier'
    |     |  \-[IN] Node: 'in'
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'resource'
    |     |     |  \-[IDENT] Node: 'state'
    |     |     \-[IN_LIST] Node: 'inList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'state'
    |     \-[NE] Node: '!='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'resource'
    |        |  \-[IDENT] Node: 'biometricrecord'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'record'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'created'
       +-[DESCENDING] Node: 'DESC'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'resource'
          \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.228 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |  |  |  |  |  \-[IDENT] Node: 'bip'
    |  |  |  |  |  \-[IDENT] Node: 'biometric'
    |  |  |  |  \-[IDENT] Node: 'FaceImpl'
    |  |  |  \-[ALIAS] Node: 'resource'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'resource'
    |  |        \-[IDENT] Node: 'biometricrecord'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[AND] Node: 'AND'
    |     |  +-[IN] Node: 'in'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'resource'
    |     |  |  |  \-[IDENT] Node: 'abisidentifier'
    |     |  |  \-[IN_LIST] Node: 'inList'
    |     |  |     \-[COLON] Node: ':'
    |     |  |        \-[IDENT] Node: 'abisidentifier'
    |     |  \-[IN] Node: 'in'
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'resource'
    |     |     |  \-[IDENT] Node: 'state'
    |     |     \-[IN_LIST] Node: 'inList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'state'
    |     \-[NE] Node: '!='
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'resource'
    |        |  \-[IDENT] Node: 'biometricrecord'
    |        \-[COLON] Node: ':'
    |           \-[IDENT] Node: 'record'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'created'
       +-[DESCENDING] Node: 'DESC'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'resource'
          \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.228 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.228 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.228 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.228 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.228 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.228 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.228 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> biometricrecord (subclass)]
[TRACE] 2020-08-12 19:18:21.228 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> biometricrecord (subclass)]
[DEBUG] 2020-08-12 19:18:21.229 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.229 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.229 [main] DotNode - dereferenceEntityJoin() : generating join for biometricrecord in com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) parent = [ {null} ]
[DEBUG] 2020-08-12 19:18:21.229 [main] DotNode - dereferenceEntityJoin() : generating join for biometricrecord in com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) parent = [ {null} ]
[DEBUG] 2020-08-12 19:18:21.229 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (<no alias>) -> biometricr1_
[DEBUG] 2020-08-12 19:18:21.229 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (<no alias>) -> biometricr1_
[DEBUG] 2020-08-12 19:18:21.229 [main] FromClause - addJoinByPathMap() : resource.biometricrecord -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
[DEBUG] 2020-08-12 19:18:21.229 [main] FromClause - addJoinByPathMap() : resource.biometricrecord -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
[DEBUG] 2020-08-12 19:18:21.229 [main] FromReferenceNode - Resolved : resource.biometricrecord -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.229 [main] FromReferenceNode - Resolved : resource.biometricrecord -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.229 [main] HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'RESOURCES biometricr1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}

[DEBUG] 2020-08-12 19:18:21.229 [main] HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'RESOURCES biometricr1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}

[TRACE] 2020-08-12 19:18:21.229 [main] FromElement - Attempt to disable subclass-inclusions : 
java.lang.Exception: Stack-trace source
	at org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(FromElement.java:319) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.beforeSelectClause(HqlSqlWalker.java:1092) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1438) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:157) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:549) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:327) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactoryImpl.<clinit>(EntityManagerFactoryImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactory.newInstance(EntityManagerFactory.java:29) [classes/:?]
	at com.gemalto.ics.usplatform.bip.PlatformImpl.<clinit>(PlatformImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.Platform.newInstance(Platform.java:36) [classes/:?]
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:37) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.jar:4.13]
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.jar:4.13]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
[TRACE] 2020-08-12 19:18:21.229 [main] FromElement - Attempt to disable subclass-inclusions : 
java.lang.Exception: Stack-trace source
	at org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(FromElement.java:319) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.beforeSelectClause(HqlSqlWalker.java:1092) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1438) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:157) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:549) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:327) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactoryImpl.<clinit>(EntityManagerFactoryImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactory.newInstance(EntityManagerFactory.java:29) [classes/:?]
	at com.gemalto.ics.usplatform.bip.PlatformImpl.<clinit>(PlatformImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.Platform.newInstance(Platform.java:36) [classes/:?]
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:37) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.jar:4.13]
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.jar:4.13]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.230 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> abisidentifier (subclass)]
[TRACE] 2020-08-12 19:18:21.230 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> abisidentifier (subclass)]
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - getDataType() : abisidentifier -> org.hibernate.type.StringNVarcharType@1668919e
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - getDataType() : abisidentifier -> org.hibernate.type.StringNVarcharType@1668919e
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource.abisidentifier -> faceimpl0_1_.ABIS_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource.abisidentifier -> faceimpl0_1_.ABIS_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.230 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.230 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.230 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.230 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> biometricrecord (subclass)]
[TRACE] 2020-08-12 19:18:21.230 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> biometricrecord (subclass)]
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - dereferenceShortcut() : property biometricrecord in com.gemalto.ics.usplatform.bip.biometric.FaceImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - dereferenceShortcut() : property biometricrecord in com.gemalto.ics.usplatform.bip.biometric.FaceImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - Terminal getPropertyPath = [biometricrecord]
[DEBUG] 2020-08-12 19:18:21.230 [main] DotNode - Terminal getPropertyPath = [biometricrecord]
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource.biometricrecord -> (faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource.biometricrecord -> (faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.231 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> created (class)]
[TRACE] 2020-08-12 19:18:21.231 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> created (class)]
[DEBUG] 2020-08-12 19:18:21.231 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.231 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource.created -> faceimpl0_.CREATED
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource.created -> faceimpl0_.CREATED
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.231 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.231 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.231 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.231 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.231 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.231 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.231 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.231 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} ( RESOURCES faceimpl0_ RESOURCES biometricr1_ ) ) ( WHERE ( AND ( AND ( in ( faceimpl0_1_.ABIS_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) abisidentifier ) ( inList ? ) ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ( OR ( != faceimpl0_1_.BIOMETRICRECORD_ISSUER ? ) ( != faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER ? ) ) ) ) ( ORDER ( faceimpl0_.CREATED faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER created ) DESC ( faceimpl0_1_.STATE faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER state ) ) )
[DEBUG] 2020-08-12 19:18:21.231 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} ( RESOURCES faceimpl0_ RESOURCES biometricr1_ ) ) ( WHERE ( AND ( AND ( in ( faceimpl0_1_.ABIS_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) abisidentifier ) ( inList ? ) ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ( OR ( != faceimpl0_1_.BIOMETRICRECORD_ISSUER ? ) ( != faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER ? ) ) ) ) ( ORDER ( faceimpl0_.CREATED faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER created ) DESC ( faceimpl0_1_.STATE faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER state ) ) )
[DEBUG] 2020-08-12 19:18:21.231 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    | referencedTables(entity BiometricRecordImpl): [RESOURCES]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-SqlNode
    |     |  +-InLogicOperatorNode
    |     |  |  +-DotNode
    |     |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  | path: resource.abisidentifier
    |     |  |  |  +-IdentNode
    |     |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  |  | originalText: resource
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: abisidentifier
    |     |  |  \-SqlNode
    |     |  |     \-ParameterNode
    |     |  \-InLogicOperatorNode
    |     |     +-DotNode
    |     |     | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     | path: resource.state
    |     |     |  +-IdentNode
    |     |     |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     |  | originalText: resource
    |     |     |  \-IdentNode
    |     |     |    persister: null
    |     |     |    originalText: state
    |     |     \-SqlNode
    |     |        \-ParameterNode
    |     \-BinaryLogicOperatorNode
    |        +-BinaryLogicOperatorNode
    |        |  +-SqlFragment
    |        |  \-SqlFragment
    |        \-BinaryLogicOperatorNode
    |           +-SqlFragment
    |           \-SqlFragment
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       +-SqlNode
       \-DotNode
         persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
         path: resource.state
          +-IdentNode
          | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          | originalText: resource
          \-IdentNode
            persister: null
            originalText: state

[DEBUG] 2020-08-12 19:18:21.231 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    | referencedTables(entity BiometricRecordImpl): [RESOURCES]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-SqlNode
    |     |  +-InLogicOperatorNode
    |     |  |  +-DotNode
    |     |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  | path: resource.abisidentifier
    |     |  |  |  +-IdentNode
    |     |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  |  | originalText: resource
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: abisidentifier
    |     |  |  \-SqlNode
    |     |  |     \-ParameterNode
    |     |  \-InLogicOperatorNode
    |     |     +-DotNode
    |     |     | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     | path: resource.state
    |     |     |  +-IdentNode
    |     |     |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     |  | originalText: resource
    |     |     |  \-IdentNode
    |     |     |    persister: null
    |     |     |    originalText: state
    |     |     \-SqlNode
    |     |        \-ParameterNode
    |     \-BinaryLogicOperatorNode
    |        +-BinaryLogicOperatorNode
    |        |  +-SqlFragment
    |        |  \-SqlFragment
    |        \-BinaryLogicOperatorNode
    |           +-SqlFragment
    |           \-SqlFragment
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       +-SqlNode
       \-DotNode
         persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
         path: resource.state
          +-IdentNode
          | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          | originalText: resource
          \-IdentNode
            persister: null
            originalText: state

[TRACE] 2020-08-12 19:18:21.232 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.232 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.232 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.232 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.232 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.232 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.232 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.232 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.232 [main] JoinProcessor - Using FROM fragment [inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.232 [main] JoinProcessor - Using FROM fragment [inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.232 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.232 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.232 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_, biometricr1_], fromElementsByPath=[resource.biometricrecord], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[AND] SqlNode: 'AND'
    |     |  +-[IN] InLogicOperatorNode: 'in'
    |     |  |  +-[DOT] DotNode: 'faceimpl0_1_.ABIS_IDENTIFIER' {propertyName=abisidentifier,dereferenceType=PRIMITIVE,getPropertyPath=abisidentifier,path=resource.abisidentifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |  |  |  \-[IDENT] IdentNode: 'abisidentifier' {originalText=abisidentifier}
    |     |  |  \-[IN_LIST] SqlNode: 'inList'
    |     |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=abisidentifier, expectedType=org.hibernate.type.StringNVarcharType@1668919e}
    |     |  \-[IN] InLogicOperatorNode: 'in'
    |     |     +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |     |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     |     \-[IN_LIST] SqlNode: 'inList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@5570dc21}
    |     \-[OR] BinaryLogicOperatorNode: 'OR'
    |        +-[NE] BinaryLogicOperatorNode: '!='
    |        |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_1_.BIOMETRICRECORD_ISSUER'
    |        |  \-[SQL_TOKEN] SqlFragment: '?'
    |        \-[NE] BinaryLogicOperatorNode: '!='
    |           +-[SQL_TOKEN] SqlFragment: 'faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER'
    |           \-[SQL_TOKEN] SqlFragment: '?'
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'faceimpl0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=resource.created,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       +-[DESCENDING] SqlNode: 'DESC'
       \-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
          +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
          \-[IDENT] IdentNode: 'state' {originalText=state}

[DEBUG] 2020-08-12 19:18:21.232 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_, biometricr1_], fromElementsByPath=[resource.biometricrecord], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[AND] SqlNode: 'AND'
    |     |  +-[IN] InLogicOperatorNode: 'in'
    |     |  |  +-[DOT] DotNode: 'faceimpl0_1_.ABIS_IDENTIFIER' {propertyName=abisidentifier,dereferenceType=PRIMITIVE,getPropertyPath=abisidentifier,path=resource.abisidentifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |  |  |  \-[IDENT] IdentNode: 'abisidentifier' {originalText=abisidentifier}
    |     |  |  \-[IN_LIST] SqlNode: 'inList'
    |     |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=abisidentifier, expectedType=org.hibernate.type.StringNVarcharType@1668919e}
    |     |  \-[IN] InLogicOperatorNode: 'in'
    |     |     +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |     |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     |     \-[IN_LIST] SqlNode: 'inList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@5570dc21}
    |     \-[OR] BinaryLogicOperatorNode: 'OR'
    |        +-[NE] BinaryLogicOperatorNode: '!='
    |        |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_1_.BIOMETRICRECORD_ISSUER'
    |        |  \-[SQL_TOKEN] SqlFragment: '?'
    |        \-[NE] BinaryLogicOperatorNode: '!='
    |           +-[SQL_TOKEN] SqlFragment: 'faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER'
    |           \-[SQL_TOKEN] SqlFragment: '?'
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'faceimpl0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=resource.created,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       +-[DESCENDING] SqlNode: 'DESC'
       \-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
          +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
          \-[IDENT] IdentNode: 'state' {originalText=state}

[DEBUG] 2020-08-12 19:18:21.233 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.233 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.233 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state AND resource.biometricrecord !=  :record ORDER BY resource.created DESC, resource.state
[DEBUG] 2020-08-12 19:18:21.233 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state AND resource.biometricrecord !=  :record ORDER BY resource.created DESC, resource.state
[DEBUG] 2020-08-12 19:18:21.233 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_, biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_, faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_, biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and (faceimpl0_1_.ABIS_IDENTIFIER in (?)) and (faceimpl0_1_.STATE in (?)) and (faceimpl0_1_.BIOMETRICRECORD_ISSUER<>? or faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER<>?) order by faceimpl0_.CREATED DESC, faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.233 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_, biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_, faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_, biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and (faceimpl0_1_.ABIS_IDENTIFIER in (?)) and (faceimpl0_1_.STATE in (?)) and (faceimpl0_1_.BIOMETRICRECORD_ISSUER<>? or faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER<>?) order by faceimpl0_.CREATED DESC, faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.233 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.233 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.233 [main] NamedQueryRepository - Checking named query: selectFaceByAbisIdentifiersWithOrder
[DEBUG] 2020-08-12 19:18:21.233 [main] NamedQueryRepository - Checking named query: selectFaceByAbisIdentifiersWithOrder
[TRACE] 2020-08-12 19:18:21.233 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT resource FROM FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state ORDER BY resource.created DESC, resource.state)
[TRACE] 2020-08-12 19:18:21.233 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT resource FROM FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state ORDER BY resource.created DESC, resource.state)
[DEBUG] 2020-08-12 19:18:21.233 [main] QueryTranslatorImpl - parse() - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state ORDER BY resource.created DESC, resource.state
[DEBUG] 2020-08-12 19:18:21.233 [main] QueryTranslatorImpl - parse() - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state ORDER BY resource.created DESC, resource.state
[TRACE] 2020-08-12 19:18:21.233 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.233 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.234 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.235 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------> orderByClause
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------> orderByClause
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.236 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.237 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.237 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.237 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.237 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[IN] Node: 'in'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'resource'
    |     |  |  \-[IDENT] Node: 'abisidentifier'
    |     |  \-[IN_LIST] Node: 'inList'
    |     |     \-[COLON] Node: ':'
    |     |        \-[IDENT] Node: 'abisidentifier'
    |     \-[IN] Node: 'in'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'resource'
    |        |  \-[IDENT] Node: 'state'
    |        \-[IN_LIST] Node: 'inList'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'state'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'created'
       +-[DESCENDING] Node: 'DESC'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'resource'
          \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.237 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[IN] Node: 'in'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'resource'
    |     |  |  \-[IDENT] Node: 'abisidentifier'
    |     |  \-[IN_LIST] Node: 'inList'
    |     |     \-[COLON] Node: ':'
    |     |        \-[IDENT] Node: 'abisidentifier'
    |     \-[IN] Node: 'in'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'resource'
    |        |  \-[IDENT] Node: 'state'
    |        \-[IN_LIST] Node: 'inList'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'state'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'created'
       +-[DESCENDING] Node: 'DESC'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'resource'
          \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.237 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.237 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.237 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.237 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.237 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.237 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.237 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.237 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.237 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> abisidentifier (subclass)]
[TRACE] 2020-08-12 19:18:21.237 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> abisidentifier (subclass)]
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : abisidentifier -> org.hibernate.type.StringNVarcharType@1668919e
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : abisidentifier -> org.hibernate.type.StringNVarcharType@1668919e
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.abisidentifier -> faceimpl0_1_.ABIS_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.abisidentifier -> faceimpl0_1_.ABIS_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.238 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.238 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.238 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> created (class)]
[TRACE] 2020-08-12 19:18:21.238 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> created (class)]
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.created -> faceimpl0_.CREATED
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.created -> faceimpl0_.CREATED
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.238 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.238 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.238 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.238 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.238 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.238 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.238 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( in ( faceimpl0_1_.ABIS_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) abisidentifier ) ( inList ? ) ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ) ( ORDER ( faceimpl0_.CREATED faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER created ) DESC ( faceimpl0_1_.STATE faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER state ) ) )
[DEBUG] 2020-08-12 19:18:21.238 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( in ( faceimpl0_1_.ABIS_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) abisidentifier ) ( inList ? ) ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ) ( ORDER ( faceimpl0_.CREATED faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER created ) DESC ( faceimpl0_1_.STATE faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER state ) ) )
[DEBUG] 2020-08-12 19:18:21.239 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-InLogicOperatorNode
    |     |  +-DotNode
    |     |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  | path: resource.abisidentifier
    |     |  |  +-IdentNode
    |     |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  | originalText: resource
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: abisidentifier
    |     |  \-SqlNode
    |     |     \-ParameterNode
    |     \-InLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |        | path: resource.state
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |        |  | originalText: resource
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: state
    |        \-SqlNode
    |           \-ParameterNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       +-SqlNode
       \-DotNode
         persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
         path: resource.state
          +-IdentNode
          | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          | originalText: resource
          \-IdentNode
            persister: null
            originalText: state

[DEBUG] 2020-08-12 19:18:21.239 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-InLogicOperatorNode
    |     |  +-DotNode
    |     |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  | path: resource.abisidentifier
    |     |  |  +-IdentNode
    |     |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  | originalText: resource
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: abisidentifier
    |     |  \-SqlNode
    |     |     \-ParameterNode
    |     \-InLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |        | path: resource.state
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |        |  | originalText: resource
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: state
    |        \-SqlNode
    |           \-ParameterNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       +-SqlNode
       \-DotNode
         persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
         path: resource.state
          +-IdentNode
          | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          | originalText: resource
          \-IdentNode
            persister: null
            originalText: state

[TRACE] 2020-08-12 19:18:21.239 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.239 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.239 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.239 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.239 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.239 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.239 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.239 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.239 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.239 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.239 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[IN] InLogicOperatorNode: 'in'
    |     |  +-[DOT] DotNode: 'faceimpl0_1_.ABIS_IDENTIFIER' {propertyName=abisidentifier,dereferenceType=PRIMITIVE,getPropertyPath=abisidentifier,path=resource.abisidentifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |  |  \-[IDENT] IdentNode: 'abisidentifier' {originalText=abisidentifier}
    |     |  \-[IN_LIST] SqlNode: 'inList'
    |     |     \-[NAMED_PARAM] ParameterNode: '?' {name=abisidentifier, expectedType=org.hibernate.type.StringNVarcharType@1668919e}
    |     \-[IN] InLogicOperatorNode: 'in'
    |        +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |        |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |        |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |        \-[IN_LIST] SqlNode: 'inList'
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@5570dc21}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'faceimpl0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=resource.created,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       +-[DESCENDING] SqlNode: 'DESC'
       \-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
          +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
          \-[IDENT] IdentNode: 'state' {originalText=state}

[DEBUG] 2020-08-12 19:18:21.239 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[IN] InLogicOperatorNode: 'in'
    |     |  +-[DOT] DotNode: 'faceimpl0_1_.ABIS_IDENTIFIER' {propertyName=abisidentifier,dereferenceType=PRIMITIVE,getPropertyPath=abisidentifier,path=resource.abisidentifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |  |  \-[IDENT] IdentNode: 'abisidentifier' {originalText=abisidentifier}
    |     |  \-[IN_LIST] SqlNode: 'inList'
    |     |     \-[NAMED_PARAM] ParameterNode: '?' {name=abisidentifier, expectedType=org.hibernate.type.StringNVarcharType@1668919e}
    |     \-[IN] InLogicOperatorNode: 'in'
    |        +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |        |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |        |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |        \-[IN_LIST] SqlNode: 'inList'
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@5570dc21}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'faceimpl0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=resource.created,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       +-[DESCENDING] SqlNode: 'DESC'
       \-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
          +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
          \-[IDENT] IdentNode: 'state' {originalText=state}

[DEBUG] 2020-08-12 19:18:21.239 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.239 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.240 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state ORDER BY resource.created DESC, resource.state
[DEBUG] 2020-08-12 19:18:21.240 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state ORDER BY resource.created DESC, resource.state
[DEBUG] 2020-08-12 19:18:21.240 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_, faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and (faceimpl0_1_.ABIS_IDENTIFIER in (?)) and (faceimpl0_1_.STATE in (?)) order by faceimpl0_.CREATED DESC, faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.240 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_, faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and (faceimpl0_1_.ABIS_IDENTIFIER in (?)) and (faceimpl0_1_.STATE in (?)) order by faceimpl0_.CREATED DESC, faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.240 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.240 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.240 [main] NamedQueryRepository - Checking named query: selectFaceByNotNullUOWWithState
[DEBUG] 2020-08-12 19:18:21.240 [main] NamedQueryRepository - Checking named query: selectFaceByNotNullUOWWithState
[TRACE] 2020-08-12 19:18:21.240 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT DISTINCT resource FROM FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.identifier.issuer = :issuer AND resource.state  IN :states AND resource.transaction IS NOT NULL ORDER BY resource.created ASC, resource.transaction ASC, resource.state ASC)
[TRACE] 2020-08-12 19:18:21.240 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT DISTINCT resource FROM FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.identifier.issuer = :issuer AND resource.state  IN :states AND resource.transaction IS NOT NULL ORDER BY resource.created ASC, resource.transaction ASC, resource.state ASC)
[DEBUG] 2020-08-12 19:18:21.240 [main] QueryTranslatorImpl - parse() - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.identifier.issuer = :issuer AND resource.state  IN :states AND resource.transaction IS NOT NULL ORDER BY resource.created ASC, resource.transaction ASC, resource.state ASC
[DEBUG] 2020-08-12 19:18:21.240 [main] QueryTranslatorImpl - parse() - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.identifier.issuer = :issuer AND resource.state  IN :states AND resource.transaction IS NOT NULL ORDER BY resource.created ASC, resource.transaction ASC, resource.state ASC
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.240 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------> fromJoin
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -----------> fromJoin
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------> joinPath
[TRACE] 2020-08-12 19:18:21.241 [main] HqlParser - -------------> joinPath
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------- joinPath
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------- joinPath
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------- fromJoin
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------- fromJoin
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.242 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------------> constant
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - -----------------------------------> constant
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------------- constant
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------------- constant
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.243 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------> orderByClause
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------> orderByClause
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.244 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.245 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.246 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.246 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.246 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.247 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |  |  |  |  |  \-[IDENT] Node: 'bip'
    |  |  |  |  |  \-[IDENT] Node: 'biometric'
    |  |  |  |  \-[IDENT] Node: 'FaceImpl'
    |  |  |  \-[ALIAS] Node: 'resource'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'resource'
    |  |        \-[IDENT] Node: 'biometricrecord'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[DISTINCT] Node: 'DISTINCT'
    |     \-[IDENT] Node: 'resource'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[AND] Node: 'AND'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'resource'
    |     |  |  |  |  \-[IDENT] Node: 'identifier'
    |     |  |  |  \-[IDENT] Node: 'issuer'
    |     |  |  \-[COLON] Node: ':'
    |     |  |     \-[IDENT] Node: 'issuer'
    |     |  \-[IN] Node: 'in'
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'resource'
    |     |     |  \-[IDENT] Node: 'state'
    |     |     \-[IN_LIST] Node: 'inList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'states'
    |     \-[IS_NOT_NULL] Node: 'is not null'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'resource'
    |           \-[IDENT] Node: 'transaction'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'created'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'transaction'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'state'
       \-[ASCENDING] Node: 'ASC'

[DEBUG] 2020-08-12 19:18:21.247 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |  |  |  |  |  \-[IDENT] Node: 'bip'
    |  |  |  |  |  \-[IDENT] Node: 'biometric'
    |  |  |  |  \-[IDENT] Node: 'FaceImpl'
    |  |  |  \-[ALIAS] Node: 'resource'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'resource'
    |  |        \-[IDENT] Node: 'biometricrecord'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[DISTINCT] Node: 'DISTINCT'
    |     \-[IDENT] Node: 'resource'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[AND] Node: 'AND'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'resource'
    |     |  |  |  |  \-[IDENT] Node: 'identifier'
    |     |  |  |  \-[IDENT] Node: 'issuer'
    |     |  |  \-[COLON] Node: ':'
    |     |  |     \-[IDENT] Node: 'issuer'
    |     |  \-[IN] Node: 'in'
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'resource'
    |     |     |  \-[IDENT] Node: 'state'
    |     |     \-[IN_LIST] Node: 'inList'
    |     |        \-[COLON] Node: ':'
    |     |           \-[IDENT] Node: 'states'
    |     \-[IS_NOT_NULL] Node: 'is not null'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'resource'
    |           \-[IDENT] Node: 'transaction'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'created'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'transaction'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'resource'
       |  \-[IDENT] Node: 'state'
       \-[ASCENDING] Node: 'ASC'

[DEBUG] 2020-08-12 19:18:21.247 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.247 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.247 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.247 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.247 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.247 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.247 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> biometricrecord (subclass)]
[TRACE] 2020-08-12 19:18:21.247 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> biometricrecord (subclass)]
[DEBUG] 2020-08-12 19:18:21.247 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.247 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.247 [main] DotNode - dereferenceEntityJoin() : generating join for biometricrecord in com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) parent = [ {null} ]
[DEBUG] 2020-08-12 19:18:21.247 [main] DotNode - dereferenceEntityJoin() : generating join for biometricrecord in com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) parent = [ {null} ]
[DEBUG] 2020-08-12 19:18:21.247 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (<no alias>) -> biometricr1_
[DEBUG] 2020-08-12 19:18:21.247 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (<no alias>) -> biometricr1_
[DEBUG] 2020-08-12 19:18:21.247 [main] FromClause - addJoinByPathMap() : resource.biometricrecord -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
[DEBUG] 2020-08-12 19:18:21.247 [main] FromClause - addJoinByPathMap() : resource.biometricrecord -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
[DEBUG] 2020-08-12 19:18:21.247 [main] FromReferenceNode - Resolved : resource.biometricrecord -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.247 [main] FromReferenceNode - Resolved : resource.biometricrecord -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.247 [main] HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'RESOURCES biometricr1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}

[DEBUG] 2020-08-12 19:18:21.247 [main] HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'RESOURCES biometricr1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}

[TRACE] 2020-08-12 19:18:21.247 [main] FromElement - Attempt to disable subclass-inclusions : 
java.lang.Exception: Stack-trace source
	at org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(FromElement.java:319) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.beforeSelectClause(HqlSqlWalker.java:1092) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1438) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:157) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:549) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:327) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactoryImpl.<clinit>(EntityManagerFactoryImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactory.newInstance(EntityManagerFactory.java:29) [classes/:?]
	at com.gemalto.ics.usplatform.bip.PlatformImpl.<clinit>(PlatformImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.Platform.newInstance(Platform.java:36) [classes/:?]
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:37) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.jar:4.13]
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.jar:4.13]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
[TRACE] 2020-08-12 19:18:21.247 [main] FromElement - Attempt to disable subclass-inclusions : 
java.lang.Exception: Stack-trace source
	at org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(FromElement.java:319) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.beforeSelectClause(HqlSqlWalker.java:1092) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1438) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:157) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:549) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:327) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactoryImpl.<clinit>(EntityManagerFactoryImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactory.newInstance(EntityManagerFactory.java:29) [classes/:?]
	at com.gemalto.ics.usplatform.bip.PlatformImpl.<clinit>(PlatformImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.Platform.newInstance(Platform.java:36) [classes/:?]
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:37) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.jar:4.13]
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.jar:4.13]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
[DEBUG] 2020-08-12 19:18:21.248 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.248 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - Unresolved property path is now 'identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - Unresolved property path is now 'identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.identifier -> faceimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.identifier -> faceimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.identifier.issuer -> faceimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.identifier.issuer -> faceimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> transaction (subclass)]
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> transaction (subclass)]
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : transaction -> org.hibernate.type.CustomType@1477d4e6
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : transaction -> org.hibernate.type.CustomType@1477d4e6
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.transaction -> faceimpl0_1_.UOW
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.transaction -> faceimpl0_1_.UOW
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> created (class)]
[TRACE] 2020-08-12 19:18:21.249 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> created (class)]
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.249 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.created -> faceimpl0_.CREATED
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource.created -> faceimpl0_.CREATED
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.249 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.250 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> transaction (subclass)]
[TRACE] 2020-08-12 19:18:21.250 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> transaction (subclass)]
[DEBUG] 2020-08-12 19:18:21.250 [main] DotNode - getDataType() : transaction -> org.hibernate.type.CustomType@1477d4e6
[DEBUG] 2020-08-12 19:18:21.250 [main] DotNode - getDataType() : transaction -> org.hibernate.type.CustomType@1477d4e6
[DEBUG] 2020-08-12 19:18:21.250 [main] FromReferenceNode - Resolved : resource.transaction -> faceimpl0_1_.UOW
[DEBUG] 2020-08-12 19:18:21.250 [main] FromReferenceNode - Resolved : resource.transaction -> faceimpl0_1_.UOW
[DEBUG] 2020-08-12 19:18:21.250 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.250 [main] FromReferenceNode - Resolved : resource -> faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.250 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.250 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.250 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.250 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.250 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.250 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.250 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.250 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.250 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} DISTINCT (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} ( RESOURCES faceimpl0_ RESOURCES biometricr1_ ) ) ( WHERE ( AND ( AND ( = ( faceimpl0_.ISSUER ( faceimpl0_.ISSUER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) identifier ) issuer ) ? ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ( is not null ( faceimpl0_1_.UOW (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) transaction ) ) ) ) ( ORDER ( faceimpl0_.CREATED faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER created ) ASC ( faceimpl0_1_.UOW faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER transaction ) ASC ( faceimpl0_1_.STATE faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER state ) ASC ) )
[DEBUG] 2020-08-12 19:18:21.250 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} DISTINCT (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} ( RESOURCES faceimpl0_ RESOURCES biometricr1_ ) ) ( WHERE ( AND ( AND ( = ( faceimpl0_.ISSUER ( faceimpl0_.ISSUER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) identifier ) issuer ) ? ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ( is not null ( faceimpl0_1_.UOW (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) transaction ) ) ) ) ( ORDER ( faceimpl0_.CREATED faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER created ) ASC ( faceimpl0_1_.UOW faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER transaction ) ASC ( faceimpl0_1_.STATE faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER state ) ASC ) )
[DEBUG] 2020-08-12 19:18:21.250 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    | referencedTables(entity BiometricRecordImpl): [RESOURCES]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-SqlNode
    |     |  +-BinaryLogicOperatorNode
    |     |  |  +-DotNode
    |     |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  | path: resource.identifier.issuer
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  |  | path: resource.identifier
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  |  |  | originalText: resource
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: identifier
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: issuer
    |     |  |  \-ParameterNode
    |     |  \-InLogicOperatorNode
    |     |     +-DotNode
    |     |     | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     | path: resource.state
    |     |     |  +-IdentNode
    |     |     |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     |  | originalText: resource
    |     |     |  \-IdentNode
    |     |     |    persister: null
    |     |     |    originalText: state
    |     |     \-SqlNode
    |     |        \-ParameterNode
    |     \-IsNotNullLogicOperatorNode
    |        \-DotNode
    |          persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |          path: resource.transaction
    |           +-IdentNode
    |           | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |           | originalText: resource
    |           \-IdentNode
    |             persister: null
    |             originalText: transaction
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       +-SqlNode
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.transaction
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: transaction
       +-SqlNode
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.state
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: state
       \-SqlNode

[DEBUG] 2020-08-12 19:18:21.250 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    | referencedTables(entity BiometricRecordImpl): [RESOURCES]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-SqlNode
    |     |  +-BinaryLogicOperatorNode
    |     |  |  +-DotNode
    |     |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  | path: resource.identifier.issuer
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  |  | path: resource.identifier
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |  |  |  |  | originalText: resource
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: identifier
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: issuer
    |     |  |  \-ParameterNode
    |     |  \-InLogicOperatorNode
    |     |     +-DotNode
    |     |     | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     | path: resource.state
    |     |     |  +-IdentNode
    |     |     |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |     |     |  | originalText: resource
    |     |     |  \-IdentNode
    |     |     |    persister: null
    |     |     |    originalText: state
    |     |     \-SqlNode
    |     |        \-ParameterNode
    |     \-IsNotNullLogicOperatorNode
    |        \-DotNode
    |          persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |          path: resource.transaction
    |           +-IdentNode
    |           | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |           | originalText: resource
    |           \-IdentNode
    |             persister: null
    |             originalText: transaction
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       +-SqlNode
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.transaction
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: transaction
       +-SqlNode
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       | path: resource.state
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
       |  | originalText: resource
       |  \-IdentNode
       |    persister: null
       |    originalText: state
       \-SqlNode

[TRACE] 2020-08-12 19:18:21.251 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.251 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.251 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.251 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.251 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.251 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.251 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.251 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.251 [main] JoinProcessor - Using FROM fragment [inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.251 [main] JoinProcessor - Using FROM fragment [inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.251 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.251 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.251 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_, biometricr1_], fromElementsByPath=[resource.biometricrecord], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[AND] SqlNode: 'AND'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'faceimpl0_.ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=identifier.issuer,path=resource.identifier.issuer,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  |  +-[DOT] DotNode: 'faceimpl0_.ISSUER' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=identifier.issuer,path=resource.identifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |  |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |     |  |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
    |     |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.LongType@7b3cde6f}
    |     |  \-[IN] InLogicOperatorNode: 'in'
    |     |     +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |     |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     |     \-[IN_LIST] SqlNode: 'inList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=states, expectedType=org.hibernate.type.CustomType@5570dc21}
    |     \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
    |        \-[DOT] DotNode: 'faceimpl0_1_.UOW' {propertyName=transaction,dereferenceType=PRIMITIVE,getPropertyPath=transaction,path=resource.transaction,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |           +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |           \-[IDENT] IdentNode: 'transaction' {originalText=transaction}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'faceimpl0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=resource.created,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'faceimpl0_1_.UOW' {propertyName=transaction,dereferenceType=PRIMITIVE,getPropertyPath=transaction,path=resource.transaction,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'transaction' {originalText=transaction}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'state' {originalText=state}
       \-[ASCENDING] SqlNode: 'ASC'

[DEBUG] 2020-08-12 19:18:21.251 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_, biometricr1_], fromElementsByPath=[resource.biometricrecord], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.FaceImpl.biometricrecord,tableName=RESOURCES,tableAlias=biometricr1_,origin=RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER,columns={faceimpl0_1_.BIOMETRICRECORD_ISSUER faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[AND] SqlNode: 'AND'
    |     |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  +-[DOT] DotNode: 'faceimpl0_.ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=identifier.issuer,path=resource.identifier.issuer,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  |  +-[DOT] DotNode: 'faceimpl0_.ISSUER' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=identifier.issuer,path=resource.identifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |  |  |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |  |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |     |  |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
    |     |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.LongType@7b3cde6f}
    |     |  \-[IN] InLogicOperatorNode: 'in'
    |     |     +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |     |     |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |     |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     |     \-[IN_LIST] SqlNode: 'inList'
    |     |        \-[NAMED_PARAM] ParameterNode: '?' {name=states, expectedType=org.hibernate.type.CustomType@5570dc21}
    |     \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
    |        \-[DOT] DotNode: 'faceimpl0_1_.UOW' {propertyName=transaction,dereferenceType=PRIMITIVE,getPropertyPath=transaction,path=resource.transaction,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
    |           +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |           \-[IDENT] IdentNode: 'transaction' {originalText=transaction}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'faceimpl0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=resource.created,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'faceimpl0_1_.UOW' {propertyName=transaction,dereferenceType=PRIMITIVE,getPropertyPath=transaction,path=resource.transaction,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'transaction' {originalText=transaction}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
       |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
       |  \-[IDENT] IdentNode: 'state' {originalText=state}
       \-[ASCENDING] SqlNode: 'ASC'

[DEBUG] 2020-08-12 19:18:21.252 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.252 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.252 [main] QueryTranslatorImpl - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.identifier.issuer = :issuer AND resource.state  IN :states AND resource.transaction IS NOT NULL ORDER BY resource.created ASC, resource.transaction ASC, resource.state ASC
[DEBUG] 2020-08-12 19:18:21.252 [main] QueryTranslatorImpl - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource JOIN FETCH resource.biometricrecord WHERE resource.identifier.issuer = :issuer AND resource.state  IN :states AND resource.transaction IS NOT NULL ORDER BY resource.created ASC, resource.transaction ASC, resource.state ASC
[DEBUG] 2020-08-12 19:18:21.252 [main] QueryTranslatorImpl - SQL: select distinct faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_, biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_, faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_, biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and faceimpl0_.ISSUER=? and (faceimpl0_1_.STATE in (?)) and (faceimpl0_1_.UOW is not null) order by faceimpl0_.CREATED ASC, faceimpl0_1_.UOW ASC, faceimpl0_1_.STATE ASC
[DEBUG] 2020-08-12 19:18:21.252 [main] QueryTranslatorImpl - SQL: select distinct faceimpl0_.ISSUER as issuer2_14_0_, faceimpl0_.IDENTIFIER as identifi3_14_0_, biometricr1_.ISSUER as issuer2_14_1_, biometricr1_.IDENTIFIER as identifi3_14_1_, faceimpl0_.CREATED as created4_14_0_, faceimpl0_.CREATOR_ISSUER as creator13_14_0_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_0_, faceimpl0_.ENTITY as entity1_14_0_, faceimpl0_.EXPIRATION as expirati5_14_0_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_0_, faceimpl0_.MIMETYPE as mimetype7_14_0_, faceimpl0_.MODIFIED as modified8_14_0_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_0_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_0_, faceimpl0_.NAME as name9_14_0_, faceimpl0_.URI as uri10_14_0_, faceimpl0_.VERSION as version11_14_0_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_0_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_0_, faceimpl0_1_.STATE as state2_8_0_, faceimpl0_1_.TCN as tcn3_8_0_, faceimpl0_1_.UOW as uow4_8_0_, faceimpl0_2_.ISSUER as issuer0_4_0_, faceimpl0_2_.IDENTIFIER as identifi0_4_0_, faceimpl0_3_.ISSUER as issuer0_6_0_, faceimpl0_3_.IDENTIFIER as identifi0_6_0_, faceimpl0_4_.ISSUER as issuer0_18_0_, faceimpl0_4_.IDENTIFIER as identifi0_18_0_, biometricr1_.CREATED as created4_14_1_, biometricr1_.CREATOR_ISSUER as creator13_14_1_, biometricr1_.CREATOR_IDENTIFIER as creator14_14_1_, biometricr1_.ENTITY as entity1_14_1_, biometricr1_.EXPIRATION as expirati5_14_1_, biometricr1_.EXTERNAL_IDENTIFIER as external6_14_1_, biometricr1_.MIMETYPE as mimetype7_14_1_, biometricr1_.MODIFIED as modified8_14_1_, biometricr1_.MODIFIER_ISSUER as modifie15_14_1_, biometricr1_.MODIFIER_IDENTIFIER as modifie16_14_1_, biometricr1_.NAME as name9_14_1_, biometricr1_.URI as uri10_14_1_, biometricr1_.VERSION as version11_14_1_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER inner join RESOURCES biometricr1_ on faceimpl0_1_.BIOMETRICRECORD_ISSUER=biometricr1_.ISSUER and faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER=biometricr1_.IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and faceimpl0_.ISSUER=? and (faceimpl0_1_.STATE in (?)) and (faceimpl0_1_.UOW is not null) order by faceimpl0_.CREATED ASC, faceimpl0_1_.UOW ASC, faceimpl0_1_.STATE ASC
[DEBUG] 2020-08-12 19:18:21.253 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.253 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.253 [main] NamedQueryRepository - Checking named query: selectBiometricRecordIdentifierByFace
[DEBUG] 2020-08-12 19:18:21.253 [main] NamedQueryRepository - Checking named query: selectBiometricRecordIdentifierByFace
[TRACE] 2020-08-12 19:18:21.253 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT face.biometricrecord.identifier FROM FaceImpl face WHERE face.identifier = :identifier)
[TRACE] 2020-08-12 19:18:21.253 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT face.biometricrecord.identifier FROM FaceImpl face WHERE face.identifier = :identifier)
[DEBUG] 2020-08-12 19:18:21.253 [main] QueryTranslatorImpl - parse() - HQL: SELECT face.biometricrecord.identifier FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.253 [main] QueryTranslatorImpl - parse() - HQL: SELECT face.biometricrecord.identifier FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.253 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.254 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.255 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.255 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.255 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.256 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'face'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'face'
    |        |  \-[IDENT] Node: 'biometricrecord'
    |        \-[IDENT] Node: 'identifier'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'face'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.256 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'face'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'face'
    |        |  \-[IDENT] Node: 'biometricrecord'
    |        \-[IDENT] Node: 'identifier'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'face'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.256 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.256 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.256 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.256 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> biometricrecord (subclass)]
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> biometricrecord (subclass)]
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.biometric.FaceImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.biometric.FaceImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - Unresolved property path is now 'biometricrecord.identifier'
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - Unresolved property path is now 'biometricrecord.identifier'
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face.biometricrecord -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face.biometricrecord -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - getDataType() : biometricrecord.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - getDataType() : biometricrecord.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - Terminal getPropertyPath = [biometricrecord.identifier]
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - Terminal getPropertyPath = [biometricrecord.identifier]
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face.biometricrecord.identifier -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face.biometricrecord.identifier -> faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> biometricrecord (subclass)]
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> biometricrecord (subclass)]
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.256 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.256 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face.identifier -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.256 [main] FromReferenceNode - Resolved : face.identifier -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.257 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.257 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.257 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER ( faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) biometricrecord ) identifier ) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( = faceimpl0_.ISSUER ? ) ( = faceimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.257 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER ( faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) biometricrecord ) identifier ) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( = faceimpl0_.ISSUER ? ) ( = faceimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.257 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | path: face.biometricrecord.identifier
    |  |  +-DotNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  |  | path: face.biometricrecord
    |  |  |  +-IdentNode
    |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  |  |  | originalText: face
    |  |  |  \-IdentNode
    |  |  |    persister: null
    |  |  |    originalText: biometricrecord
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: identifier
    |  +-SqlNode
    |  +-SqlFragment
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.257 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | path: face.biometricrecord.identifier
    |  |  +-DotNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  |  | path: face.biometricrecord
    |  |  |  +-IdentNode
    |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  |  |  | originalText: face
    |  |  |  \-IdentNode
    |  |  |    persister: null
    |  |  |    originalText: biometricrecord
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: identifier
    |  +-SqlNode
    |  +-SqlFragment
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[TRACE] 2020-08-12 19:18:21.257 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.257 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.257 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.257 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.257 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.257 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.257 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.257 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.257 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.257 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'faceimpl0_1_.BIOMETRICRECORD_ISSUER' {propertyName=identifier,dereferenceType=COMPONENT,getPropertyPath=biometricrecord.identifier,path=face.biometricrecord.identifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=face}
    |  |  +-[DOT] DotNode: 'faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER' {propertyName=identifier,dereferenceType=UNKNOWN,getPropertyPath=biometricrecord.identifier,path=face.biometricrecord,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=face}
    |  |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=face, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  |  |  \-[IDENT] IdentNode: 'biometricrecord' {originalText=biometricrecord}
    |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[face], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=face,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'faceimpl0_1_.BIOMETRICRECORD_ISSUER' {propertyName=identifier,dereferenceType=COMPONENT,getPropertyPath=biometricrecord.identifier,path=face.biometricrecord.identifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=face}
    |  |  +-[DOT] DotNode: 'faceimpl0_1_.BIOMETRICRECORD_ISSUER, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER' {propertyName=identifier,dereferenceType=UNKNOWN,getPropertyPath=biometricrecord.identifier,path=face.biometricrecord,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=face}
    |  |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=face, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  |  |  \-[IDENT] IdentNode: 'biometricrecord' {originalText=biometricrecord}
    |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[face], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=face,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.258 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.258 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - HQL: SELECT face.biometricrecord.identifier FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - HQL: SELECT face.biometricrecord.identifier FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - SQL: select faceimpl0_1_.BIOMETRICRECORD_ISSUER as col_0_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as col_0_1_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and faceimpl0_.ISSUER=? and faceimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - SQL: select faceimpl0_1_.BIOMETRICRECORD_ISSUER as col_0_0_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as col_0_1_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and faceimpl0_.ISSUER=? and faceimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.258 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.258 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.258 [main] NamedQueryRepository - Checking named query: selectIdentifierByIdentifier
[DEBUG] 2020-08-12 19:18:21.258 [main] NamedQueryRepository - Checking named query: selectIdentifierByIdentifier
[TRACE] 2020-08-12 19:18:21.258 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT resource FROM ResourceImpl resource WHERE resource.identifier= :identifier)
[TRACE] 2020-08-12 19:18:21.258 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT resource FROM ResourceImpl resource WHERE resource.identifier= :identifier)
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - parse() - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.ResourceImpl resource WHERE resource.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.258 [main] QueryTranslatorImpl - parse() - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.ResourceImpl resource WHERE resource.identifier= :identifier
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.258 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.259 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.260 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.260 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.260 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.261 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'ResourceImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'resource'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.261 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'ResourceImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'resource'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.261 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.261 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.261 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> resourceim0_
[DEBUG] 2020-08-12 19:18:21.261 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> resourceim0_
[DEBUG] 2020-08-12 19:18:21.261 [main] FromReferenceNode - Resolved : resource -> (resourceim0_.ISSUER, resourceim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.261 [main] FromReferenceNode - Resolved : resource -> (resourceim0_.ISSUER, resourceim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.261 [main] FromReferenceNode - Resolved : resource -> (resourceim0_.ISSUER, resourceim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.261 [main] FromReferenceNode - Resolved : resource -> (resourceim0_.ISSUER, resourceim0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.261 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.261 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.261 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.261 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.261 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.261 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.261 [main] FromReferenceNode - Resolved : resource.identifier -> (resourceim0_.ISSUER, resourceim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.261 [main] FromReferenceNode - Resolved : resource.identifier -> (resourceim0_.ISSUER, resourceim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.261 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.261 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.261 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (resourceim0_.ISSUER, resourceim0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES resourceim0_ ) ( WHERE ( AND ( = resourceim0_.ISSUER ? ) ( = resourceim0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.261 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (resourceim0_.ISSUER, resourceim0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES resourceim0_ ) ( WHERE ( AND ( = resourceim0_.ISSUER ? ) ( = resourceim0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.262 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResourceImpl): [RESOURCES]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.ResourceImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.262 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResourceImpl): [RESOURCES]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.ResourceImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.262 [main] JoinProcessor - Using FROM fragment [RESOURCES resourceim0_ left outer join ISSUERS resourceim0_1_ on resourceim0_.ISSUER=resourceim0_1_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_2_ on resourceim0_.ISSUER=resourceim0_2_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_2_.IDENTIFIER left outer join FACES resourceim0_3_ on resourceim0_.ISSUER=resourceim0_3_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_3_.IDENTIFIER left outer join EYES resourceim0_4_ on resourceim0_.ISSUER=resourceim0_4_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_4_.IDENTIFIER left outer join TENPRINTS resourceim0_5_ on resourceim0_.ISSUER=resourceim0_5_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_5_.IDENTIFIER left outer join MATCHES resourceim0_6_ on resourceim0_.ISSUER=resourceim0_6_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_6_.IDENTIFIER left outer join ADJUDICATORS resourceim0_7_ on resourceim0_.ISSUER=resourceim0_7_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_7_.IDENTIFIER left outer join TASKS resourceim0_8_ on resourceim0_.ISSUER=resourceim0_8_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_8_.IDENTIFIER left outer join CASES resourceim0_9_ on resourceim0_.ISSUER=resourceim0_9_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_10_ on resourceim0_.ISSUER=resourceim0_10_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_10_.FACE_IDENTIFIER left outer join EYES resourceim0_11_ on resourceim0_.ISSUER=resourceim0_11_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim0_12_ on resourceim0_.ISSUER=resourceim0_12_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_12_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.262 [main] JoinProcessor - Using FROM fragment [RESOURCES resourceim0_ left outer join ISSUERS resourceim0_1_ on resourceim0_.ISSUER=resourceim0_1_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_2_ on resourceim0_.ISSUER=resourceim0_2_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_2_.IDENTIFIER left outer join FACES resourceim0_3_ on resourceim0_.ISSUER=resourceim0_3_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_3_.IDENTIFIER left outer join EYES resourceim0_4_ on resourceim0_.ISSUER=resourceim0_4_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_4_.IDENTIFIER left outer join TENPRINTS resourceim0_5_ on resourceim0_.ISSUER=resourceim0_5_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_5_.IDENTIFIER left outer join MATCHES resourceim0_6_ on resourceim0_.ISSUER=resourceim0_6_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_6_.IDENTIFIER left outer join ADJUDICATORS resourceim0_7_ on resourceim0_.ISSUER=resourceim0_7_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_7_.IDENTIFIER left outer join TASKS resourceim0_8_ on resourceim0_.ISSUER=resourceim0_8_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_8_.IDENTIFIER left outer join CASES resourceim0_9_ on resourceim0_.ISSUER=resourceim0_9_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_10_ on resourceim0_.ISSUER=resourceim0_10_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_10_.FACE_IDENTIFIER left outer join EYES resourceim0_11_ on resourceim0_.ISSUER=resourceim0_11_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim0_12_ on resourceim0_.ISSUER=resourceim0_12_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_12_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.262 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.262 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.262 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'resourceim0_.ISSUER as issuer2_14_, resourceim0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.ResourceImpl, tableAlias=resourceim0_}
    |  \-[SQL_TOKEN] SqlFragment: 'resourceim0_.CREATED as created4_14_, resourceim0_.CREATOR_ISSUER as creator13_14_, resourceim0_.CREATOR_IDENTIFIER as creator14_14_, resourceim0_.ENTITY as entity1_14_, resourceim0_.EXPIRATION as expirati5_14_, resourceim0_.EXTERNAL_IDENTIFIER as external6_14_, resourceim0_.MIMETYPE as mimetype7_14_, resourceim0_.MODIFIED as modified8_14_, resourceim0_.MODIFIER_ISSUER as modifie15_14_, resourceim0_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim0_.NAME as name9_14_, resourceim0_.URI as uri10_14_, resourceim0_.VERSION as version11_14_, resourceim0_.VALUE as value12_14_, resourceim0_1_.NAME as name1_10_, resourceim0_1_.PARENT_ISSUER as parent_i2_10_, resourceim0_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim0_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim0_2_.FACE_ISSUER as face_iss5_4_, resourceim0_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim0_2_.STATE as state2_4_, resourceim0_2_.TCN as tcn3_4_, resourceim0_2_.UOW as uow4_4_, resourceim0_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim0_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim0_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim0_3_.STATE as state2_8_, resourceim0_3_.TCN as tcn3_8_, resourceim0_3_.UOW as uow4_8_, resourceim0_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim0_4_.FACE_ISSUER as face_iss5_6_, resourceim0_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim0_4_.STATE as state2_6_, resourceim0_4_.TCN as tcn3_6_, resourceim0_4_.UOW as uow4_6_, resourceim0_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim0_5_.FACE_ISSUER as face_iss5_18_, resourceim0_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim0_5_.STATE as state2_18_, resourceim0_5_.TCN as tcn3_18_, resourceim0_5_.UOW as uow4_18_, resourceim0_6_.DISPOSITION as disposit1_11_, resourceim0_6_.FACE_ISSUER as face_iss4_11_, resourceim0_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim0_6_.SCORE as score2_11_, resourceim0_6_.TYPE as type3_11_, resourceim0_7_.LEVEL as level1_0_, resourceim0_7_.LOGIN as login2_0_, resourceim0_7_.MAIL as mail3_0_, resourceim0_7_.NAME as name4_0_, resourceim0_7_.PHONE as phone5_0_, resourceim0_7_.TOKEN_ISSUER as token_is6_0_, resourceim0_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim0_8_.COUNT as count1_17_, resourceim0_8_.INTERVAL as interval2_17_, resourceim0_8_.MAX as max3_17_, resourceim0_8_.STATE as state4_17_, resourceim0_8_.UNIT as unit5_17_, resourceim0_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim0_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim0_9_.DISPOSITION as disposit1_1_, resourceim0_9_.FACE_ISSUER as face_iss7_1_, resourceim0_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim0_9_.LEVEL as level2_1_, resourceim0_9_.STATE as state3_1_, resourceim0_9_.TYPE as type4_1_, resourceim0_10_.ISSUER as issuer0_4_, resourceim0_10_.IDENTIFIER as identifi0_4_, resourceim0_11_.ISSUER as issuer0_6_, resourceim0_11_.IDENTIFIER as identifi0_6_, resourceim0_12_.ISSUER as issuer0_18_, resourceim0_12_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[resourceim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES resourceim0_ left outer join ISSUERS resourceim0_1_ on resourceim0_.ISSUER=resourceim0_1_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_2_ on resourceim0_.ISSUER=resourceim0_2_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_2_.IDENTIFIER left outer join FACES resourceim0_3_ on resourceim0_.ISSUER=resourceim0_3_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_3_.IDENTIFIER left outer join EYES resourceim0_4_ on resourceim0_.ISSUER=resourceim0_4_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_4_.IDENTIFIER left outer join TENPRINTS resourceim0_5_ on resourceim0_.ISSUER=resourceim0_5_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_5_.IDENTIFIER left outer join MATCHES resourceim0_6_ on resourceim0_.ISSUER=resourceim0_6_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_6_.IDENTIFIER left outer join ADJUDICATORS resourceim0_7_ on resourceim0_.ISSUER=resourceim0_7_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_7_.IDENTIFIER left outer join TASKS resourceim0_8_ on resourceim0_.ISSUER=resourceim0_8_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_8_.IDENTIFIER left outer join CASES resourceim0_9_ on resourceim0_.ISSUER=resourceim0_9_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_10_ on resourceim0_.ISSUER=resourceim0_10_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_10_.FACE_IDENTIFIER left outer join EYES resourceim0_11_ on resourceim0_.ISSUER=resourceim0_11_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim0_12_ on resourceim0_.ISSUER=resourceim0_12_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_12_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=resourceim0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'resourceim0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'resourceim0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.262 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'resourceim0_.ISSUER as issuer2_14_, resourceim0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.ResourceImpl, tableAlias=resourceim0_}
    |  \-[SQL_TOKEN] SqlFragment: 'resourceim0_.CREATED as created4_14_, resourceim0_.CREATOR_ISSUER as creator13_14_, resourceim0_.CREATOR_IDENTIFIER as creator14_14_, resourceim0_.ENTITY as entity1_14_, resourceim0_.EXPIRATION as expirati5_14_, resourceim0_.EXTERNAL_IDENTIFIER as external6_14_, resourceim0_.MIMETYPE as mimetype7_14_, resourceim0_.MODIFIED as modified8_14_, resourceim0_.MODIFIER_ISSUER as modifie15_14_, resourceim0_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim0_.NAME as name9_14_, resourceim0_.URI as uri10_14_, resourceim0_.VERSION as version11_14_, resourceim0_.VALUE as value12_14_, resourceim0_1_.NAME as name1_10_, resourceim0_1_.PARENT_ISSUER as parent_i2_10_, resourceim0_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim0_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim0_2_.FACE_ISSUER as face_iss5_4_, resourceim0_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim0_2_.STATE as state2_4_, resourceim0_2_.TCN as tcn3_4_, resourceim0_2_.UOW as uow4_4_, resourceim0_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim0_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim0_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim0_3_.STATE as state2_8_, resourceim0_3_.TCN as tcn3_8_, resourceim0_3_.UOW as uow4_8_, resourceim0_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim0_4_.FACE_ISSUER as face_iss5_6_, resourceim0_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim0_4_.STATE as state2_6_, resourceim0_4_.TCN as tcn3_6_, resourceim0_4_.UOW as uow4_6_, resourceim0_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim0_5_.FACE_ISSUER as face_iss5_18_, resourceim0_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim0_5_.STATE as state2_18_, resourceim0_5_.TCN as tcn3_18_, resourceim0_5_.UOW as uow4_18_, resourceim0_6_.DISPOSITION as disposit1_11_, resourceim0_6_.FACE_ISSUER as face_iss4_11_, resourceim0_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim0_6_.SCORE as score2_11_, resourceim0_6_.TYPE as type3_11_, resourceim0_7_.LEVEL as level1_0_, resourceim0_7_.LOGIN as login2_0_, resourceim0_7_.MAIL as mail3_0_, resourceim0_7_.NAME as name4_0_, resourceim0_7_.PHONE as phone5_0_, resourceim0_7_.TOKEN_ISSUER as token_is6_0_, resourceim0_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim0_8_.COUNT as count1_17_, resourceim0_8_.INTERVAL as interval2_17_, resourceim0_8_.MAX as max3_17_, resourceim0_8_.STATE as state4_17_, resourceim0_8_.UNIT as unit5_17_, resourceim0_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim0_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim0_9_.DISPOSITION as disposit1_1_, resourceim0_9_.FACE_ISSUER as face_iss7_1_, resourceim0_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim0_9_.LEVEL as level2_1_, resourceim0_9_.STATE as state3_1_, resourceim0_9_.TYPE as type4_1_, resourceim0_10_.ISSUER as issuer0_4_, resourceim0_10_.IDENTIFIER as identifi0_4_, resourceim0_11_.ISSUER as issuer0_6_, resourceim0_11_.IDENTIFIER as identifi0_6_, resourceim0_12_.ISSUER as issuer0_18_, resourceim0_12_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[resourceim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES resourceim0_ left outer join ISSUERS resourceim0_1_ on resourceim0_.ISSUER=resourceim0_1_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_2_ on resourceim0_.ISSUER=resourceim0_2_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_2_.IDENTIFIER left outer join FACES resourceim0_3_ on resourceim0_.ISSUER=resourceim0_3_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_3_.IDENTIFIER left outer join EYES resourceim0_4_ on resourceim0_.ISSUER=resourceim0_4_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_4_.IDENTIFIER left outer join TENPRINTS resourceim0_5_ on resourceim0_.ISSUER=resourceim0_5_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_5_.IDENTIFIER left outer join MATCHES resourceim0_6_ on resourceim0_.ISSUER=resourceim0_6_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_6_.IDENTIFIER left outer join ADJUDICATORS resourceim0_7_ on resourceim0_.ISSUER=resourceim0_7_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_7_.IDENTIFIER left outer join TASKS resourceim0_8_ on resourceim0_.ISSUER=resourceim0_8_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_8_.IDENTIFIER left outer join CASES resourceim0_9_ on resourceim0_.ISSUER=resourceim0_9_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_10_ on resourceim0_.ISSUER=resourceim0_10_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_10_.FACE_IDENTIFIER left outer join EYES resourceim0_11_ on resourceim0_.ISSUER=resourceim0_11_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim0_12_ on resourceim0_.ISSUER=resourceim0_12_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_12_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=resourceim0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'resourceim0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'resourceim0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.262 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.262 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.262 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.ResourceImpl resource WHERE resource.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.262 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.ResourceImpl resource WHERE resource.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.262 [main] QueryTranslatorImpl - SQL: select resourceim0_.ISSUER as issuer2_14_, resourceim0_.IDENTIFIER as identifi3_14_, resourceim0_.CREATED as created4_14_, resourceim0_.CREATOR_ISSUER as creator13_14_, resourceim0_.CREATOR_IDENTIFIER as creator14_14_, resourceim0_.ENTITY as entity1_14_, resourceim0_.EXPIRATION as expirati5_14_, resourceim0_.EXTERNAL_IDENTIFIER as external6_14_, resourceim0_.MIMETYPE as mimetype7_14_, resourceim0_.MODIFIED as modified8_14_, resourceim0_.MODIFIER_ISSUER as modifie15_14_, resourceim0_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim0_.NAME as name9_14_, resourceim0_.URI as uri10_14_, resourceim0_.VERSION as version11_14_, resourceim0_.VALUE as value12_14_, resourceim0_1_.NAME as name1_10_, resourceim0_1_.PARENT_ISSUER as parent_i2_10_, resourceim0_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim0_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim0_2_.FACE_ISSUER as face_iss5_4_, resourceim0_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim0_2_.STATE as state2_4_, resourceim0_2_.TCN as tcn3_4_, resourceim0_2_.UOW as uow4_4_, resourceim0_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim0_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim0_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim0_3_.STATE as state2_8_, resourceim0_3_.TCN as tcn3_8_, resourceim0_3_.UOW as uow4_8_, resourceim0_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim0_4_.FACE_ISSUER as face_iss5_6_, resourceim0_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim0_4_.STATE as state2_6_, resourceim0_4_.TCN as tcn3_6_, resourceim0_4_.UOW as uow4_6_, resourceim0_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim0_5_.FACE_ISSUER as face_iss5_18_, resourceim0_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim0_5_.STATE as state2_18_, resourceim0_5_.TCN as tcn3_18_, resourceim0_5_.UOW as uow4_18_, resourceim0_6_.DISPOSITION as disposit1_11_, resourceim0_6_.FACE_ISSUER as face_iss4_11_, resourceim0_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim0_6_.SCORE as score2_11_, resourceim0_6_.TYPE as type3_11_, resourceim0_7_.LEVEL as level1_0_, resourceim0_7_.LOGIN as login2_0_, resourceim0_7_.MAIL as mail3_0_, resourceim0_7_.NAME as name4_0_, resourceim0_7_.PHONE as phone5_0_, resourceim0_7_.TOKEN_ISSUER as token_is6_0_, resourceim0_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim0_8_.COUNT as count1_17_, resourceim0_8_.INTERVAL as interval2_17_, resourceim0_8_.MAX as max3_17_, resourceim0_8_.STATE as state4_17_, resourceim0_8_.UNIT as unit5_17_, resourceim0_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim0_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim0_9_.DISPOSITION as disposit1_1_, resourceim0_9_.FACE_ISSUER as face_iss7_1_, resourceim0_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim0_9_.LEVEL as level2_1_, resourceim0_9_.STATE as state3_1_, resourceim0_9_.TYPE as type4_1_, resourceim0_10_.ISSUER as issuer0_4_, resourceim0_10_.IDENTIFIER as identifi0_4_, resourceim0_11_.ISSUER as issuer0_6_, resourceim0_11_.IDENTIFIER as identifi0_6_, resourceim0_12_.ISSUER as issuer0_18_, resourceim0_12_.IDENTIFIER as identifi0_18_ from RESOURCES resourceim0_ left outer join ISSUERS resourceim0_1_ on resourceim0_.ISSUER=resourceim0_1_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_2_ on resourceim0_.ISSUER=resourceim0_2_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_2_.IDENTIFIER left outer join FACES resourceim0_3_ on resourceim0_.ISSUER=resourceim0_3_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_3_.IDENTIFIER left outer join EYES resourceim0_4_ on resourceim0_.ISSUER=resourceim0_4_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_4_.IDENTIFIER left outer join TENPRINTS resourceim0_5_ on resourceim0_.ISSUER=resourceim0_5_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_5_.IDENTIFIER left outer join MATCHES resourceim0_6_ on resourceim0_.ISSUER=resourceim0_6_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_6_.IDENTIFIER left outer join ADJUDICATORS resourceim0_7_ on resourceim0_.ISSUER=resourceim0_7_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_7_.IDENTIFIER left outer join TASKS resourceim0_8_ on resourceim0_.ISSUER=resourceim0_8_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_8_.IDENTIFIER left outer join CASES resourceim0_9_ on resourceim0_.ISSUER=resourceim0_9_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_10_ on resourceim0_.ISSUER=resourceim0_10_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_10_.FACE_IDENTIFIER left outer join EYES resourceim0_11_ on resourceim0_.ISSUER=resourceim0_11_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim0_12_ on resourceim0_.ISSUER=resourceim0_12_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_12_.FACE_IDENTIFIER where resourceim0_.ISSUER=? and resourceim0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.262 [main] QueryTranslatorImpl - SQL: select resourceim0_.ISSUER as issuer2_14_, resourceim0_.IDENTIFIER as identifi3_14_, resourceim0_.CREATED as created4_14_, resourceim0_.CREATOR_ISSUER as creator13_14_, resourceim0_.CREATOR_IDENTIFIER as creator14_14_, resourceim0_.ENTITY as entity1_14_, resourceim0_.EXPIRATION as expirati5_14_, resourceim0_.EXTERNAL_IDENTIFIER as external6_14_, resourceim0_.MIMETYPE as mimetype7_14_, resourceim0_.MODIFIED as modified8_14_, resourceim0_.MODIFIER_ISSUER as modifie15_14_, resourceim0_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim0_.NAME as name9_14_, resourceim0_.URI as uri10_14_, resourceim0_.VERSION as version11_14_, resourceim0_.VALUE as value12_14_, resourceim0_1_.NAME as name1_10_, resourceim0_1_.PARENT_ISSUER as parent_i2_10_, resourceim0_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim0_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim0_2_.FACE_ISSUER as face_iss5_4_, resourceim0_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim0_2_.STATE as state2_4_, resourceim0_2_.TCN as tcn3_4_, resourceim0_2_.UOW as uow4_4_, resourceim0_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim0_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim0_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim0_3_.STATE as state2_8_, resourceim0_3_.TCN as tcn3_8_, resourceim0_3_.UOW as uow4_8_, resourceim0_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim0_4_.FACE_ISSUER as face_iss5_6_, resourceim0_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim0_4_.STATE as state2_6_, resourceim0_4_.TCN as tcn3_6_, resourceim0_4_.UOW as uow4_6_, resourceim0_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim0_5_.FACE_ISSUER as face_iss5_18_, resourceim0_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim0_5_.STATE as state2_18_, resourceim0_5_.TCN as tcn3_18_, resourceim0_5_.UOW as uow4_18_, resourceim0_6_.DISPOSITION as disposit1_11_, resourceim0_6_.FACE_ISSUER as face_iss4_11_, resourceim0_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim0_6_.SCORE as score2_11_, resourceim0_6_.TYPE as type3_11_, resourceim0_7_.LEVEL as level1_0_, resourceim0_7_.LOGIN as login2_0_, resourceim0_7_.MAIL as mail3_0_, resourceim0_7_.NAME as name4_0_, resourceim0_7_.PHONE as phone5_0_, resourceim0_7_.TOKEN_ISSUER as token_is6_0_, resourceim0_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim0_8_.COUNT as count1_17_, resourceim0_8_.INTERVAL as interval2_17_, resourceim0_8_.MAX as max3_17_, resourceim0_8_.STATE as state4_17_, resourceim0_8_.UNIT as unit5_17_, resourceim0_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim0_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim0_9_.DISPOSITION as disposit1_1_, resourceim0_9_.FACE_ISSUER as face_iss7_1_, resourceim0_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim0_9_.LEVEL as level2_1_, resourceim0_9_.STATE as state3_1_, resourceim0_9_.TYPE as type4_1_, resourceim0_10_.ISSUER as issuer0_4_, resourceim0_10_.IDENTIFIER as identifi0_4_, resourceim0_11_.ISSUER as issuer0_6_, resourceim0_11_.IDENTIFIER as identifi0_6_, resourceim0_12_.ISSUER as issuer0_18_, resourceim0_12_.IDENTIFIER as identifi0_18_ from RESOURCES resourceim0_ left outer join ISSUERS resourceim0_1_ on resourceim0_.ISSUER=resourceim0_1_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_2_ on resourceim0_.ISSUER=resourceim0_2_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_2_.IDENTIFIER left outer join FACES resourceim0_3_ on resourceim0_.ISSUER=resourceim0_3_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_3_.IDENTIFIER left outer join EYES resourceim0_4_ on resourceim0_.ISSUER=resourceim0_4_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_4_.IDENTIFIER left outer join TENPRINTS resourceim0_5_ on resourceim0_.ISSUER=resourceim0_5_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_5_.IDENTIFIER left outer join MATCHES resourceim0_6_ on resourceim0_.ISSUER=resourceim0_6_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_6_.IDENTIFIER left outer join ADJUDICATORS resourceim0_7_ on resourceim0_.ISSUER=resourceim0_7_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_7_.IDENTIFIER left outer join TASKS resourceim0_8_ on resourceim0_.ISSUER=resourceim0_8_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_8_.IDENTIFIER left outer join CASES resourceim0_9_ on resourceim0_.ISSUER=resourceim0_9_.ISSUER and resourceim0_.IDENTIFIER=resourceim0_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim0_10_ on resourceim0_.ISSUER=resourceim0_10_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_10_.FACE_IDENTIFIER left outer join EYES resourceim0_11_ on resourceim0_.ISSUER=resourceim0_11_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim0_12_ on resourceim0_.ISSUER=resourceim0_12_.FACE_ISSUER and resourceim0_.IDENTIFIER=resourceim0_12_.FACE_IDENTIFIER where resourceim0_.ISSUER=? and resourceim0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.263 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.263 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.263 [main] NamedQueryRepository - Checking named query: deleteResourcesByIdentifier
[DEBUG] 2020-08-12 19:18:21.263 [main] NamedQueryRepository - Checking named query: deleteResourcesByIdentifier
[TRACE] 2020-08-12 19:18:21.263 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (DELETE FROM ResourceImpl resource WHERE resource.identifier IN :identifiers)
[TRACE] 2020-08-12 19:18:21.263 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (DELETE FROM ResourceImpl resource WHERE resource.identifier IN :identifiers)
[DEBUG] 2020-08-12 19:18:21.263 [main] QueryTranslatorImpl - parse() - HQL: DELETE FROM com.gemalto.ics.usplatform.bip.ResourceImpl resource WHERE resource.identifier IN :identifiers
[DEBUG] 2020-08-12 19:18:21.263 [main] QueryTranslatorImpl - parse() - HQL: DELETE FROM com.gemalto.ics.usplatform.bip.ResourceImpl resource WHERE resource.identifier IN :identifiers
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---> deleteStatement
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---> deleteStatement
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - -----> optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - -----> optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - -------> path
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - -------> path
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.263 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------- path
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------- path
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------> asAlias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------> asAlias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------> alias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------> alias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------- alias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------- alias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------- asAlias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------- asAlias
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----- optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----- optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----> whereClause
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----> whereClause
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------> logicalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------> logicalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------> expression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------> expression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------> inList
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - ---------------------> inList
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -----------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------> parameter
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - -------------------------> parameter
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------- parameter
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------------- parameter
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------- inList
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------------- inList
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------- expression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--------- expression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------- logicalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <------- logicalExpression
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----- whereClause
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <----- whereClause
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--- deleteStatement
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <--- deleteStatement
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.264 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.264 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.264 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.265 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |     |  |  |  |  \-[IDENT] Node: 'ics'
    |     |  |  |  \-[IDENT] Node: 'usplatform'
    |     |  |  \-[IDENT] Node: 'bip'
    |     |  \-[IDENT] Node: 'ResourceImpl'
    |     \-[ALIAS] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'resource'
          |  \-[IDENT] Node: 'identifier'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'identifiers'

[DEBUG] 2020-08-12 19:18:21.265 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |     |  |  |  |  \-[IDENT] Node: 'ics'
    |     |  |  |  \-[IDENT] Node: 'usplatform'
    |     |  |  \-[IDENT] Node: 'bip'
    |     |  \-[IDENT] Node: 'ResourceImpl'
    |     \-[ALIAS] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[IN] Node: 'in'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'resource'
          |  \-[IDENT] Node: 'identifier'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'identifiers'

[DEBUG] 2020-08-12 19:18:21.265 [main] HqlSqlBaseWalker - delete << begin [level=1, statement=delete]
[DEBUG] 2020-08-12 19:18:21.265 [main] HqlSqlBaseWalker - delete << begin [level=1, statement=delete]
[DEBUG] 2020-08-12 19:18:21.265 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> resourceim0_
[DEBUG] 2020-08-12 19:18:21.265 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> resourceim0_
[TRACE] 2020-08-12 19:18:21.265 [main] FromElementType - Using non-qualified column reference [identifier -> ([ISSUER,IDENTIFIER])]
[TRACE] 2020-08-12 19:18:21.265 [main] FromElementType - Using non-qualified column reference [identifier -> ([ISSUER,IDENTIFIER])]
[DEBUG] 2020-08-12 19:18:21.265 [main] FromReferenceNode - Resolved : resource -> (ISSUER, IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.265 [main] FromReferenceNode - Resolved : resource -> (ISSUER, IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.265 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.265 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceImpl (resource) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.265 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.265 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.265 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.265 [main] DotNode - Terminal getPropertyPath = [identifier]
[TRACE] 2020-08-12 19:18:21.265 [main] FromElementType - Using non-qualified column reference [identifier -> ([ISSUER,IDENTIFIER])]
[TRACE] 2020-08-12 19:18:21.265 [main] FromElementType - Using non-qualified column reference [identifier -> ([ISSUER,IDENTIFIER])]
[DEBUG] 2020-08-12 19:18:21.265 [main] FromReferenceNode - Resolved : resource.identifier -> (ISSUER, IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.265 [main] FromReferenceNode - Resolved : resource.identifier -> (ISSUER, IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.265 [main] HqlSqlBaseWalker - delete : finishing up [level=1, statement=delete]
[DEBUG] 2020-08-12 19:18:21.265 [main] HqlSqlBaseWalker - delete : finishing up [level=1, statement=delete]
[DEBUG] 2020-08-12 19:18:21.265 [main] HqlSqlBaseWalker - delete >> end [level=1, statement=delete]
[DEBUG] 2020-08-12 19:18:21.265 [main] HqlSqlBaseWalker - delete >> end [level=1, statement=delete]
[DEBUG] 2020-08-12 19:18:21.265 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (RESOURCES)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[resourceim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=resourceim0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] InLogicOperatorNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.265 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (RESOURCES)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[resourceim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=resourceim0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] InLogicOperatorNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.265 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.265 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.265 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.265 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.265 [main] NamedQueryRepository - Checking named query: selectIssuers
[DEBUG] 2020-08-12 19:18:21.265 [main] NamedQueryRepository - Checking named query: selectIssuers
[TRACE] 2020-08-12 19:18:21.265 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT issuer.identifier.issuer FROM IssuerImpl issuer WHERE issuer.parentIssuer.identifier.issuer = :issuer or issuer.identifier.issuer = :issuer)
[TRACE] 2020-08-12 19:18:21.265 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT issuer.identifier.issuer FROM IssuerImpl issuer WHERE issuer.parentIssuer.identifier.issuer = :issuer or issuer.identifier.issuer = :issuer)
[DEBUG] 2020-08-12 19:18:21.266 [main] QueryTranslatorImpl - parse() - HQL: SELECT issuer.identifier.issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer.identifier.issuer = :issuer or issuer.identifier.issuer = :issuer
[DEBUG] 2020-08-12 19:18:21.266 [main] QueryTranslatorImpl - parse() - HQL: SELECT issuer.identifier.issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer.identifier.issuer = :issuer or issuer.identifier.issuer = :issuer
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.266 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.267 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.268 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.268 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.268 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.268 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'issuer'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'issuer'
    |        |  \-[IDENT] Node: 'identifier'
    |        \-[IDENT] Node: 'issuer'
    \-[WHERE] Node: 'WHERE'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'issuer'
          |  |  |  |  \-[IDENT] Node: 'parentIssuer'
          |  |  |  \-[IDENT] Node: 'identifier'
          |  |  \-[IDENT] Node: 'issuer'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'issuer'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'issuer'
             |  |  \-[IDENT] Node: 'identifier'
             |  \-[IDENT] Node: 'issuer'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'issuer'

[DEBUG] 2020-08-12 19:18:21.268 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'issuer'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'issuer'
    |        |  \-[IDENT] Node: 'identifier'
    |        \-[IDENT] Node: 'issuer'
    \-[WHERE] Node: 'WHERE'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'issuer'
          |  |  |  |  \-[IDENT] Node: 'parentIssuer'
          |  |  |  \-[IDENT] Node: 'identifier'
          |  |  \-[IDENT] Node: 'issuer'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'issuer'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'issuer'
             |  |  \-[IDENT] Node: 'identifier'
             |  \-[IDENT] Node: 'issuer'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'issuer'

[DEBUG] 2020-08-12 19:18:21.269 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.269 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.269 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:21.269 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - Unresolved property path is now 'identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - Unresolved property path is now 'identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.identifier -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.identifier -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.identifier.issuer -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.identifier.issuer -> issuerimpl0_.ISSUER
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> parentIssuer (subclass)]
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> parentIssuer (subclass)]
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : parentIssuer -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.IssuerImpl)
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : parentIssuer -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.IssuerImpl)
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.IssuerImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.IssuerImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - Unresolved property path is now 'parentIssuer.identifier'
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - Unresolved property path is now 'parentIssuer.identifier'
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.parentIssuer -> (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.parentIssuer -> (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.269 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : parentIssuer.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : parentIssuer.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - Unresolved property path is now 'parentIssuer.identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - Unresolved property path is now 'parentIssuer.identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.parentIssuer.identifier -> (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.parentIssuer.identifier -> (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : parentIssuer.identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.269 [main] DotNode - getDataType() : parentIssuer.identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.parentIssuer.identifier.issuer -> issuerimpl0_1_.PARENT_ISSUER
[DEBUG] 2020-08-12 19:18:21.269 [main] FromReferenceNode - Resolved : issuer.parentIssuer.identifier.issuer -> issuerimpl0_1_.PARENT_ISSUER
[DEBUG] 2020-08-12 19:18:21.270 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.270 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.270 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.270 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.270 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.270 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.270 [main] DotNode - Unresolved property path is now 'identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.270 [main] DotNode - Unresolved property path is now 'identifier.issuer'
[DEBUG] 2020-08-12 19:18:21.270 [main] FromReferenceNode - Resolved : issuer.identifier -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.270 [main] FromReferenceNode - Resolved : issuer.identifier -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.270 [main] DotNode - getDataType() : identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.270 [main] DotNode - getDataType() : identifier.issuer -> org.hibernate.type.LongType@7b3cde6f
[DEBUG] 2020-08-12 19:18:21.270 [main] FromReferenceNode - Resolved : issuer.identifier.issuer -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.270 [main] FromReferenceNode - Resolved : issuer.identifier.issuer -> issuerimpl0_.ISSUER
[DEBUG] 2020-08-12 19:18:21.270 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.270 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.270 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( issuerimpl0_.ISSUER ( issuerimpl0_.ISSUER (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) identifier ) issuer ) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( or ( = ( issuerimpl0_1_.PARENT_ISSUER ( (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER) ( (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER) (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) parentIssuer ) identifier ) issuer ) ? ) ( = ( issuerimpl0_.ISSUER ( issuerimpl0_.ISSUER (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) identifier ) issuer ) ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.270 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( issuerimpl0_.ISSUER ( issuerimpl0_.ISSUER (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) identifier ) issuer ) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( or ( = ( issuerimpl0_1_.PARENT_ISSUER ( (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER) ( (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER) (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) parentIssuer ) identifier ) issuer ) ? ) ( = ( issuerimpl0_.ISSUER ( issuerimpl0_.ISSUER (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) identifier ) issuer ) ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.270 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | path: issuer.identifier.issuer
    |  |  +-DotNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  |  | path: issuer.identifier
    |  |  |  +-IdentNode
    |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  |  |  | originalText: issuer
    |  |  |  \-IdentNode
    |  |  |    persister: null
    |  |  |    originalText: identifier
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: issuer
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  | path: issuer.parentIssuer.identifier.issuer
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  |  | path: issuer.parentIssuer.identifier
          |  |  |  +-DotNode
          |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  |  |  | path: issuer.parentIssuer
          |  |  |  |  +-IdentNode
          |  |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  |  |  |  | originalText: issuer
          |  |  |  |  \-IdentNode
          |  |  |  |    persister: null
          |  |  |  |    originalText: parentIssuer
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: identifier
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: issuer
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
             | path: issuer.identifier.issuer
             |  +-DotNode
             |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
             |  | path: issuer.identifier
             |  |  +-IdentNode
             |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
             |  |  | originalText: issuer
             |  |  \-IdentNode
             |  |    persister: null
             |  |    originalText: identifier
             |  \-IdentNode
             |    persister: null
             |    originalText: issuer
             \-ParameterNode

[DEBUG] 2020-08-12 19:18:21.270 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | path: issuer.identifier.issuer
    |  |  +-DotNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  |  | path: issuer.identifier
    |  |  |  +-IdentNode
    |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  |  |  | originalText: issuer
    |  |  |  \-IdentNode
    |  |  |    persister: null
    |  |  |    originalText: identifier
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: issuer
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  | path: issuer.parentIssuer.identifier.issuer
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  |  | path: issuer.parentIssuer.identifier
          |  |  |  +-DotNode
          |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  |  |  | path: issuer.parentIssuer
          |  |  |  |  +-IdentNode
          |  |  |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
          |  |  |  |  | originalText: issuer
          |  |  |  |  \-IdentNode
          |  |  |  |    persister: null
          |  |  |  |    originalText: parentIssuer
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: identifier
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: issuer
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
             | path: issuer.identifier.issuer
             |  +-DotNode
             |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
             |  | path: issuer.identifier
             |  |  +-IdentNode
             |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
             |  |  | originalText: issuer
             |  |  \-IdentNode
             |  |    persister: null
             |  |    originalText: identifier
             |  \-IdentNode
             |    persister: null
             |    originalText: issuer
             \-ParameterNode

[TRACE] 2020-08-12 19:18:21.270 [main] JoinProcessor - Forcing inclusion of extra joins [alias=issuerimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.270 [main] JoinProcessor - Forcing inclusion of extra joins [alias=issuerimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.270 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.270 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.270 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.270 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.270 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.270 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.271 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.271 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.271 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=identifier.issuer,path=issuer.identifier.issuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
    |  |  +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=identifier.issuer,path=issuer.identifier,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
    |  |  |  +-[ALIAS_REF] IdentNode: '(issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[issuer], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=issuer,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'issuerimpl0_1_.PARENT_ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=parentIssuer.identifier.issuer,path=issuer.parentIssuer.identifier.issuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
          |  |  +-[DOT] DotNode: '(issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=parentIssuer.identifier.issuer,path=issuer.parentIssuer.identifier,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
          |  |  |  +-[DOT] DotNode: '(issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)' {propertyName=identifier,dereferenceType=UNKNOWN,getPropertyPath=parentIssuer.identifier,path=issuer.parentIssuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
          |  |  |  |  +-[ALIAS_REF] IdentNode: '(issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
          |  |  |  |  \-[IDENT] IdentNode: 'parentIssuer' {originalText=parentIssuer}
          |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.LongType@7b3cde6f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=identifier.issuer,path=issuer.identifier.issuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
             |  +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=identifier.issuer,path=issuer.identifier,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
             |  |  +-[ALIAS_REF] IdentNode: '(issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
             |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
             |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
             \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.LongType@7b3cde6f}

[DEBUG] 2020-08-12 19:18:21.271 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=identifier.issuer,path=issuer.identifier.issuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
    |  |  +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=identifier.issuer,path=issuer.identifier,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
    |  |  |  +-[ALIAS_REF] IdentNode: '(issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[issuer], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=issuer,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'issuerimpl0_1_.PARENT_ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=parentIssuer.identifier.issuer,path=issuer.parentIssuer.identifier.issuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
          |  |  +-[DOT] DotNode: '(issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=parentIssuer.identifier.issuer,path=issuer.parentIssuer.identifier,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
          |  |  |  +-[DOT] DotNode: '(issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)' {propertyName=identifier,dereferenceType=UNKNOWN,getPropertyPath=parentIssuer.identifier,path=issuer.parentIssuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
          |  |  |  |  +-[ALIAS_REF] IdentNode: '(issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
          |  |  |  |  \-[IDENT] IdentNode: 'parentIssuer' {originalText=parentIssuer}
          |  |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
          |  |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.LongType@7b3cde6f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=PRIMITIVE,getPropertyPath=identifier.issuer,path=issuer.identifier.issuer,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
             |  +-[DOT] DotNode: 'issuerimpl0_.ISSUER' {propertyName=issuer,dereferenceType=COMPONENT,getPropertyPath=identifier.issuer,path=issuer.identifier,tableAlias=issuerimpl0_,className=com.gemalto.ics.usplatform.bip.IssuerImpl,classAlias=issuer}
             |  |  +-[ALIAS_REF] IdentNode: '(issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
             |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
             |  \-[IDENT] IdentNode: 'issuer' {originalText=issuer}
             \-[NAMED_PARAM] ParameterNode: '?' {name=issuer, expectedType=org.hibernate.type.LongType@7b3cde6f}

[DEBUG] 2020-08-12 19:18:21.271 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.271 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.271 [main] QueryTranslatorImpl - HQL: SELECT issuer.identifier.issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer.identifier.issuer = :issuer or issuer.identifier.issuer = :issuer
[DEBUG] 2020-08-12 19:18:21.271 [main] QueryTranslatorImpl - HQL: SELECT issuer.identifier.issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer.identifier.issuer = :issuer or issuer.identifier.issuer = :issuer
[DEBUG] 2020-08-12 19:18:21.272 [main] QueryTranslatorImpl - SQL: select issuerimpl0_.ISSUER as col_0_0_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and (issuerimpl0_1_.PARENT_ISSUER=? or issuerimpl0_.ISSUER=?)
[DEBUG] 2020-08-12 19:18:21.272 [main] QueryTranslatorImpl - SQL: select issuerimpl0_.ISSUER as col_0_0_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and (issuerimpl0_1_.PARENT_ISSUER=? or issuerimpl0_.ISSUER=?)
[DEBUG] 2020-08-12 19:18:21.272 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.272 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.272 [main] NamedQueryRepository - Checking named query: selectFaceByAbisIdentifiers
[DEBUG] 2020-08-12 19:18:21.272 [main] NamedQueryRepository - Checking named query: selectFaceByAbisIdentifiers
[TRACE] 2020-08-12 19:18:21.272 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT resource FROM FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state)
[TRACE] 2020-08-12 19:18:21.272 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT resource FROM FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state)
[DEBUG] 2020-08-12 19:18:21.272 [main] QueryTranslatorImpl - parse() - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state
[DEBUG] 2020-08-12 19:18:21.272 [main] QueryTranslatorImpl - parse() - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.272 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.273 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.278 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.279 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.280 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.280 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.280 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.280 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.280 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[IN] Node: 'in'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'resource'
          |  |  \-[IDENT] Node: 'abisidentifier'
          |  \-[IN_LIST] Node: 'inList'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'abisidentifier'
          \-[IN] Node: 'in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'resource'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.280 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[IN] Node: 'in'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'resource'
          |  |  \-[IDENT] Node: 'abisidentifier'
          |  \-[IN_LIST] Node: 'inList'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'abisidentifier'
          \-[IN] Node: 'in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'resource'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.280 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.280 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.280 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.280 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.280 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.280 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.280 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.280 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.280 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> abisidentifier (subclass)]
[TRACE] 2020-08-12 19:18:21.280 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> abisidentifier (subclass)]
[DEBUG] 2020-08-12 19:18:21.280 [main] DotNode - getDataType() : abisidentifier -> org.hibernate.type.StringNVarcharType@1668919e
[DEBUG] 2020-08-12 19:18:21.280 [main] DotNode - getDataType() : abisidentifier -> org.hibernate.type.StringNVarcharType@1668919e
[DEBUG] 2020-08-12 19:18:21.280 [main] FromReferenceNode - Resolved : resource.abisidentifier -> faceimpl0_1_.ABIS_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.280 [main] FromReferenceNode - Resolved : resource.abisidentifier -> faceimpl0_1_.ABIS_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.281 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.281 [main] FromReferenceNode - Resolved : resource -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.281 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.281 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (resource) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.281 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.281 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@5570dc21
[DEBUG] 2020-08-12 19:18:21.281 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.281 [main] FromReferenceNode - Resolved : resource.state -> faceimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.281 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.281 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.281 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( in ( faceimpl0_1_.ABIS_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) abisidentifier ) ( inList ? ) ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ) )
[DEBUG] 2020-08-12 19:18:21.281 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( in ( faceimpl0_1_.ABIS_IDENTIFIER (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) abisidentifier ) ( inList ? ) ) ( in ( faceimpl0_1_.STATE (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ) )
[DEBUG] 2020-08-12 19:18:21.281 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-InLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          |  | path: resource.abisidentifier
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          |  |  | originalText: resource
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: abisidentifier
          |  \-SqlNode
          |     \-ParameterNode
          \-InLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
             | path: resource.state
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
             |  | originalText: resource
             |  \-IdentNode
             |    persister: null
             |    originalText: state
             \-SqlNode
                \-ParameterNode

[DEBUG] 2020-08-12 19:18:21.281 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-InLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          |  | path: resource.abisidentifier
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
          |  |  | originalText: resource
          |  |  \-IdentNode
          |  |    persister: null
          |  |    originalText: abisidentifier
          |  \-SqlNode
          |     \-ParameterNode
          \-InLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
             | path: resource.state
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
             |  | originalText: resource
             |  \-IdentNode
             |    persister: null
             |    originalText: state
             \-SqlNode
                \-ParameterNode

[TRACE] 2020-08-12 19:18:21.281 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.281 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.282 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.282 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.282 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.282 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.282 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.282 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.282 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.282 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.282 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
       \-[AND] SqlNode: 'AND'
          +-[IN] InLogicOperatorNode: 'in'
          |  +-[DOT] DotNode: 'faceimpl0_1_.ABIS_IDENTIFIER' {propertyName=abisidentifier,dereferenceType=PRIMITIVE,getPropertyPath=abisidentifier,path=resource.abisidentifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
          |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
          |  |  \-[IDENT] IdentNode: 'abisidentifier' {originalText=abisidentifier}
          |  \-[IN_LIST] SqlNode: 'inList'
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=abisidentifier, expectedType=org.hibernate.type.StringNVarcharType@1668919e}
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
             |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[IN_LIST] SqlNode: 'inList'
                \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@5570dc21}

[DEBUG] 2020-08-12 19:18:21.282 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
       \-[AND] SqlNode: 'AND'
          +-[IN] InLogicOperatorNode: 'in'
          |  +-[DOT] DotNode: 'faceimpl0_1_.ABIS_IDENTIFIER' {propertyName=abisidentifier,dereferenceType=PRIMITIVE,getPropertyPath=abisidentifier,path=resource.abisidentifier,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
          |  |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
          |  |  \-[IDENT] IdentNode: 'abisidentifier' {originalText=abisidentifier}
          |  \-[IN_LIST] SqlNode: 'inList'
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=abisidentifier, expectedType=org.hibernate.type.StringNVarcharType@1668919e}
          \-[IN] InLogicOperatorNode: 'in'
             +-[DOT] DotNode: 'faceimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=resource.state,tableAlias=faceimpl0_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=resource}
             |  +-[ALIAS_REF] IdentNode: '(faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)' {alias=resource, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[IN_LIST] SqlNode: 'inList'
                \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@5570dc21}

[DEBUG] 2020-08-12 19:18:21.282 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.282 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.282 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state
[DEBUG] 2020-08-12 19:18:21.282 [main] QueryTranslatorImpl - HQL: SELECT resource FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl resource WHERE resource.abisidentifier IN :abisidentifier AND resource.state IN :state
[DEBUG] 2020-08-12 19:18:21.282 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_, faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and (faceimpl0_1_.ABIS_IDENTIFIER in (?)) and (faceimpl0_1_.STATE in (?))
[DEBUG] 2020-08-12 19:18:21.282 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_, faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and (faceimpl0_1_.ABIS_IDENTIFIER in (?)) and (faceimpl0_1_.STATE in (?))
[DEBUG] 2020-08-12 19:18:21.282 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.282 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.282 [main] NamedQueryRepository - Checking named query: selectFaceByIdentifier
[DEBUG] 2020-08-12 19:18:21.282 [main] NamedQueryRepository - Checking named query: selectFaceByIdentifier
[TRACE] 2020-08-12 19:18:21.283 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT face FROM FaceImpl face WHERE face.identifier = :identifier)
[TRACE] 2020-08-12 19:18:21.283 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT face FROM FaceImpl face WHERE face.identifier = :identifier)
[DEBUG] 2020-08-12 19:18:21.283 [main] QueryTranslatorImpl - parse() - HQL: SELECT face FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.283 [main] QueryTranslatorImpl - parse() - HQL: SELECT face FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.283 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.284 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.284 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.284 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.285 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'face'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'face'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'face'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.285 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'FaceImpl'
    |  |     \-[ALIAS] Node: 'face'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'face'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'face'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.285 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.285 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.285 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.285 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> faceimpl0_
[DEBUG] 2020-08-12 19:18:21.285 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.285 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.285 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.285 [main] FromReferenceNode - Resolved : face -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.285 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.285 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (face) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.285 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.285 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.285 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.285 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.285 [main] FromReferenceNode - Resolved : face.identifier -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.285 [main] FromReferenceNode - Resolved : face.identifier -> (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.285 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.285 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.285 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( = faceimpl0_.ISSUER ? ) ( = faceimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.285 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (faceimpl0_.ISSUER, faceimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES faceimpl0_ ) ( WHERE ( AND ( = faceimpl0_.ISSUER ? ) ( = faceimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.286 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: face
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.286 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | originalText: face
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.286 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.286 [main] JoinProcessor - Using FROM fragment [RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.286 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.286 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.286 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.286 [main] SyntheticAndFactory - Using processed WHERE-fragment [faceimpl0_.ENTITY='FaceImpl']
[DEBUG] 2020-08-12 19:18:21.286 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.286 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.286 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_' {alias=face, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[face], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=face,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.286 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_' {alias=face, className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl, tableAlias=faceimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[face], fromElementByTableAlias=[faceimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=face,role=null,tableName=RESOURCES,tableAlias=faceimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ENTITY='FaceImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'faceimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.286 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.286 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.286 [main] QueryTranslatorImpl - HQL: SELECT face FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.286 [main] QueryTranslatorImpl - HQL: SELECT face FROM com.gemalto.ics.usplatform.bip.biometric.FaceImpl face WHERE face.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.286 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_, faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and faceimpl0_.ISSUER=? and faceimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.286 [main] QueryTranslatorImpl - SQL: select faceimpl0_.ISSUER as issuer2_14_, faceimpl0_.IDENTIFIER as identifi3_14_, faceimpl0_.CREATED as created4_14_, faceimpl0_.CREATOR_ISSUER as creator13_14_, faceimpl0_.CREATOR_IDENTIFIER as creator14_14_, faceimpl0_.ENTITY as entity1_14_, faceimpl0_.EXPIRATION as expirati5_14_, faceimpl0_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl0_.MIMETYPE as mimetype7_14_, faceimpl0_.MODIFIED as modified8_14_, faceimpl0_.MODIFIER_ISSUER as modifie15_14_, faceimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl0_.NAME as name9_14_, faceimpl0_.URI as uri10_14_, faceimpl0_.VERSION as version11_14_, faceimpl0_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl0_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl0_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl0_1_.STATE as state2_8_, faceimpl0_1_.TCN as tcn3_8_, faceimpl0_1_.UOW as uow4_8_, faceimpl0_2_.ISSUER as issuer0_4_, faceimpl0_2_.IDENTIFIER as identifi0_4_, faceimpl0_3_.ISSUER as issuer0_6_, faceimpl0_3_.IDENTIFIER as identifi0_6_, faceimpl0_4_.ISSUER as issuer0_18_, faceimpl0_4_.IDENTIFIER as identifi0_18_ from RESOURCES faceimpl0_ inner join FACES faceimpl0_1_ on faceimpl0_.ISSUER=faceimpl0_1_.ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl0_2_ on faceimpl0_.ISSUER=faceimpl0_2_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_2_.FACE_IDENTIFIER left outer join EYES faceimpl0_3_ on faceimpl0_.ISSUER=faceimpl0_3_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl0_4_ on faceimpl0_.ISSUER=faceimpl0_4_.FACE_ISSUER and faceimpl0_.IDENTIFIER=faceimpl0_4_.FACE_IDENTIFIER where faceimpl0_.ENTITY='FaceImpl' and faceimpl0_.ISSUER=? and faceimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.286 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.286 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.286 [main] NamedQueryRepository - Checking named query: selectIssuerByIdentifier
[DEBUG] 2020-08-12 19:18:21.286 [main] NamedQueryRepository - Checking named query: selectIssuerByIdentifier
[TRACE] 2020-08-12 19:18:21.287 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT issuer FROM IssuerImpl issuer WHERE issuer.identifier= :identifier)
[TRACE] 2020-08-12 19:18:21.287 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT issuer FROM IssuerImpl issuer WHERE issuer.identifier= :identifier)
[DEBUG] 2020-08-12 19:18:21.287 [main] QueryTranslatorImpl - parse() - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.287 [main] QueryTranslatorImpl - parse() - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.identifier= :identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.287 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.288 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.288 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.288 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.289 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'issuer'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'issuer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'issuer'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.289 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'issuer'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'issuer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'issuer'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.289 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.289 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.289 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:21.289 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:21.289 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.289 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.289 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.289 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.289 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.289 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.289 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.289 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.289 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.289 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.289 [main] FromReferenceNode - Resolved : issuer.identifier -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.289 [main] FromReferenceNode - Resolved : issuer.identifier -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.289 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.289 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.289 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( AND ( = issuerimpl0_.ISSUER ? ) ( = issuerimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.289 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( AND ( = issuerimpl0_.ISSUER ? ) ( = issuerimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.290 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity IssuerImpl): [RESOURCES, ISSUERS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | originalText: issuer
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.290 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity IssuerImpl): [RESOURCES, ISSUERS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | originalText: issuer
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.290 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.290 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.290 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.290 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.290 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.290 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.290 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.290 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.290 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[issuer], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=issuer,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.290 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[issuer], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=issuer,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.290 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.290 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.291 [main] QueryTranslatorImpl - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.291 [main] QueryTranslatorImpl - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.291 [main] QueryTranslatorImpl - SQL: select issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.291 [main] QueryTranslatorImpl - SQL: select issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.291 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.291 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.291 [main] NamedQueryRepository - Checking named query: selectTokenByIdentifier
[DEBUG] 2020-08-12 19:18:21.291 [main] NamedQueryRepository - Checking named query: selectTokenByIdentifier
[TRACE] 2020-08-12 19:18:21.291 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT token FROM TokenImpl token WHERE token.identifier= :identifier)
[TRACE] 2020-08-12 19:18:21.291 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT token FROM TokenImpl token WHERE token.identifier= :identifier)
[DEBUG] 2020-08-12 19:18:21.291 [main] QueryTranslatorImpl - parse() - HQL: SELECT token FROM com.gemalto.ics.usplatform.bip.security.TokenImpl token WHERE token.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.291 [main] QueryTranslatorImpl - parse() - HQL: SELECT token FROM com.gemalto.ics.usplatform.bip.security.TokenImpl token WHERE token.identifier= :identifier
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.291 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.292 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.293 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.293 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.293 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.293 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'security'
    |  |     |  \-[IDENT] Node: 'TokenImpl'
    |  |     \-[ALIAS] Node: 'token'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'token'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'token'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.293 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'security'
    |  |     |  \-[IDENT] Node: 'TokenImpl'
    |  |     \-[ALIAS] Node: 'token'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'token'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'token'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.293 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.293 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.293 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.security.TokenImpl (token) -> tokenimpl0_
[DEBUG] 2020-08-12 19:18:21.293 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.security.TokenImpl (token) -> tokenimpl0_
[DEBUG] 2020-08-12 19:18:21.294 [main] FromReferenceNode - Resolved : token -> (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.294 [main] FromReferenceNode - Resolved : token -> (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.294 [main] FromReferenceNode - Resolved : token -> (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.294 [main] FromReferenceNode - Resolved : token -> (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.294 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.security.TokenImpl (token) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.294 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.security.TokenImpl (token) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.294 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.294 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.294 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.294 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.294 [main] FromReferenceNode - Resolved : token.identifier -> (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.294 [main] FromReferenceNode - Resolved : token.identifier -> (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.294 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.294 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.294 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES tokenimpl0_ ) ( WHERE ( AND ( = tokenimpl0_.ISSUER ? ) ( = tokenimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.294 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (tokenimpl0_.ISSUER, tokenimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES tokenimpl0_ ) ( WHERE ( AND ( = tokenimpl0_.ISSUER ? ) ( = tokenimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.294 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TokenImpl): [RESOURCES]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.security.TokenImpl)
    |  | originalText: token
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.294 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TokenImpl): [RESOURCES]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.security.TokenImpl)
    |  | originalText: token
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.294 [main] JoinProcessor - Using FROM fragment [RESOURCES tokenimpl0_]
[DEBUG] 2020-08-12 19:18:21.294 [main] JoinProcessor - Using FROM fragment [RESOURCES tokenimpl0_]
[DEBUG] 2020-08-12 19:18:21.294 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl')]
[DEBUG] 2020-08-12 19:18:21.294 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl')]
[DEBUG] 2020-08-12 19:18:21.295 [main] SyntheticAndFactory - Using processed WHERE-fragment [tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl')]
[DEBUG] 2020-08-12 19:18:21.295 [main] SyntheticAndFactory - Using processed WHERE-fragment [tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl')]
[DEBUG] 2020-08-12 19:18:21.295 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.295 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tokenimpl0_.ISSUER as issuer2_14_, tokenimpl0_.IDENTIFIER as identifi3_14_' {alias=token, className=com.gemalto.ics.usplatform.bip.security.TokenImpl, tableAlias=tokenimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.CREATED as created4_14_, tokenimpl0_.CREATOR_ISSUER as creator13_14_, tokenimpl0_.CREATOR_IDENTIFIER as creator14_14_, tokenimpl0_.ENTITY as entity1_14_, tokenimpl0_.EXPIRATION as expirati5_14_, tokenimpl0_.EXTERNAL_IDENTIFIER as external6_14_, tokenimpl0_.MIMETYPE as mimetype7_14_, tokenimpl0_.MODIFIED as modified8_14_, tokenimpl0_.MODIFIER_ISSUER as modifie15_14_, tokenimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, tokenimpl0_.NAME as name9_14_, tokenimpl0_.URI as uri10_14_, tokenimpl0_.VERSION as version11_14_, tokenimpl0_.VALUE as value12_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[token], fromElementByTableAlias=[tokenimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES tokenimpl0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=token,role=null,tableName=RESOURCES,tableAlias=tokenimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.security.TokenImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl')'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'tokenimpl0_.ISSUER as issuer2_14_, tokenimpl0_.IDENTIFIER as identifi3_14_' {alias=token, className=com.gemalto.ics.usplatform.bip.security.TokenImpl, tableAlias=tokenimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.CREATED as created4_14_, tokenimpl0_.CREATOR_ISSUER as creator13_14_, tokenimpl0_.CREATOR_IDENTIFIER as creator14_14_, tokenimpl0_.ENTITY as entity1_14_, tokenimpl0_.EXPIRATION as expirati5_14_, tokenimpl0_.EXTERNAL_IDENTIFIER as external6_14_, tokenimpl0_.MIMETYPE as mimetype7_14_, tokenimpl0_.MODIFIED as modified8_14_, tokenimpl0_.MODIFIER_ISSUER as modifie15_14_, tokenimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, tokenimpl0_.NAME as name9_14_, tokenimpl0_.URI as uri10_14_, tokenimpl0_.VERSION as version11_14_, tokenimpl0_.VALUE as value12_14_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[token], fromElementByTableAlias=[tokenimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES tokenimpl0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=token,role=null,tableName=RESOURCES,tableAlias=tokenimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.security.TokenImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl')'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'tokenimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.295 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.295 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - HQL: SELECT token FROM com.gemalto.ics.usplatform.bip.security.TokenImpl token WHERE token.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - HQL: SELECT token FROM com.gemalto.ics.usplatform.bip.security.TokenImpl token WHERE token.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - SQL: select tokenimpl0_.ISSUER as issuer2_14_, tokenimpl0_.IDENTIFIER as identifi3_14_, tokenimpl0_.CREATED as created4_14_, tokenimpl0_.CREATOR_ISSUER as creator13_14_, tokenimpl0_.CREATOR_IDENTIFIER as creator14_14_, tokenimpl0_.ENTITY as entity1_14_, tokenimpl0_.EXPIRATION as expirati5_14_, tokenimpl0_.EXTERNAL_IDENTIFIER as external6_14_, tokenimpl0_.MIMETYPE as mimetype7_14_, tokenimpl0_.MODIFIED as modified8_14_, tokenimpl0_.MODIFIER_ISSUER as modifie15_14_, tokenimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, tokenimpl0_.NAME as name9_14_, tokenimpl0_.URI as uri10_14_, tokenimpl0_.VERSION as version11_14_, tokenimpl0_.VALUE as value12_14_ from RESOURCES tokenimpl0_ where tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl') and tokenimpl0_.ISSUER=? and tokenimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - SQL: select tokenimpl0_.ISSUER as issuer2_14_, tokenimpl0_.IDENTIFIER as identifi3_14_, tokenimpl0_.CREATED as created4_14_, tokenimpl0_.CREATOR_ISSUER as creator13_14_, tokenimpl0_.CREATOR_IDENTIFIER as creator14_14_, tokenimpl0_.ENTITY as entity1_14_, tokenimpl0_.EXPIRATION as expirati5_14_, tokenimpl0_.EXTERNAL_IDENTIFIER as external6_14_, tokenimpl0_.MIMETYPE as mimetype7_14_, tokenimpl0_.MODIFIED as modified8_14_, tokenimpl0_.MODIFIER_ISSUER as modifie15_14_, tokenimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, tokenimpl0_.NAME as name9_14_, tokenimpl0_.URI as uri10_14_, tokenimpl0_.VERSION as version11_14_, tokenimpl0_.VALUE as value12_14_ from RESOURCES tokenimpl0_ where tokenimpl0_.ENTITY in ('TokenImpl', 'NtlmTokenImpl') and tokenimpl0_.ISSUER=? and tokenimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.295 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.295 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.295 [main] NamedQueryRepository - Checking named query: selectCollectionResourcesByIdentifier
[DEBUG] 2020-08-12 19:18:21.295 [main] NamedQueryRepository - Checking named query: selectCollectionResourcesByIdentifier
[TRACE] 2020-08-12 19:18:21.295 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT collection.value FROM ResourceCollectionImpl collection WHERE collection.identifier= :identifier)
[TRACE] 2020-08-12 19:18:21.295 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT collection.value FROM ResourceCollectionImpl collection WHERE collection.identifier= :identifier)
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - parse() - HQL: SELECT collection.value FROM com.gemalto.ics.usplatform.bip.ResourceCollectionImpl collection WHERE collection.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.295 [main] QueryTranslatorImpl - parse() - HQL: SELECT collection.value FROM com.gemalto.ics.usplatform.bip.ResourceCollectionImpl collection WHERE collection.identifier= :identifier
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.295 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.296 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.297 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.297 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.297 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.298 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'ResourceCollectionImpl'
    |  |     \-[ALIAS] Node: 'collection'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'collection'
    |        \-[IDENT] Node: 'value'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'collection'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.298 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'ResourceCollectionImpl'
    |  |     \-[ALIAS] Node: 'collection'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'collection'
    |        \-[IDENT] Node: 'value'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'collection'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.298 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.298 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.298 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> resourceco0_
[DEBUG] 2020-08-12 19:18:21.298 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> resourceco0_
[DEBUG] 2020-08-12 19:18:21.298 [main] FromReferenceNode - Resolved : collection -> (resourceco0_.ISSUER, resourceco0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.298 [main] FromReferenceNode - Resolved : collection -> (resourceco0_.ISSUER, resourceco0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.298 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> value (class)]
[TRACE] 2020-08-12 19:18:21.298 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> value (class)]
[DEBUG] 2020-08-12 19:18:21.298 [main] DotNode - getDataType() : value -> org.hibernate.type.SetType(com.gemalto.ics.usplatform.bip.ResourceCollectionImpl.value)
[DEBUG] 2020-08-12 19:18:21.298 [main] DotNode - getDataType() : value -> org.hibernate.type.SetType(com.gemalto.ics.usplatform.bip.ResourceCollectionImpl.value)
[DEBUG] 2020-08-12 19:18:21.298 [main] FromElementFactory - createManyToMany() : path = collection.value role = com.gemalto.ics.usplatform.bip.ResourceCollectionImpl.value associatedEntityName = com.gemalto.ics.usplatform.bip.ResourceImpl
[DEBUG] 2020-08-12 19:18:21.298 [main] FromElementFactory - createManyToMany() : path = collection.value role = com.gemalto.ics.usplatform.bip.ResourceCollectionImpl.value associatedEntityName = com.gemalto.ics.usplatform.bip.ResourceImpl
[DEBUG] 2020-08-12 19:18:21.298 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceImpl (<no alias>) -> resourceim2_
[DEBUG] 2020-08-12 19:18:21.298 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.ResourceImpl (<no alias>) -> resourceim2_
[DEBUG] 2020-08-12 19:18:21.298 [main] FromClause - addJoinByPathMap() : collection.value -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=resourceim2_,origin=RESOURCES resourceco0_,columns={resourceco0_.ISSUER resourceco0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
[DEBUG] 2020-08-12 19:18:21.298 [main] FromClause - addJoinByPathMap() : collection.value -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=resourceim2_,origin=RESOURCES resourceco0_,columns={resourceco0_.ISSUER resourceco0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
[DEBUG] 2020-08-12 19:18:21.298 [main] DotNode - dereferenceCollection() : Created new FROM element for collection.value : COLLECTIONS resourceim2_
[DEBUG] 2020-08-12 19:18:21.298 [main] DotNode - dereferenceCollection() : Created new FROM element for collection.value : COLLECTIONS resourceim2_
[DEBUG] 2020-08-12 19:18:21.298 [main] FromReferenceNode - Resolved : collection.value -> .
[DEBUG] 2020-08-12 19:18:21.298 [main] FromReferenceNode - Resolved : collection.value -> .
[TRACE] 2020-08-12 19:18:21.298 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> value (class)]
[TRACE] 2020-08-12 19:18:21.298 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> value (class)]
[DEBUG] 2020-08-12 19:18:21.299 [main] FromReferenceNode - Resolved : collection -> (resourceco0_.ISSUER, resourceco0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.299 [main] FromReferenceNode - Resolved : collection -> (resourceco0_.ISSUER, resourceco0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.299 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.299 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.ResourceCollectionImpl (collection) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.299 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.299 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.299 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.299 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.299 [main] FromReferenceNode - Resolved : collection.identifier -> (resourceco0_.ISSUER, resourceco0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.299 [main] FromReferenceNode - Resolved : collection.identifier -> (resourceco0_.ISSUER, resourceco0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.299 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.299 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.299 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( . (resourceco0_.ISSUER, resourceco0_.IDENTIFIER) value ) ) ( FromClause{level=1} ( RESOURCES resourceco0_ COLLECTIONS resourceim2_ ) ) ( WHERE ( AND ( = resourceco0_.ISSUER ? ) ( = resourceco0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.299 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( . (resourceco0_.ISSUER, resourceco0_.IDENTIFIER) value ) ) ( FromClause{level=1} ( RESOURCES resourceco0_ COLLECTIONS resourceim2_ ) ) ( WHERE ( AND ( = resourceco0_.ISSUER ? ) ( = resourceco0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.300 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResourceImpl): [RESOURCES]
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.ResourceImpl)
    |  | path: collection.value
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.ResourceCollectionImpl)
    |  |  | originalText: collection
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: value
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.300 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResourceImpl): [RESOURCES]
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.ResourceImpl)
    |  | path: collection.value
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.ResourceCollectionImpl)
    |  |  | originalText: collection
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: value
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.300 [main] JoinProcessor - Using FROM fragment [RESOURCES resourceco0_]
[DEBUG] 2020-08-12 19:18:21.300 [main] JoinProcessor - Using FROM fragment [RESOURCES resourceco0_]
[DEBUG] 2020-08-12 19:18:21.300 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl')]
[DEBUG] 2020-08-12 19:18:21.300 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl')]
[DEBUG] 2020-08-12 19:18:21.300 [main] SyntheticAndFactory - Using processed WHERE-fragment [resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl')]
[DEBUG] 2020-08-12 19:18:21.300 [main] SyntheticAndFactory - Using processed WHERE-fragment [resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl')]
[DEBUG] 2020-08-12 19:18:21.300 [main] JoinProcessor - Using FROM fragment [inner join COLLECTIONS value1_ on resourceco0_.ISSUER=value1_.ISSUER and resourceco0_.IDENTIFIER=value1_.IDENTIFIER inner join RESOURCES resourceim2_ on value1_.RESOURCE_ISSUER=resourceim2_.ISSUER and value1_.RESOURCE_IDENTIFIER=resourceim2_.IDENTIFIER left outer join ISSUERS resourceim2_1_ on resourceim2_.ISSUER=resourceim2_1_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_2_ on resourceim2_.ISSUER=resourceim2_2_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_2_.IDENTIFIER left outer join FACES resourceim2_3_ on resourceim2_.ISSUER=resourceim2_3_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_3_.IDENTIFIER left outer join EYES resourceim2_4_ on resourceim2_.ISSUER=resourceim2_4_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_4_.IDENTIFIER left outer join TENPRINTS resourceim2_5_ on resourceim2_.ISSUER=resourceim2_5_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_5_.IDENTIFIER left outer join MATCHES resourceim2_6_ on resourceim2_.ISSUER=resourceim2_6_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_6_.IDENTIFIER left outer join ADJUDICATORS resourceim2_7_ on resourceim2_.ISSUER=resourceim2_7_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_7_.IDENTIFIER left outer join TASKS resourceim2_8_ on resourceim2_.ISSUER=resourceim2_8_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_8_.IDENTIFIER left outer join CASES resourceim2_9_ on resourceim2_.ISSUER=resourceim2_9_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_10_ on resourceim2_.ISSUER=resourceim2_10_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_10_.FACE_IDENTIFIER left outer join EYES resourceim2_11_ on resourceim2_.ISSUER=resourceim2_11_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim2_12_ on resourceim2_.ISSUER=resourceim2_12_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_12_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.300 [main] JoinProcessor - Using FROM fragment [inner join COLLECTIONS value1_ on resourceco0_.ISSUER=value1_.ISSUER and resourceco0_.IDENTIFIER=value1_.IDENTIFIER inner join RESOURCES resourceim2_ on value1_.RESOURCE_ISSUER=resourceim2_.ISSUER and value1_.RESOURCE_IDENTIFIER=resourceim2_.IDENTIFIER left outer join ISSUERS resourceim2_1_ on resourceim2_.ISSUER=resourceim2_1_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_2_ on resourceim2_.ISSUER=resourceim2_2_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_2_.IDENTIFIER left outer join FACES resourceim2_3_ on resourceim2_.ISSUER=resourceim2_3_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_3_.IDENTIFIER left outer join EYES resourceim2_4_ on resourceim2_.ISSUER=resourceim2_4_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_4_.IDENTIFIER left outer join TENPRINTS resourceim2_5_ on resourceim2_.ISSUER=resourceim2_5_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_5_.IDENTIFIER left outer join MATCHES resourceim2_6_ on resourceim2_.ISSUER=resourceim2_6_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_6_.IDENTIFIER left outer join ADJUDICATORS resourceim2_7_ on resourceim2_.ISSUER=resourceim2_7_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_7_.IDENTIFIER left outer join TASKS resourceim2_8_ on resourceim2_.ISSUER=resourceim2_8_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_8_.IDENTIFIER left outer join CASES resourceim2_9_ on resourceim2_.ISSUER=resourceim2_9_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_10_ on resourceim2_.ISSUER=resourceim2_10_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_10_.FACE_IDENTIFIER left outer join EYES resourceim2_11_ on resourceim2_.ISSUER=resourceim2_11_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim2_12_ on resourceim2_.ISSUER=resourceim2_12_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_12_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.300 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.300 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.300 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,COLLECTIONS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'resourceim2_.ISSUER as issuer2_14_, resourceim2_.IDENTIFIER as identifi3_14_' {propertyName=value,dereferenceType=COLLECTION,getPropertyPath=value,path=collection.value,tableAlias=resourceim2_,className=com.gemalto.ics.usplatform.bip.ResourceImpl,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: '(resourceco0_.ISSUER, resourceco0_.IDENTIFIER)' {alias=collection, className=com.gemalto.ics.usplatform.bip.ResourceCollectionImpl, tableAlias=resourceco0_}
    |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  \-[SQL_TOKEN] SqlFragment: 'resourceim2_.CREATED as created4_14_, resourceim2_.CREATOR_ISSUER as creator13_14_, resourceim2_.CREATOR_IDENTIFIER as creator14_14_, resourceim2_.ENTITY as entity1_14_, resourceim2_.EXPIRATION as expirati5_14_, resourceim2_.EXTERNAL_IDENTIFIER as external6_14_, resourceim2_.MIMETYPE as mimetype7_14_, resourceim2_.MODIFIED as modified8_14_, resourceim2_.MODIFIER_ISSUER as modifie15_14_, resourceim2_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim2_.NAME as name9_14_, resourceim2_.URI as uri10_14_, resourceim2_.VERSION as version11_14_, resourceim2_.VALUE as value12_14_, resourceim2_1_.NAME as name1_10_, resourceim2_1_.PARENT_ISSUER as parent_i2_10_, resourceim2_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim2_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim2_2_.FACE_ISSUER as face_iss5_4_, resourceim2_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim2_2_.STATE as state2_4_, resourceim2_2_.TCN as tcn3_4_, resourceim2_2_.UOW as uow4_4_, resourceim2_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim2_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim2_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim2_3_.STATE as state2_8_, resourceim2_3_.TCN as tcn3_8_, resourceim2_3_.UOW as uow4_8_, resourceim2_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim2_4_.FACE_ISSUER as face_iss5_6_, resourceim2_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim2_4_.STATE as state2_6_, resourceim2_4_.TCN as tcn3_6_, resourceim2_4_.UOW as uow4_6_, resourceim2_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim2_5_.FACE_ISSUER as face_iss5_18_, resourceim2_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim2_5_.STATE as state2_18_, resourceim2_5_.TCN as tcn3_18_, resourceim2_5_.UOW as uow4_18_, resourceim2_6_.DISPOSITION as disposit1_11_, resourceim2_6_.FACE_ISSUER as face_iss4_11_, resourceim2_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim2_6_.SCORE as score2_11_, resourceim2_6_.TYPE as type3_11_, resourceim2_7_.LEVEL as level1_0_, resourceim2_7_.LOGIN as login2_0_, resourceim2_7_.MAIL as mail3_0_, resourceim2_7_.NAME as name4_0_, resourceim2_7_.PHONE as phone5_0_, resourceim2_7_.TOKEN_ISSUER as token_is6_0_, resourceim2_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim2_8_.COUNT as count1_17_, resourceim2_8_.INTERVAL as interval2_17_, resourceim2_8_.MAX as max3_17_, resourceim2_8_.STATE as state4_17_, resourceim2_8_.UNIT as unit5_17_, resourceim2_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim2_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim2_9_.DISPOSITION as disposit1_1_, resourceim2_9_.FACE_ISSUER as face_iss7_1_, resourceim2_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim2_9_.LEVEL as level2_1_, resourceim2_9_.STATE as state3_1_, resourceim2_9_.TYPE as type4_1_, resourceim2_10_.ISSUER as issuer0_4_, resourceim2_10_.IDENTIFIER as identifi0_4_, resourceim2_11_.ISSUER as issuer0_6_, resourceim2_11_.IDENTIFIER as identifi0_6_, resourceim2_12_.ISSUER as issuer0_18_, resourceim2_12_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[collection], fromElementByTableAlias=[resourceco0_, resourceim2_], fromElementsByPath=[collection.value], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES resourceco0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=collection,role=null,tableName=RESOURCES,tableAlias=resourceco0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.ResourceCollectionImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join COLLECTIONS value1_ on resourceco0_.ISSUER=value1_.ISSUER and resourceco0_.IDENTIFIER=value1_.IDENTIFIER inner join RESOURCES resourceim2_ on value1_.RESOURCE_ISSUER=resourceim2_.ISSUER and value1_.RESOURCE_IDENTIFIER=resourceim2_.IDENTIFIER left outer join ISSUERS resourceim2_1_ on resourceim2_.ISSUER=resourceim2_1_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_2_ on resourceim2_.ISSUER=resourceim2_2_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_2_.IDENTIFIER left outer join FACES resourceim2_3_ on resourceim2_.ISSUER=resourceim2_3_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_3_.IDENTIFIER left outer join EYES resourceim2_4_ on resourceim2_.ISSUER=resourceim2_4_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_4_.IDENTIFIER left outer join TENPRINTS resourceim2_5_ on resourceim2_.ISSUER=resourceim2_5_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_5_.IDENTIFIER left outer join MATCHES resourceim2_6_ on resourceim2_.ISSUER=resourceim2_6_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_6_.IDENTIFIER left outer join ADJUDICATORS resourceim2_7_ on resourceim2_.ISSUER=resourceim2_7_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_7_.IDENTIFIER left outer join TASKS resourceim2_8_ on resourceim2_.ISSUER=resourceim2_8_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_8_.IDENTIFIER left outer join CASES resourceim2_9_ on resourceim2_.ISSUER=resourceim2_9_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_10_ on resourceim2_.ISSUER=resourceim2_10_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_10_.FACE_IDENTIFIER left outer join EYES resourceim2_11_ on resourceim2_.ISSUER=resourceim2_11_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim2_12_ on resourceim2_.ISSUER=resourceim2_12_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_12_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.ResourceCollectionImpl.value,tableName=RESOURCES,tableAlias=resourceim2_,origin=RESOURCES resourceco0_,columns={resourceco0_.ISSUER resourceco0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl')'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'resourceco0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'resourceco0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.300 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,COLLECTIONS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'resourceim2_.ISSUER as issuer2_14_, resourceim2_.IDENTIFIER as identifi3_14_' {propertyName=value,dereferenceType=COLLECTION,getPropertyPath=value,path=collection.value,tableAlias=resourceim2_,className=com.gemalto.ics.usplatform.bip.ResourceImpl,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: '(resourceco0_.ISSUER, resourceco0_.IDENTIFIER)' {alias=collection, className=com.gemalto.ics.usplatform.bip.ResourceCollectionImpl, tableAlias=resourceco0_}
    |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  \-[SQL_TOKEN] SqlFragment: 'resourceim2_.CREATED as created4_14_, resourceim2_.CREATOR_ISSUER as creator13_14_, resourceim2_.CREATOR_IDENTIFIER as creator14_14_, resourceim2_.ENTITY as entity1_14_, resourceim2_.EXPIRATION as expirati5_14_, resourceim2_.EXTERNAL_IDENTIFIER as external6_14_, resourceim2_.MIMETYPE as mimetype7_14_, resourceim2_.MODIFIED as modified8_14_, resourceim2_.MODIFIER_ISSUER as modifie15_14_, resourceim2_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim2_.NAME as name9_14_, resourceim2_.URI as uri10_14_, resourceim2_.VERSION as version11_14_, resourceim2_.VALUE as value12_14_, resourceim2_1_.NAME as name1_10_, resourceim2_1_.PARENT_ISSUER as parent_i2_10_, resourceim2_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim2_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim2_2_.FACE_ISSUER as face_iss5_4_, resourceim2_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim2_2_.STATE as state2_4_, resourceim2_2_.TCN as tcn3_4_, resourceim2_2_.UOW as uow4_4_, resourceim2_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim2_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim2_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim2_3_.STATE as state2_8_, resourceim2_3_.TCN as tcn3_8_, resourceim2_3_.UOW as uow4_8_, resourceim2_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim2_4_.FACE_ISSUER as face_iss5_6_, resourceim2_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim2_4_.STATE as state2_6_, resourceim2_4_.TCN as tcn3_6_, resourceim2_4_.UOW as uow4_6_, resourceim2_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim2_5_.FACE_ISSUER as face_iss5_18_, resourceim2_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim2_5_.STATE as state2_18_, resourceim2_5_.TCN as tcn3_18_, resourceim2_5_.UOW as uow4_18_, resourceim2_6_.DISPOSITION as disposit1_11_, resourceim2_6_.FACE_ISSUER as face_iss4_11_, resourceim2_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim2_6_.SCORE as score2_11_, resourceim2_6_.TYPE as type3_11_, resourceim2_7_.LEVEL as level1_0_, resourceim2_7_.LOGIN as login2_0_, resourceim2_7_.MAIL as mail3_0_, resourceim2_7_.NAME as name4_0_, resourceim2_7_.PHONE as phone5_0_, resourceim2_7_.TOKEN_ISSUER as token_is6_0_, resourceim2_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim2_8_.COUNT as count1_17_, resourceim2_8_.INTERVAL as interval2_17_, resourceim2_8_.MAX as max3_17_, resourceim2_8_.STATE as state4_17_, resourceim2_8_.UNIT as unit5_17_, resourceim2_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim2_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim2_9_.DISPOSITION as disposit1_1_, resourceim2_9_.FACE_ISSUER as face_iss7_1_, resourceim2_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim2_9_.LEVEL as level2_1_, resourceim2_9_.STATE as state3_1_, resourceim2_9_.TYPE as type4_1_, resourceim2_10_.ISSUER as issuer0_4_, resourceim2_10_.IDENTIFIER as identifi0_4_, resourceim2_11_.ISSUER as issuer0_6_, resourceim2_11_.IDENTIFIER as identifi0_6_, resourceim2_12_.ISSUER as issuer0_18_, resourceim2_12_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[collection], fromElementByTableAlias=[resourceco0_, resourceim2_], fromElementsByPath=[collection.value], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES resourceco0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=collection,role=null,tableName=RESOURCES,tableAlias=resourceco0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.ResourceCollectionImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join COLLECTIONS value1_ on resourceco0_.ISSUER=value1_.ISSUER and resourceco0_.IDENTIFIER=value1_.IDENTIFIER inner join RESOURCES resourceim2_ on value1_.RESOURCE_ISSUER=resourceim2_.ISSUER and value1_.RESOURCE_IDENTIFIER=resourceim2_.IDENTIFIER left outer join ISSUERS resourceim2_1_ on resourceim2_.ISSUER=resourceim2_1_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_2_ on resourceim2_.ISSUER=resourceim2_2_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_2_.IDENTIFIER left outer join FACES resourceim2_3_ on resourceim2_.ISSUER=resourceim2_3_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_3_.IDENTIFIER left outer join EYES resourceim2_4_ on resourceim2_.ISSUER=resourceim2_4_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_4_.IDENTIFIER left outer join TENPRINTS resourceim2_5_ on resourceim2_.ISSUER=resourceim2_5_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_5_.IDENTIFIER left outer join MATCHES resourceim2_6_ on resourceim2_.ISSUER=resourceim2_6_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_6_.IDENTIFIER left outer join ADJUDICATORS resourceim2_7_ on resourceim2_.ISSUER=resourceim2_7_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_7_.IDENTIFIER left outer join TASKS resourceim2_8_ on resourceim2_.ISSUER=resourceim2_8_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_8_.IDENTIFIER left outer join CASES resourceim2_9_ on resourceim2_.ISSUER=resourceim2_9_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_10_ on resourceim2_.ISSUER=resourceim2_10_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_10_.FACE_IDENTIFIER left outer join EYES resourceim2_11_ on resourceim2_.ISSUER=resourceim2_11_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim2_12_ on resourceim2_.ISSUER=resourceim2_12_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_12_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.ResourceCollectionImpl.value,tableName=RESOURCES,tableAlias=resourceim2_,origin=RESOURCES resourceco0_,columns={resourceco0_.ISSUER resourceco0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.ResourceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl')'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'resourceco0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'resourceco0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.300 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.300 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.301 [main] QueryTranslatorImpl - HQL: SELECT collection.value FROM com.gemalto.ics.usplatform.bip.ResourceCollectionImpl collection WHERE collection.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.301 [main] QueryTranslatorImpl - HQL: SELECT collection.value FROM com.gemalto.ics.usplatform.bip.ResourceCollectionImpl collection WHERE collection.identifier= :identifier
[DEBUG] 2020-08-12 19:18:21.301 [main] QueryTranslatorImpl - SQL: select resourceim2_.ISSUER as issuer2_14_, resourceim2_.IDENTIFIER as identifi3_14_, resourceim2_.CREATED as created4_14_, resourceim2_.CREATOR_ISSUER as creator13_14_, resourceim2_.CREATOR_IDENTIFIER as creator14_14_, resourceim2_.ENTITY as entity1_14_, resourceim2_.EXPIRATION as expirati5_14_, resourceim2_.EXTERNAL_IDENTIFIER as external6_14_, resourceim2_.MIMETYPE as mimetype7_14_, resourceim2_.MODIFIED as modified8_14_, resourceim2_.MODIFIER_ISSUER as modifie15_14_, resourceim2_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim2_.NAME as name9_14_, resourceim2_.URI as uri10_14_, resourceim2_.VERSION as version11_14_, resourceim2_.VALUE as value12_14_, resourceim2_1_.NAME as name1_10_, resourceim2_1_.PARENT_ISSUER as parent_i2_10_, resourceim2_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim2_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim2_2_.FACE_ISSUER as face_iss5_4_, resourceim2_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim2_2_.STATE as state2_4_, resourceim2_2_.TCN as tcn3_4_, resourceim2_2_.UOW as uow4_4_, resourceim2_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim2_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim2_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim2_3_.STATE as state2_8_, resourceim2_3_.TCN as tcn3_8_, resourceim2_3_.UOW as uow4_8_, resourceim2_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim2_4_.FACE_ISSUER as face_iss5_6_, resourceim2_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim2_4_.STATE as state2_6_, resourceim2_4_.TCN as tcn3_6_, resourceim2_4_.UOW as uow4_6_, resourceim2_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim2_5_.FACE_ISSUER as face_iss5_18_, resourceim2_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim2_5_.STATE as state2_18_, resourceim2_5_.TCN as tcn3_18_, resourceim2_5_.UOW as uow4_18_, resourceim2_6_.DISPOSITION as disposit1_11_, resourceim2_6_.FACE_ISSUER as face_iss4_11_, resourceim2_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim2_6_.SCORE as score2_11_, resourceim2_6_.TYPE as type3_11_, resourceim2_7_.LEVEL as level1_0_, resourceim2_7_.LOGIN as login2_0_, resourceim2_7_.MAIL as mail3_0_, resourceim2_7_.NAME as name4_0_, resourceim2_7_.PHONE as phone5_0_, resourceim2_7_.TOKEN_ISSUER as token_is6_0_, resourceim2_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim2_8_.COUNT as count1_17_, resourceim2_8_.INTERVAL as interval2_17_, resourceim2_8_.MAX as max3_17_, resourceim2_8_.STATE as state4_17_, resourceim2_8_.UNIT as unit5_17_, resourceim2_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim2_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim2_9_.DISPOSITION as disposit1_1_, resourceim2_9_.FACE_ISSUER as face_iss7_1_, resourceim2_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim2_9_.LEVEL as level2_1_, resourceim2_9_.STATE as state3_1_, resourceim2_9_.TYPE as type4_1_, resourceim2_10_.ISSUER as issuer0_4_, resourceim2_10_.IDENTIFIER as identifi0_4_, resourceim2_11_.ISSUER as issuer0_6_, resourceim2_11_.IDENTIFIER as identifi0_6_, resourceim2_12_.ISSUER as issuer0_18_, resourceim2_12_.IDENTIFIER as identifi0_18_ from RESOURCES resourceco0_ inner join COLLECTIONS value1_ on resourceco0_.ISSUER=value1_.ISSUER and resourceco0_.IDENTIFIER=value1_.IDENTIFIER inner join RESOURCES resourceim2_ on value1_.RESOURCE_ISSUER=resourceim2_.ISSUER and value1_.RESOURCE_IDENTIFIER=resourceim2_.IDENTIFIER left outer join ISSUERS resourceim2_1_ on resourceim2_.ISSUER=resourceim2_1_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_2_ on resourceim2_.ISSUER=resourceim2_2_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_2_.IDENTIFIER left outer join FACES resourceim2_3_ on resourceim2_.ISSUER=resourceim2_3_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_3_.IDENTIFIER left outer join EYES resourceim2_4_ on resourceim2_.ISSUER=resourceim2_4_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_4_.IDENTIFIER left outer join TENPRINTS resourceim2_5_ on resourceim2_.ISSUER=resourceim2_5_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_5_.IDENTIFIER left outer join MATCHES resourceim2_6_ on resourceim2_.ISSUER=resourceim2_6_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_6_.IDENTIFIER left outer join ADJUDICATORS resourceim2_7_ on resourceim2_.ISSUER=resourceim2_7_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_7_.IDENTIFIER left outer join TASKS resourceim2_8_ on resourceim2_.ISSUER=resourceim2_8_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_8_.IDENTIFIER left outer join CASES resourceim2_9_ on resourceim2_.ISSUER=resourceim2_9_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_10_ on resourceim2_.ISSUER=resourceim2_10_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_10_.FACE_IDENTIFIER left outer join EYES resourceim2_11_ on resourceim2_.ISSUER=resourceim2_11_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim2_12_ on resourceim2_.ISSUER=resourceim2_12_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_12_.FACE_IDENTIFIER where resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl') and resourceco0_.ISSUER=? and resourceco0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.301 [main] QueryTranslatorImpl - SQL: select resourceim2_.ISSUER as issuer2_14_, resourceim2_.IDENTIFIER as identifi3_14_, resourceim2_.CREATED as created4_14_, resourceim2_.CREATOR_ISSUER as creator13_14_, resourceim2_.CREATOR_IDENTIFIER as creator14_14_, resourceim2_.ENTITY as entity1_14_, resourceim2_.EXPIRATION as expirati5_14_, resourceim2_.EXTERNAL_IDENTIFIER as external6_14_, resourceim2_.MIMETYPE as mimetype7_14_, resourceim2_.MODIFIED as modified8_14_, resourceim2_.MODIFIER_ISSUER as modifie15_14_, resourceim2_.MODIFIER_IDENTIFIER as modifie16_14_, resourceim2_.NAME as name9_14_, resourceim2_.URI as uri10_14_, resourceim2_.VERSION as version11_14_, resourceim2_.VALUE as value12_14_, resourceim2_1_.NAME as name1_10_, resourceim2_1_.PARENT_ISSUER as parent_i2_10_, resourceim2_1_.PARENT_IDENTIFIER as parent_i3_10_, resourceim2_2_.ABIS_IDENTIFIER as abis_ide1_4_, resourceim2_2_.FACE_ISSUER as face_iss5_4_, resourceim2_2_.FACE_IDENTIFIER as face_ide6_4_, resourceim2_2_.STATE as state2_4_, resourceim2_2_.TCN as tcn3_4_, resourceim2_2_.UOW as uow4_4_, resourceim2_3_.ABIS_IDENTIFIER as abis_ide1_8_, resourceim2_3_.BIOMETRICRECORD_ISSUER as biometri5_8_, resourceim2_3_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, resourceim2_3_.STATE as state2_8_, resourceim2_3_.TCN as tcn3_8_, resourceim2_3_.UOW as uow4_8_, resourceim2_4_.ABIS_IDENTIFIER as abis_ide1_6_, resourceim2_4_.FACE_ISSUER as face_iss5_6_, resourceim2_4_.FACE_IDENTIFIER as face_ide6_6_, resourceim2_4_.STATE as state2_6_, resourceim2_4_.TCN as tcn3_6_, resourceim2_4_.UOW as uow4_6_, resourceim2_5_.ABIS_IDENTIFIER as abis_ide1_18_, resourceim2_5_.FACE_ISSUER as face_iss5_18_, resourceim2_5_.FACE_IDENTIFIER as face_ide6_18_, resourceim2_5_.STATE as state2_18_, resourceim2_5_.TCN as tcn3_18_, resourceim2_5_.UOW as uow4_18_, resourceim2_6_.DISPOSITION as disposit1_11_, resourceim2_6_.FACE_ISSUER as face_iss4_11_, resourceim2_6_.FACE_IDENTIFIER as face_ide5_11_, resourceim2_6_.SCORE as score2_11_, resourceim2_6_.TYPE as type3_11_, resourceim2_7_.LEVEL as level1_0_, resourceim2_7_.LOGIN as login2_0_, resourceim2_7_.MAIL as mail3_0_, resourceim2_7_.NAME as name4_0_, resourceim2_7_.PHONE as phone5_0_, resourceim2_7_.TOKEN_ISSUER as token_is6_0_, resourceim2_7_.TOKEN_IDENTIFIER as token_id7_0_, resourceim2_8_.COUNT as count1_17_, resourceim2_8_.INTERVAL as interval2_17_, resourceim2_8_.MAX as max3_17_, resourceim2_8_.STATE as state4_17_, resourceim2_8_.UNIT as unit5_17_, resourceim2_9_.ADJUDICATOR_ISSUER as adjudica5_1_, resourceim2_9_.ADJUDICATOR_IDENTIFIER as adjudica6_1_, resourceim2_9_.DISPOSITION as disposit1_1_, resourceim2_9_.FACE_ISSUER as face_iss7_1_, resourceim2_9_.FACE_IDENTIFIER as face_ide8_1_, resourceim2_9_.LEVEL as level2_1_, resourceim2_9_.STATE as state3_1_, resourceim2_9_.TYPE as type4_1_, resourceim2_10_.ISSUER as issuer0_4_, resourceim2_10_.IDENTIFIER as identifi0_4_, resourceim2_11_.ISSUER as issuer0_6_, resourceim2_11_.IDENTIFIER as identifi0_6_, resourceim2_12_.ISSUER as issuer0_18_, resourceim2_12_.IDENTIFIER as identifi0_18_ from RESOURCES resourceco0_ inner join COLLECTIONS value1_ on resourceco0_.ISSUER=value1_.ISSUER and resourceco0_.IDENTIFIER=value1_.IDENTIFIER inner join RESOURCES resourceim2_ on value1_.RESOURCE_ISSUER=resourceim2_.ISSUER and value1_.RESOURCE_IDENTIFIER=resourceim2_.IDENTIFIER left outer join ISSUERS resourceim2_1_ on resourceim2_.ISSUER=resourceim2_1_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_1_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_2_ on resourceim2_.ISSUER=resourceim2_2_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_2_.IDENTIFIER left outer join FACES resourceim2_3_ on resourceim2_.ISSUER=resourceim2_3_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_3_.IDENTIFIER left outer join EYES resourceim2_4_ on resourceim2_.ISSUER=resourceim2_4_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_4_.IDENTIFIER left outer join TENPRINTS resourceim2_5_ on resourceim2_.ISSUER=resourceim2_5_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_5_.IDENTIFIER left outer join MATCHES resourceim2_6_ on resourceim2_.ISSUER=resourceim2_6_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_6_.IDENTIFIER left outer join ADJUDICATORS resourceim2_7_ on resourceim2_.ISSUER=resourceim2_7_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_7_.IDENTIFIER left outer join TASKS resourceim2_8_ on resourceim2_.ISSUER=resourceim2_8_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_8_.IDENTIFIER left outer join CASES resourceim2_9_ on resourceim2_.ISSUER=resourceim2_9_.ISSUER and resourceim2_.IDENTIFIER=resourceim2_9_.IDENTIFIER left outer join DEMOGRAPHICS resourceim2_10_ on resourceim2_.ISSUER=resourceim2_10_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_10_.FACE_IDENTIFIER left outer join EYES resourceim2_11_ on resourceim2_.ISSUER=resourceim2_11_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_11_.FACE_IDENTIFIER left outer join TENPRINTS resourceim2_12_ on resourceim2_.ISSUER=resourceim2_12_.FACE_ISSUER and resourceim2_.IDENTIFIER=resourceim2_12_.FACE_IDENTIFIER where resourceco0_.ENTITY in ('ResourceCollectionImpl', 'IssuerImpl', 'RecordImpl', 'CaseImpl') and resourceco0_.ISSUER=? and resourceco0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.301 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.301 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.301 [main] NamedQueryRepository - Checking named query: selectIssuerByParent
[DEBUG] 2020-08-12 19:18:21.301 [main] NamedQueryRepository - Checking named query: selectIssuerByParent
[TRACE] 2020-08-12 19:18:21.301 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT issuer FROM IssuerImpl issuer WHERE issuer.parentIssuer = :parent)
[TRACE] 2020-08-12 19:18:21.301 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT issuer FROM IssuerImpl issuer WHERE issuer.parentIssuer = :parent)
[DEBUG] 2020-08-12 19:18:21.302 [main] QueryTranslatorImpl - parse() - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer = :parent
[DEBUG] 2020-08-12 19:18:21.302 [main] QueryTranslatorImpl - parse() - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer = :parent
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.302 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.303 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.303 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.303 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.304 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'issuer'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'issuer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'issuer'
          |  \-[IDENT] Node: 'parentIssuer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'parent'

[DEBUG] 2020-08-12 19:18:21.304 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'issuer'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'issuer'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'issuer'
          |  \-[IDENT] Node: 'parentIssuer'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'parent'

[DEBUG] 2020-08-12 19:18:21.304 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.304 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.304 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:21.304 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:21.304 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.304 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.304 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.304 [main] FromReferenceNode - Resolved : issuer -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.304 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> parentIssuer (subclass)]
[TRACE] 2020-08-12 19:18:21.304 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (issuer) -> parentIssuer (subclass)]
[DEBUG] 2020-08-12 19:18:21.304 [main] DotNode - getDataType() : parentIssuer -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.IssuerImpl)
[DEBUG] 2020-08-12 19:18:21.304 [main] DotNode - getDataType() : parentIssuer -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.IssuerImpl)
[DEBUG] 2020-08-12 19:18:21.304 [main] DotNode - dereferenceShortcut() : property parentIssuer in com.gemalto.ics.usplatform.bip.IssuerImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.304 [main] DotNode - dereferenceShortcut() : property parentIssuer in com.gemalto.ics.usplatform.bip.IssuerImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.304 [main] DotNode - Terminal getPropertyPath = [parentIssuer]
[DEBUG] 2020-08-12 19:18:21.304 [main] DotNode - Terminal getPropertyPath = [parentIssuer]
[DEBUG] 2020-08-12 19:18:21.304 [main] FromReferenceNode - Resolved : issuer.parentIssuer -> (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.304 [main] FromReferenceNode - Resolved : issuer.parentIssuer -> (issuerimpl0_1_.PARENT_ISSUER, issuerimpl0_1_.PARENT_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.304 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.304 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.304 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( AND ( = issuerimpl0_1_.PARENT_ISSUER ? ) ( = issuerimpl0_1_.PARENT_IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.304 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( AND ( = issuerimpl0_1_.PARENT_ISSUER ? ) ( = issuerimpl0_1_.PARENT_IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.305 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity IssuerImpl): [RESOURCES, ISSUERS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | originalText: issuer
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.305 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity IssuerImpl): [RESOURCES, ISSUERS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | originalText: issuer
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[TRACE] 2020-08-12 19:18:21.305 [main] JoinProcessor - Forcing inclusion of extra joins [alias=issuerimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.305 [main] JoinProcessor - Forcing inclusion of extra joins [alias=issuerimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.305 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.305 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.305 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.305 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.305 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.305 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:21.305 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.305 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.305 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[issuer], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=issuer,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_1_.PARENT_ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_1_.PARENT_IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.305 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_' {alias=issuer, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[issuer], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=issuer,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_1_.PARENT_ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_1_.PARENT_IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.305 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.305 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.305 [main] QueryTranslatorImpl - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer = :parent
[DEBUG] 2020-08-12 19:18:21.305 [main] QueryTranslatorImpl - HQL: SELECT issuer FROM com.gemalto.ics.usplatform.bip.IssuerImpl issuer WHERE issuer.parentIssuer = :parent
[DEBUG] 2020-08-12 19:18:21.305 [main] QueryTranslatorImpl - SQL: select issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_1_.PARENT_ISSUER=? and issuerimpl0_1_.PARENT_IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.305 [main] QueryTranslatorImpl - SQL: select issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_1_.PARENT_ISSUER=? and issuerimpl0_1_.PARENT_IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.305 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.305 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.306 [main] NamedQueryRepository - Checking named query: selectTenprintsByBiometricRecordWithState
[DEBUG] 2020-08-12 19:18:21.306 [main] NamedQueryRepository - Checking named query: selectTenprintsByBiometricRecordWithState
[TRACE] 2020-08-12 19:18:21.306 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT DISTINCT tenprint FROM TenprintImpl tenprint JOIN FETCH tenprint.face where tenprint.face.biometricrecord.identifier = :identifier AND tenprint.identifier != :identifier1 AND tenprint.state IN :state ORDER BY tenprint.created DESC)
[TRACE] 2020-08-12 19:18:21.306 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT DISTINCT tenprint FROM TenprintImpl tenprint JOIN FETCH tenprint.face where tenprint.face.biometricrecord.identifier = :identifier AND tenprint.identifier != :identifier1 AND tenprint.state IN :state ORDER BY tenprint.created DESC)
[DEBUG] 2020-08-12 19:18:21.306 [main] QueryTranslatorImpl - parse() - HQL: SELECT DISTINCT tenprint FROM com.gemalto.ics.usplatform.bip.biometric.TenprintImpl tenprint JOIN FETCH tenprint.face where tenprint.face.biometricrecord.identifier = :identifier AND tenprint.identifier != :identifier1 AND tenprint.state IN :state ORDER BY tenprint.created DESC
[DEBUG] 2020-08-12 19:18:21.306 [main] QueryTranslatorImpl - parse() - HQL: SELECT DISTINCT tenprint FROM com.gemalto.ics.usplatform.bip.biometric.TenprintImpl tenprint JOIN FETCH tenprint.face where tenprint.face.biometricrecord.identifier = :identifier AND tenprint.identifier != :identifier1 AND tenprint.state IN :state ORDER BY tenprint.created DESC
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.306 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------> fromJoin
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------> fromJoin
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------> joinPath
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------> joinPath
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------- joinPath
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------- joinPath
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------- fromJoin
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------- fromJoin
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.307 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.308 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------> orderByClause
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------> orderByClause
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------> orderElement
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.309 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - -----------> ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----------- ascendingOrDescending
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--------- orderElement
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <------- orderByClause
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.310 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.310 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.310 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.310 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |  |  |  |  |  \-[IDENT] Node: 'bip'
    |  |  |  |  |  \-[IDENT] Node: 'biometric'
    |  |  |  |  \-[IDENT] Node: 'TenprintImpl'
    |  |  |  \-[ALIAS] Node: 'tenprint'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'tenprint'
    |  |        \-[IDENT] Node: 'face'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[DISTINCT] Node: 'DISTINCT'
    |     \-[IDENT] Node: 'tenprint'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'AND'
    |     +-[AND] Node: 'AND'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'tenprint'
    |     |  |  |  |  |  \-[IDENT] Node: 'face'
    |     |  |  |  |  \-[IDENT] Node: 'biometricrecord'
    |     |  |  |  \-[IDENT] Node: 'identifier'
    |     |  |  \-[COLON] Node: ':'
    |     |  |     \-[IDENT] Node: 'identifier'
    |     |  \-[NE] Node: '!='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'tenprint'
    |     |     |  \-[IDENT] Node: 'identifier'
    |     |     \-[COLON] Node: ':'
    |     |        \-[IDENT] Node: 'identifier1'
    |     \-[IN] Node: 'in'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'tenprint'
    |        |  \-[IDENT] Node: 'state'
    |        \-[IN_LIST] Node: 'inList'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'state'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'tenprint'
       |  \-[IDENT] Node: 'created'
       \-[DESCENDING] Node: 'DESC'

[DEBUG] 2020-08-12 19:18:21.310 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |  |  |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |  |  |  |  |  \-[IDENT] Node: 'bip'
    |  |  |  |  |  \-[IDENT] Node: 'biometric'
    |  |  |  |  \-[IDENT] Node: 'TenprintImpl'
    |  |  |  \-[ALIAS] Node: 'tenprint'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[FETCH] Node: 'FETCH'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 'tenprint'
    |  |        \-[IDENT] Node: 'face'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[DISTINCT] Node: 'DISTINCT'
    |     \-[IDENT] Node: 'tenprint'
    +-[WHERE] Node: 'where'
    |  \-[AND] Node: 'AND'
    |     +-[AND] Node: 'AND'
    |     |  +-[EQ] Node: '='
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'tenprint'
    |     |  |  |  |  |  \-[IDENT] Node: 'face'
    |     |  |  |  |  \-[IDENT] Node: 'biometricrecord'
    |     |  |  |  \-[IDENT] Node: 'identifier'
    |     |  |  \-[COLON] Node: ':'
    |     |  |     \-[IDENT] Node: 'identifier'
    |     |  \-[NE] Node: '!='
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[IDENT] Node: 'tenprint'
    |     |     |  \-[IDENT] Node: 'identifier'
    |     |     \-[COLON] Node: ':'
    |     |        \-[IDENT] Node: 'identifier1'
    |     \-[IN] Node: 'in'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'tenprint'
    |        |  \-[IDENT] Node: 'state'
    |        \-[IN_LIST] Node: 'inList'
    |           \-[COLON] Node: ':'
    |              \-[IDENT] Node: 'state'
    \-[ORDER] Node: 'ORDER'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'tenprint'
       |  \-[IDENT] Node: 'created'
       \-[DESCENDING] Node: 'DESC'

[DEBUG] 2020-08-12 19:18:21.310 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.310 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.310 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> tenprintim0_
[DEBUG] 2020-08-12 19:18:21.310 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> tenprintim0_
[DEBUG] 2020-08-12 19:18:21.311 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.311 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.311 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> face (subclass)]
[TRACE] 2020-08-12 19:18:21.311 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> face (subclass)]
[DEBUG] 2020-08-12 19:18:21.311 [main] DotNode - getDataType() : face -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
[DEBUG] 2020-08-12 19:18:21.311 [main] DotNode - getDataType() : face -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
[DEBUG] 2020-08-12 19:18:21.311 [main] DotNode - dereferenceEntityJoin() : generating join for face in com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (<no alias>) parent = [ {null} ]
[DEBUG] 2020-08-12 19:18:21.311 [main] DotNode - dereferenceEntityJoin() : generating join for face in com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (<no alias>) parent = [ {null} ]
[DEBUG] 2020-08-12 19:18:21.311 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) -> faceimpl1_
[DEBUG] 2020-08-12 19:18:21.311 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) -> faceimpl1_
[DEBUG] 2020-08-12 19:18:21.311 [main] FromClause - addJoinByPathMap() : tenprint.face -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
[DEBUG] 2020-08-12 19:18:21.311 [main] FromClause - addJoinByPathMap() : tenprint.face -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
[DEBUG] 2020-08-12 19:18:21.311 [main] FromReferenceNode - Resolved : tenprint.face -> tenprintim0_1_.FACE_ISSUER, tenprintim0_1_.FACE_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.311 [main] FromReferenceNode - Resolved : tenprint.face -> tenprintim0_1_.FACE_ISSUER, tenprintim0_1_.FACE_IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.311 [main] HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'RESOURCES faceimpl1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl.face,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}

[DEBUG] 2020-08-12 19:18:21.311 [main] HqlSqlWalker - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'RESOURCES faceimpl1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl.face,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}

[TRACE] 2020-08-12 19:18:21.311 [main] FromElement - Attempt to disable subclass-inclusions : 
java.lang.Exception: Stack-trace source
	at org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(FromElement.java:319) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.beforeSelectClause(HqlSqlWalker.java:1092) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1438) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:157) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:549) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:327) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactoryImpl.<clinit>(EntityManagerFactoryImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactory.newInstance(EntityManagerFactory.java:29) [classes/:?]
	at com.gemalto.ics.usplatform.bip.PlatformImpl.<clinit>(PlatformImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.Platform.newInstance(Platform.java:36) [classes/:?]
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:37) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.jar:4.13]
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.jar:4.13]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
[TRACE] 2020-08-12 19:18:21.311 [main] FromElement - Attempt to disable subclass-inclusions : 
java.lang.Exception: Stack-trace source
	at org.hibernate.hql.internal.ast.tree.FromElement.setIncludeSubclasses(FromElement.java:319) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.beforeSelectClause(HqlSqlWalker.java:1092) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1438) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:157) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:549) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:327) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.4.20.Final.jar:5.4.20.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactoryImpl.<clinit>(EntityManagerFactoryImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.persistence.EntityManagerFactory.newInstance(EntityManagerFactory.java:29) [classes/:?]
	at com.gemalto.ics.usplatform.bip.PlatformImpl.<clinit>(PlatformImpl.java:41) [classes/:?]
	at com.gemalto.ics.usplatform.bip.Platform.newInstance(Platform.java:36) [classes/:?]
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:37) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.13.jar:4.13]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) [junit-4.13.jar:4.13]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [junit-4.13.jar:4.13]
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.jar:4.13]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.jar:4.13]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.jar:4.13]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.13.jar:4.13]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) [junit-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53) [junit-rt.jar:?]
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.312 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> face (subclass)]
[TRACE] 2020-08-12 19:18:21.312 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> face (subclass)]
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - getDataType() : face -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - getDataType() : face -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - dereferenceEntityJoin() : generating join for face in com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (<no alias>) parent = [  ( . ( . (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER) face ) biometricrecord ) ]
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - dereferenceEntityJoin() : generating join for face in com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (<no alias>) parent = [  ( . ( . (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER) face ) biometricrecord ) ]
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint.face -> (tenprintim0_1_.FACE_ISSUER, tenprintim0_1_.FACE_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint.face -> (tenprintim0_1_.FACE_ISSUER, tenprintim0_1_.FACE_IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.312 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (null) -> biometricrecord (subclass)]
[TRACE] 2020-08-12 19:18:21.312 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (null) -> biometricrecord (subclass)]
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - getDataType() : biometricrecord -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.biometric.FaceImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.biometric.FaceImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - Unresolved property path is now 'biometricrecord.identifier'
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - Unresolved property path is now 'biometricrecord.identifier'
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint.face.biometricrecord -> (faceimpl1_1_.BIOMETRICRECORD_ISSUER, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint.face.biometricrecord -> (faceimpl1_1_.BIOMETRICRECORD_ISSUER, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.312 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (null) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.312 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.FaceImpl (null) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - getDataType() : biometricrecord.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - getDataType() : biometricrecord.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - Terminal getPropertyPath = [biometricrecord.identifier]
[DEBUG] 2020-08-12 19:18:21.312 [main] DotNode - Terminal getPropertyPath = [biometricrecord.identifier]
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint.face.biometricrecord.identifier -> (faceimpl1_1_.BIOMETRICRECORD_ISSUER, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.312 [main] FromReferenceNode - Resolved : tenprint.face.biometricrecord.identifier -> (faceimpl1_1_.BIOMETRICRECORD_ISSUER, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.313 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.313 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint.identifier -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint.identifier -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint -> (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.313 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.313 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@571c7572
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@571c7572
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint.state -> tenprintim0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint.state -> tenprintim0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint -> tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint -> tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.313 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> created (class)]
[TRACE] 2020-08-12 19:18:21.313 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.TenprintImpl (tenprint) -> created (class)]
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.313 [main] DotNode - getDataType() : created -> org.hibernate.type.ZonedDateTimeType@6ca30b8a
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint.created -> tenprintim0_.CREATED
[DEBUG] 2020-08-12 19:18:21.313 [main] FromReferenceNode - Resolved : tenprint.created -> tenprintim0_.CREATED
[DEBUG] 2020-08-12 19:18:21.313 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.313 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.313 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} DISTINCT (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER) ) ( FromClause{level=1} ( RESOURCES tenprintim0_ RESOURCES faceimpl1_ ) ) ( where ( AND ( AND ( AND ( = faceimpl1_1_.BIOMETRICRECORD_ISSUER ? ) ( = faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER ? ) ) ( OR ( != tenprintim0_.ISSUER ? ) ( != tenprintim0_.IDENTIFIER ? ) ) ) ( in ( tenprintim0_1_.STATE (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER) state ) ( inList ? ) ) ) ) ( ORDER ( tenprintim0_.CREATED tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER created ) DESC ) )
[DEBUG] 2020-08-12 19:18:21.313 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} DISTINCT (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER) ) ( FromClause{level=1} ( RESOURCES tenprintim0_ RESOURCES faceimpl1_ ) ) ( where ( AND ( AND ( AND ( = faceimpl1_1_.BIOMETRICRECORD_ISSUER ? ) ( = faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER ? ) ) ( OR ( != tenprintim0_.ISSUER ? ) ( != tenprintim0_.IDENTIFIER ? ) ) ) ( in ( tenprintim0_1_.STATE (tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER) state ) ( inList ? ) ) ) ) ( ORDER ( tenprintim0_.CREATED tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER created ) DESC ) )
[DEBUG] 2020-08-12 19:18:21.314 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TenprintImpl): [RESOURCES, TENPRINTS]
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
    |  | originalText: tenprint
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-SqlNode
    |     |  +-BinaryLogicOperatorNode
    |     |  |  +-BinaryLogicOperatorNode
    |     |  |  |  +-SqlFragment
    |     |  |  |  \-SqlFragment
    |     |  |  \-BinaryLogicOperatorNode
    |     |  |     +-SqlFragment
    |     |  |     \-SqlFragment
    |     |  \-BinaryLogicOperatorNode
    |     |     +-BinaryLogicOperatorNode
    |     |     |  +-SqlFragment
    |     |     |  \-SqlFragment
    |     |     \-BinaryLogicOperatorNode
    |     |        +-SqlFragment
    |     |        \-SqlFragment
    |     \-InLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
    |        | path: tenprint.state
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
    |        |  | originalText: tenprint
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: state
    |        \-SqlNode
    |           \-ParameterNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
       | path: tenprint.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
       |  | originalText: tenprint
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       \-SqlNode

[DEBUG] 2020-08-12 19:18:21.314 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity TenprintImpl): [RESOURCES, TENPRINTS]
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
    |  | originalText: tenprint
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-SqlNode
    |     |  +-BinaryLogicOperatorNode
    |     |  |  +-BinaryLogicOperatorNode
    |     |  |  |  +-SqlFragment
    |     |  |  |  \-SqlFragment
    |     |  |  \-BinaryLogicOperatorNode
    |     |  |     +-SqlFragment
    |     |  |     \-SqlFragment
    |     |  \-BinaryLogicOperatorNode
    |     |     +-BinaryLogicOperatorNode
    |     |     |  +-SqlFragment
    |     |     |  \-SqlFragment
    |     |     \-BinaryLogicOperatorNode
    |     |        +-SqlFragment
    |     |        \-SqlFragment
    |     \-InLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
    |        | path: tenprint.state
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
    |        |  | originalText: tenprint
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: state
    |        \-SqlNode
    |           \-ParameterNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
       | path: tenprint.created
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.TenprintImpl)
       |  | originalText: tenprint
       |  \-IdentNode
       |    persister: null
       |    originalText: created
       \-SqlNode

[TRACE] 2020-08-12 19:18:21.314 [main] JoinProcessor - Forcing inclusion of extra joins [alias=tenprintim0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.314 [main] JoinProcessor - Forcing inclusion of extra joins [alias=tenprintim0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.314 [main] JoinProcessor - Using FROM fragment [RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.314 [main] JoinProcessor - Using FROM fragment [RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.314 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [tenprintim0_.ENTITY='TenprintImpl']
[DEBUG] 2020-08-12 19:18:21.314 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [tenprintim0_.ENTITY='TenprintImpl']
[DEBUG] 2020-08-12 19:18:21.314 [main] SyntheticAndFactory - Using processed WHERE-fragment [tenprintim0_.ENTITY='TenprintImpl']
[DEBUG] 2020-08-12 19:18:21.314 [main] SyntheticAndFactory - Using processed WHERE-fragment [tenprintim0_.ENTITY='TenprintImpl']
[TRACE] 2020-08-12 19:18:21.314 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl1_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.314 [main] JoinProcessor - Forcing inclusion of extra joins [alias=faceimpl1_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.314 [main] JoinProcessor - Using FROM fragment [inner join RESOURCES faceimpl1_ on tenprintim0_1_.FACE_ISSUER=faceimpl1_.ISSUER and tenprintim0_1_.FACE_IDENTIFIER=faceimpl1_.IDENTIFIER inner join FACES faceimpl1_1_ on faceimpl1_.ISSUER=faceimpl1_1_.ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl1_2_ on faceimpl1_.ISSUER=faceimpl1_2_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_2_.FACE_IDENTIFIER left outer join EYES faceimpl1_3_ on faceimpl1_.ISSUER=faceimpl1_3_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl1_4_ on faceimpl1_.ISSUER=faceimpl1_4_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.314 [main] JoinProcessor - Using FROM fragment [inner join RESOURCES faceimpl1_ on tenprintim0_1_.FACE_ISSUER=faceimpl1_.ISSUER and tenprintim0_1_.FACE_IDENTIFIER=faceimpl1_.IDENTIFIER inner join FACES faceimpl1_1_ on faceimpl1_.ISSUER=faceimpl1_1_.ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl1_2_ on faceimpl1_.ISSUER=faceimpl1_2_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_2_.FACE_IDENTIFIER left outer join EYES faceimpl1_3_ on faceimpl1_.ISSUER=faceimpl1_3_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl1_4_ on faceimpl1_.ISSUER=faceimpl1_4_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.314 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.314 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.315 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[ALIAS_REF] IdentNode: 'tenprintim0_.ISSUER as issuer2_14_0_, tenprintim0_.IDENTIFIER as identifi3_14_0_' {alias=tenprint, className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl, tableAlias=tenprintim0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'faceimpl1_.ISSUER as issuer2_14_1_, faceimpl1_.IDENTIFIER as identifi3_14_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl.face,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'tenprintim0_.CREATED as created4_14_0_, tenprintim0_.CREATOR_ISSUER as creator13_14_0_, tenprintim0_.CREATOR_IDENTIFIER as creator14_14_0_, tenprintim0_.ENTITY as entity1_14_0_, tenprintim0_.EXPIRATION as expirati5_14_0_, tenprintim0_.EXTERNAL_IDENTIFIER as external6_14_0_, tenprintim0_.MIMETYPE as mimetype7_14_0_, tenprintim0_.MODIFIED as modified8_14_0_, tenprintim0_.MODIFIER_ISSUER as modifie15_14_0_, tenprintim0_.MODIFIER_IDENTIFIER as modifie16_14_0_, tenprintim0_.NAME as name9_14_0_, tenprintim0_.URI as uri10_14_0_, tenprintim0_.VERSION as version11_14_0_, tenprintim0_1_.ABIS_IDENTIFIER as abis_ide1_18_0_, tenprintim0_1_.FACE_ISSUER as face_iss5_18_0_, tenprintim0_1_.FACE_IDENTIFIER as face_ide6_18_0_, tenprintim0_1_.STATE as state2_18_0_, tenprintim0_1_.TCN as tcn3_18_0_, tenprintim0_1_.UOW as uow4_18_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl1_.CREATED as created4_14_1_, faceimpl1_.CREATOR_ISSUER as creator13_14_1_, faceimpl1_.CREATOR_IDENTIFIER as creator14_14_1_, faceimpl1_.ENTITY as entity1_14_1_, faceimpl1_.EXPIRATION as expirati5_14_1_, faceimpl1_.EXTERNAL_IDENTIFIER as external6_14_1_, faceimpl1_.MIMETYPE as mimetype7_14_1_, faceimpl1_.MODIFIED as modified8_14_1_, faceimpl1_.MODIFIER_ISSUER as modifie15_14_1_, faceimpl1_.MODIFIER_IDENTIFIER as modifie16_14_1_, faceimpl1_.NAME as name9_14_1_, faceimpl1_.URI as uri10_14_1_, faceimpl1_.VERSION as version11_14_1_, faceimpl1_1_.ABIS_IDENTIFIER as abis_ide1_8_1_, faceimpl1_1_.BIOMETRICRECORD_ISSUER as biometri5_8_1_, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_1_, faceimpl1_1_.STATE as state2_8_1_, faceimpl1_1_.TCN as tcn3_8_1_, faceimpl1_1_.UOW as uow4_8_1_, faceimpl1_2_.ISSUER as issuer0_4_1_, faceimpl1_2_.IDENTIFIER as identifi0_4_1_, faceimpl1_3_.ISSUER as issuer0_6_1_, faceimpl1_3_.IDENTIFIER as identifi0_6_1_, faceimpl1_4_.ISSUER as issuer0_18_1_, faceimpl1_4_.IDENTIFIER as identifi0_18_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[tenprint], fromElementByTableAlias=[tenprintim0_, faceimpl1_], fromElementsByPath=[tenprint.face], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tenprint,role=null,tableName=RESOURCES,tableAlias=tenprintim0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join RESOURCES faceimpl1_ on tenprintim0_1_.FACE_ISSUER=faceimpl1_.ISSUER and tenprintim0_1_.FACE_IDENTIFIER=faceimpl1_.IDENTIFIER inner join FACES faceimpl1_1_ on faceimpl1_.ISSUER=faceimpl1_1_.ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl1_2_ on faceimpl1_.ISSUER=faceimpl1_2_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_2_.FACE_IDENTIFIER left outer join EYES faceimpl1_3_ on faceimpl1_.ISSUER=faceimpl1_3_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl1_4_ on faceimpl1_.ISSUER=faceimpl1_4_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl.face,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    +-[WHERE] SqlNode: 'where'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'tenprintim0_.ENTITY='TenprintImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[AND] SqlNode: 'AND'
    |     |  +-[AND] BinaryLogicOperatorNode: 'AND'
    |     |  |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  |  +-[SQL_TOKEN] SqlFragment: 'faceimpl1_1_.BIOMETRICRECORD_ISSUER'
    |     |  |  |  \-[SQL_TOKEN] SqlFragment: '?'
    |     |  |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |  |     +-[SQL_TOKEN] SqlFragment: 'faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER'
    |     |  |     \-[SQL_TOKEN] SqlFragment: '?'
    |     |  \-[OR] BinaryLogicOperatorNode: 'OR'
    |     |     +-[NE] BinaryLogicOperatorNode: '!='
    |     |     |  +-[SQL_TOKEN] SqlFragment: 'tenprintim0_.ISSUER'
    |     |     |  \-[SQL_TOKEN] SqlFragment: '?'
    |     |     \-[NE] BinaryLogicOperatorNode: '!='
    |     |        +-[SQL_TOKEN] SqlFragment: 'tenprintim0_.IDENTIFIER'
    |     |        \-[SQL_TOKEN] SqlFragment: '?'
    |     \-[IN] InLogicOperatorNode: 'in'
    |        +-[DOT] DotNode: 'tenprintim0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=tenprint.state,tableAlias=tenprintim0_,className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl,classAlias=tenprint}
    |        |  +-[ALIAS_REF] IdentNode: '(tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)' {alias=tenprint, className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl, tableAlias=tenprintim0_}
    |        |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |        \-[IN_LIST] SqlNode: 'inList'
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@571c7572}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'tenprintim0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=tenprint.created,tableAlias=tenprintim0_,className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl,classAlias=tenprint}
       |  +-[ALIAS_REF] IdentNode: 'tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER' {alias=tenprint, className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl, tableAlias=tenprintim0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       \-[DESCENDING] SqlNode: 'DESC'

[DEBUG] 2020-08-12 19:18:21.315 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[ALIAS_REF] IdentNode: 'tenprintim0_.ISSUER as issuer2_14_0_, tenprintim0_.IDENTIFIER as identifi3_14_0_' {alias=tenprint, className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl, tableAlias=tenprintim0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'faceimpl1_.ISSUER as issuer2_14_1_, faceimpl1_.IDENTIFIER as identifi3_14_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl.face,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'tenprintim0_.CREATED as created4_14_0_, tenprintim0_.CREATOR_ISSUER as creator13_14_0_, tenprintim0_.CREATOR_IDENTIFIER as creator14_14_0_, tenprintim0_.ENTITY as entity1_14_0_, tenprintim0_.EXPIRATION as expirati5_14_0_, tenprintim0_.EXTERNAL_IDENTIFIER as external6_14_0_, tenprintim0_.MIMETYPE as mimetype7_14_0_, tenprintim0_.MODIFIED as modified8_14_0_, tenprintim0_.MODIFIER_ISSUER as modifie15_14_0_, tenprintim0_.MODIFIER_IDENTIFIER as modifie16_14_0_, tenprintim0_.NAME as name9_14_0_, tenprintim0_.URI as uri10_14_0_, tenprintim0_.VERSION as version11_14_0_, tenprintim0_1_.ABIS_IDENTIFIER as abis_ide1_18_0_, tenprintim0_1_.FACE_ISSUER as face_iss5_18_0_, tenprintim0_1_.FACE_IDENTIFIER as face_ide6_18_0_, tenprintim0_1_.STATE as state2_18_0_, tenprintim0_1_.TCN as tcn3_18_0_, tenprintim0_1_.UOW as uow4_18_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl1_.CREATED as created4_14_1_, faceimpl1_.CREATOR_ISSUER as creator13_14_1_, faceimpl1_.CREATOR_IDENTIFIER as creator14_14_1_, faceimpl1_.ENTITY as entity1_14_1_, faceimpl1_.EXPIRATION as expirati5_14_1_, faceimpl1_.EXTERNAL_IDENTIFIER as external6_14_1_, faceimpl1_.MIMETYPE as mimetype7_14_1_, faceimpl1_.MODIFIED as modified8_14_1_, faceimpl1_.MODIFIER_ISSUER as modifie15_14_1_, faceimpl1_.MODIFIER_IDENTIFIER as modifie16_14_1_, faceimpl1_.NAME as name9_14_1_, faceimpl1_.URI as uri10_14_1_, faceimpl1_.VERSION as version11_14_1_, faceimpl1_1_.ABIS_IDENTIFIER as abis_ide1_8_1_, faceimpl1_1_.BIOMETRICRECORD_ISSUER as biometri5_8_1_, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_1_, faceimpl1_1_.STATE as state2_8_1_, faceimpl1_1_.TCN as tcn3_8_1_, faceimpl1_1_.UOW as uow4_8_1_, faceimpl1_2_.ISSUER as issuer0_4_1_, faceimpl1_2_.IDENTIFIER as identifi0_4_1_, faceimpl1_3_.ISSUER as issuer0_6_1_, faceimpl1_3_.IDENTIFIER as identifi0_6_1_, faceimpl1_4_.ISSUER as issuer0_18_1_, faceimpl1_4_.IDENTIFIER as identifi0_18_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[tenprint], fromElementByTableAlias=[tenprintim0_, faceimpl1_], fromElementsByPath=[tenprint.face], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tenprint,role=null,tableName=RESOURCES,tableAlias=tenprintim0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join RESOURCES faceimpl1_ on tenprintim0_1_.FACE_ISSUER=faceimpl1_.ISSUER and tenprintim0_1_.FACE_IDENTIFIER=faceimpl1_.IDENTIFIER inner join FACES faceimpl1_1_ on faceimpl1_.ISSUER=faceimpl1_1_.ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl1_2_ on faceimpl1_.ISSUER=faceimpl1_2_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_2_.FACE_IDENTIFIER left outer join EYES faceimpl1_3_ on faceimpl1_.ISSUER=faceimpl1_3_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl1_4_ on faceimpl1_.ISSUER=faceimpl1_4_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl.face,tableName=RESOURCES,tableAlias=faceimpl1_,origin=RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER,columns={tenprintim0_1_.FACE_ISSUER tenprintim0_1_.FACE_IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    +-[WHERE] SqlNode: 'where'
    |  +-[FILTERS] SqlNode: '{filter conditions}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'tenprintim0_.ENTITY='TenprintImpl''
    |  \-[AND] SqlNode: 'AND'
    |     +-[AND] SqlNode: 'AND'
    |     |  +-[AND] BinaryLogicOperatorNode: 'AND'
    |     |  |  +-[EQ] BinaryLogicOperatorNode: '='
    |     |  |  |  +-[SQL_TOKEN] SqlFragment: 'faceimpl1_1_.BIOMETRICRECORD_ISSUER'
    |     |  |  |  \-[SQL_TOKEN] SqlFragment: '?'
    |     |  |  \-[EQ] BinaryLogicOperatorNode: '='
    |     |  |     +-[SQL_TOKEN] SqlFragment: 'faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER'
    |     |  |     \-[SQL_TOKEN] SqlFragment: '?'
    |     |  \-[OR] BinaryLogicOperatorNode: 'OR'
    |     |     +-[NE] BinaryLogicOperatorNode: '!='
    |     |     |  +-[SQL_TOKEN] SqlFragment: 'tenprintim0_.ISSUER'
    |     |     |  \-[SQL_TOKEN] SqlFragment: '?'
    |     |     \-[NE] BinaryLogicOperatorNode: '!='
    |     |        +-[SQL_TOKEN] SqlFragment: 'tenprintim0_.IDENTIFIER'
    |     |        \-[SQL_TOKEN] SqlFragment: '?'
    |     \-[IN] InLogicOperatorNode: 'in'
    |        +-[DOT] DotNode: 'tenprintim0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=tenprint.state,tableAlias=tenprintim0_,className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl,classAlias=tenprint}
    |        |  +-[ALIAS_REF] IdentNode: '(tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER)' {alias=tenprint, className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl, tableAlias=tenprintim0_}
    |        |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |        \-[IN_LIST] SqlNode: 'inList'
    |           \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@571c7572}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[DOT] DotNode: 'tenprintim0_.CREATED' {propertyName=created,dereferenceType=PRIMITIVE,getPropertyPath=created,path=tenprint.created,tableAlias=tenprintim0_,className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl,classAlias=tenprint}
       |  +-[ALIAS_REF] IdentNode: 'tenprintim0_.ISSUER, tenprintim0_.IDENTIFIER' {alias=tenprint, className=com.gemalto.ics.usplatform.bip.biometric.TenprintImpl, tableAlias=tenprintim0_}
       |  \-[IDENT] IdentNode: 'created' {originalText=created}
       \-[DESCENDING] SqlNode: 'DESC'

[DEBUG] 2020-08-12 19:18:21.315 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.315 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.315 [main] QueryTranslatorImpl - HQL: SELECT DISTINCT tenprint FROM com.gemalto.ics.usplatform.bip.biometric.TenprintImpl tenprint JOIN FETCH tenprint.face where tenprint.face.biometricrecord.identifier = :identifier AND tenprint.identifier != :identifier1 AND tenprint.state IN :state ORDER BY tenprint.created DESC
[DEBUG] 2020-08-12 19:18:21.315 [main] QueryTranslatorImpl - HQL: SELECT DISTINCT tenprint FROM com.gemalto.ics.usplatform.bip.biometric.TenprintImpl tenprint JOIN FETCH tenprint.face where tenprint.face.biometricrecord.identifier = :identifier AND tenprint.identifier != :identifier1 AND tenprint.state IN :state ORDER BY tenprint.created DESC
[DEBUG] 2020-08-12 19:18:21.315 [main] QueryTranslatorImpl - SQL: select distinct tenprintim0_.ISSUER as issuer2_14_0_, tenprintim0_.IDENTIFIER as identifi3_14_0_, faceimpl1_.ISSUER as issuer2_14_1_, faceimpl1_.IDENTIFIER as identifi3_14_1_, tenprintim0_.CREATED as created4_14_0_, tenprintim0_.CREATOR_ISSUER as creator13_14_0_, tenprintim0_.CREATOR_IDENTIFIER as creator14_14_0_, tenprintim0_.ENTITY as entity1_14_0_, tenprintim0_.EXPIRATION as expirati5_14_0_, tenprintim0_.EXTERNAL_IDENTIFIER as external6_14_0_, tenprintim0_.MIMETYPE as mimetype7_14_0_, tenprintim0_.MODIFIED as modified8_14_0_, tenprintim0_.MODIFIER_ISSUER as modifie15_14_0_, tenprintim0_.MODIFIER_IDENTIFIER as modifie16_14_0_, tenprintim0_.NAME as name9_14_0_, tenprintim0_.URI as uri10_14_0_, tenprintim0_.VERSION as version11_14_0_, tenprintim0_1_.ABIS_IDENTIFIER as abis_ide1_18_0_, tenprintim0_1_.FACE_ISSUER as face_iss5_18_0_, tenprintim0_1_.FACE_IDENTIFIER as face_ide6_18_0_, tenprintim0_1_.STATE as state2_18_0_, tenprintim0_1_.TCN as tcn3_18_0_, tenprintim0_1_.UOW as uow4_18_0_, faceimpl1_.CREATED as created4_14_1_, faceimpl1_.CREATOR_ISSUER as creator13_14_1_, faceimpl1_.CREATOR_IDENTIFIER as creator14_14_1_, faceimpl1_.ENTITY as entity1_14_1_, faceimpl1_.EXPIRATION as expirati5_14_1_, faceimpl1_.EXTERNAL_IDENTIFIER as external6_14_1_, faceimpl1_.MIMETYPE as mimetype7_14_1_, faceimpl1_.MODIFIED as modified8_14_1_, faceimpl1_.MODIFIER_ISSUER as modifie15_14_1_, faceimpl1_.MODIFIER_IDENTIFIER as modifie16_14_1_, faceimpl1_.NAME as name9_14_1_, faceimpl1_.URI as uri10_14_1_, faceimpl1_.VERSION as version11_14_1_, faceimpl1_1_.ABIS_IDENTIFIER as abis_ide1_8_1_, faceimpl1_1_.BIOMETRICRECORD_ISSUER as biometri5_8_1_, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_1_, faceimpl1_1_.STATE as state2_8_1_, faceimpl1_1_.TCN as tcn3_8_1_, faceimpl1_1_.UOW as uow4_8_1_, faceimpl1_2_.ISSUER as issuer0_4_1_, faceimpl1_2_.IDENTIFIER as identifi0_4_1_, faceimpl1_3_.ISSUER as issuer0_6_1_, faceimpl1_3_.IDENTIFIER as identifi0_6_1_, faceimpl1_4_.ISSUER as issuer0_18_1_, faceimpl1_4_.IDENTIFIER as identifi0_18_1_ from RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER inner join RESOURCES faceimpl1_ on tenprintim0_1_.FACE_ISSUER=faceimpl1_.ISSUER and tenprintim0_1_.FACE_IDENTIFIER=faceimpl1_.IDENTIFIER inner join FACES faceimpl1_1_ on faceimpl1_.ISSUER=faceimpl1_1_.ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl1_2_ on faceimpl1_.ISSUER=faceimpl1_2_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_2_.FACE_IDENTIFIER left outer join EYES faceimpl1_3_ on faceimpl1_.ISSUER=faceimpl1_3_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl1_4_ on faceimpl1_.ISSUER=faceimpl1_4_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_4_.FACE_IDENTIFIER where tenprintim0_.ENTITY='TenprintImpl' and faceimpl1_1_.BIOMETRICRECORD_ISSUER=? and faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER=? and (tenprintim0_.ISSUER<>? or tenprintim0_.IDENTIFIER<>?) and (tenprintim0_1_.STATE in (?)) order by tenprintim0_.CREATED DESC
[DEBUG] 2020-08-12 19:18:21.315 [main] QueryTranslatorImpl - SQL: select distinct tenprintim0_.ISSUER as issuer2_14_0_, tenprintim0_.IDENTIFIER as identifi3_14_0_, faceimpl1_.ISSUER as issuer2_14_1_, faceimpl1_.IDENTIFIER as identifi3_14_1_, tenprintim0_.CREATED as created4_14_0_, tenprintim0_.CREATOR_ISSUER as creator13_14_0_, tenprintim0_.CREATOR_IDENTIFIER as creator14_14_0_, tenprintim0_.ENTITY as entity1_14_0_, tenprintim0_.EXPIRATION as expirati5_14_0_, tenprintim0_.EXTERNAL_IDENTIFIER as external6_14_0_, tenprintim0_.MIMETYPE as mimetype7_14_0_, tenprintim0_.MODIFIED as modified8_14_0_, tenprintim0_.MODIFIER_ISSUER as modifie15_14_0_, tenprintim0_.MODIFIER_IDENTIFIER as modifie16_14_0_, tenprintim0_.NAME as name9_14_0_, tenprintim0_.URI as uri10_14_0_, tenprintim0_.VERSION as version11_14_0_, tenprintim0_1_.ABIS_IDENTIFIER as abis_ide1_18_0_, tenprintim0_1_.FACE_ISSUER as face_iss5_18_0_, tenprintim0_1_.FACE_IDENTIFIER as face_ide6_18_0_, tenprintim0_1_.STATE as state2_18_0_, tenprintim0_1_.TCN as tcn3_18_0_, tenprintim0_1_.UOW as uow4_18_0_, faceimpl1_.CREATED as created4_14_1_, faceimpl1_.CREATOR_ISSUER as creator13_14_1_, faceimpl1_.CREATOR_IDENTIFIER as creator14_14_1_, faceimpl1_.ENTITY as entity1_14_1_, faceimpl1_.EXPIRATION as expirati5_14_1_, faceimpl1_.EXTERNAL_IDENTIFIER as external6_14_1_, faceimpl1_.MIMETYPE as mimetype7_14_1_, faceimpl1_.MODIFIED as modified8_14_1_, faceimpl1_.MODIFIER_ISSUER as modifie15_14_1_, faceimpl1_.MODIFIER_IDENTIFIER as modifie16_14_1_, faceimpl1_.NAME as name9_14_1_, faceimpl1_.URI as uri10_14_1_, faceimpl1_.VERSION as version11_14_1_, faceimpl1_1_.ABIS_IDENTIFIER as abis_ide1_8_1_, faceimpl1_1_.BIOMETRICRECORD_ISSUER as biometri5_8_1_, faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_1_, faceimpl1_1_.STATE as state2_8_1_, faceimpl1_1_.TCN as tcn3_8_1_, faceimpl1_1_.UOW as uow4_8_1_, faceimpl1_2_.ISSUER as issuer0_4_1_, faceimpl1_2_.IDENTIFIER as identifi0_4_1_, faceimpl1_3_.ISSUER as issuer0_6_1_, faceimpl1_3_.IDENTIFIER as identifi0_6_1_, faceimpl1_4_.ISSUER as issuer0_18_1_, faceimpl1_4_.IDENTIFIER as identifi0_18_1_ from RESOURCES tenprintim0_ inner join TENPRINTS tenprintim0_1_ on tenprintim0_.ISSUER=tenprintim0_1_.ISSUER and tenprintim0_.IDENTIFIER=tenprintim0_1_.IDENTIFIER inner join RESOURCES faceimpl1_ on tenprintim0_1_.FACE_ISSUER=faceimpl1_.ISSUER and tenprintim0_1_.FACE_IDENTIFIER=faceimpl1_.IDENTIFIER inner join FACES faceimpl1_1_ on faceimpl1_.ISSUER=faceimpl1_1_.ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl1_2_ on faceimpl1_.ISSUER=faceimpl1_2_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_2_.FACE_IDENTIFIER left outer join EYES faceimpl1_3_ on faceimpl1_.ISSUER=faceimpl1_3_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl1_4_ on faceimpl1_.ISSUER=faceimpl1_4_.FACE_ISSUER and faceimpl1_.IDENTIFIER=faceimpl1_4_.FACE_IDENTIFIER where tenprintim0_.ENTITY='TenprintImpl' and faceimpl1_1_.BIOMETRICRECORD_ISSUER=? and faceimpl1_1_.BIOMETRICRECORD_IDENTIFIER=? and (tenprintim0_.ISSUER<>? or tenprintim0_.IDENTIFIER<>?) and (tenprintim0_1_.STATE in (?)) order by tenprintim0_.CREATED DESC
[DEBUG] 2020-08-12 19:18:21.315 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.315 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.315 [main] NamedQueryRepository - Checking named query: selectCaseByFace
[DEBUG] 2020-08-12 19:18:21.315 [main] NamedQueryRepository - Checking named query: selectCaseByFace
[TRACE] 2020-08-12 19:18:21.315 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT cazz.identifier FROM CaseImpl cazz  WHERE cazz.face.identifier = :resource AND cazz.identifier NOT IN :identifier AND cazz.state NOT IN :state)
[TRACE] 2020-08-12 19:18:21.315 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT cazz.identifier FROM CaseImpl cazz  WHERE cazz.face.identifier = :resource AND cazz.identifier NOT IN :identifier AND cazz.state NOT IN :state)
[DEBUG] 2020-08-12 19:18:21.316 [main] QueryTranslatorImpl - parse() - HQL: SELECT cazz.identifier FROM com.gemalto.ics.usplatform.bip.workflow.CaseImpl cazz  WHERE cazz.face.identifier = :resource AND cazz.identifier NOT IN :identifier AND cazz.state NOT IN :state
[DEBUG] 2020-08-12 19:18:21.316 [main] QueryTranslatorImpl - parse() - HQL: SELECT cazz.identifier FROM com.gemalto.ics.usplatform.bip.workflow.CaseImpl cazz  WHERE cazz.face.identifier = :resource AND cazz.identifier NOT IN :identifier AND cazz.state NOT IN :state
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.316 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.317 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.318 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.319 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.320 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - -----------------------> inList
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - -------------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - ---------------------------> parameter
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------------- parameter
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------------- inList
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.321 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.321 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.321 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.321 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'workflow'
    |  |     |  \-[IDENT] Node: 'CaseImpl'
    |  |     \-[ALIAS] Node: 'cazz'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'cazz'
    |        \-[IDENT] Node: 'identifier'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'cazz'
          |  |  |  |  \-[IDENT] Node: 'face'
          |  |  |  \-[IDENT] Node: 'identifier'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'resource'
          |  \-[NOT_IN] Node: 'not in'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'cazz'
          |     |  \-[IDENT] Node: 'identifier'
          |     \-[IN_LIST] Node: 'inList'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'identifier'
          \-[NOT_IN] Node: 'not in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cazz'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.321 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'workflow'
    |  |     |  \-[IDENT] Node: 'CaseImpl'
    |  |     \-[ALIAS] Node: 'cazz'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'cazz'
    |        \-[IDENT] Node: 'identifier'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'cazz'
          |  |  |  |  \-[IDENT] Node: 'face'
          |  |  |  \-[IDENT] Node: 'identifier'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'resource'
          |  \-[NOT_IN] Node: 'not in'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'cazz'
          |     |  \-[IDENT] Node: 'identifier'
          |     \-[IN_LIST] Node: 'inList'
          |        \-[COLON] Node: ':'
          |           \-[IDENT] Node: 'identifier'
          \-[NOT_IN] Node: 'not in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cazz'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'state'

[DEBUG] 2020-08-12 19:18:21.321 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.321 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.321 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> caseimpl0_
[DEBUG] 2020-08-12 19:18:21.321 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> caseimpl0_
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz.identifier -> caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz.identifier -> caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> face (subclass)]
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> face (subclass)]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : face -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : face -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.workflow.CaseImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - dereferenceShortcut() : property identifier in com.gemalto.ics.usplatform.bip.workflow.CaseImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Unresolved property path is now 'face.identifier'
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Unresolved property path is now 'face.identifier'
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz.face -> (caseimpl0_1_.FACE_ISSUER, caseimpl0_1_.FACE_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz.face -> (caseimpl0_1_.FACE_ISSUER, caseimpl0_1_.FACE_IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : face.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : face.identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Terminal getPropertyPath = [face.identifier]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Terminal getPropertyPath = [face.identifier]
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz.face.identifier -> (caseimpl0_1_.FACE_ISSUER, caseimpl0_1_.FACE_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz.face.identifier -> (caseimpl0_1_.FACE_ISSUER, caseimpl0_1_.FACE_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.322 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.322 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.322 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.323 [main] FromReferenceNode - Resolved : cazz.identifier -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.323 [main] FromReferenceNode - Resolved : cazz.identifier -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.323 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.323 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.323 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.323 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.323 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@271a140c
[DEBUG] 2020-08-12 19:18:21.323 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@271a140c
[DEBUG] 2020-08-12 19:18:21.323 [main] FromReferenceNode - Resolved : cazz.state -> caseimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.323 [main] FromReferenceNode - Resolved : cazz.state -> caseimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.323 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.323 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.323 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER) identifier ) ) ( FromClause{level=1} RESOURCES caseimpl0_ ) ( WHERE ( AND ( AND ( AND ( = caseimpl0_1_.FACE_ISSUER ? ) ( = caseimpl0_1_.FACE_IDENTIFIER ? ) ) ( or ( <> caseimpl0_.ISSUER ? ) ( <> caseimpl0_.IDENTIFIER ? ) ) ) ( not in ( caseimpl0_1_.STATE (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ) )
[DEBUG] 2020-08-12 19:18:21.323 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER) identifier ) ) ( FromClause{level=1} RESOURCES caseimpl0_ ) ( WHERE ( AND ( AND ( AND ( = caseimpl0_1_.FACE_ISSUER ? ) ( = caseimpl0_1_.FACE_IDENTIFIER ? ) ) ( or ( <> caseimpl0_.ISSUER ? ) ( <> caseimpl0_.IDENTIFIER ? ) ) ) ( not in ( caseimpl0_1_.STATE (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER) state ) ( inList ? ) ) ) ) )
[DEBUG] 2020-08-12 19:18:21.323 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
    |  | path: cazz.identifier
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
    |  |  | originalText: cazz
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: identifier
    |  +-SqlNode
    |  +-SqlFragment
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-BinaryLogicOperatorNode
          |  |  |  +-SqlFragment
          |  |  |  \-SqlFragment
          |  |  \-BinaryLogicOperatorNode
          |  |     +-SqlFragment
          |  |     \-SqlFragment
          |  \-InLogicOperatorNode
          |     +-BinaryLogicOperatorNode
          |     |  +-SqlFragment
          |     |  \-SqlFragment
          |     \-BinaryLogicOperatorNode
          |        +-SqlFragment
          |        \-SqlFragment
          \-InLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
             | path: cazz.state
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
             |  | originalText: cazz
             |  \-IdentNode
             |    persister: null
             |    originalText: state
             \-SqlNode
                \-ParameterNode

[DEBUG] 2020-08-12 19:18:21.323 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
    |  | path: cazz.identifier
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
    |  |  | originalText: cazz
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: identifier
    |  +-SqlNode
    |  +-SqlFragment
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-BinaryLogicOperatorNode
          |  |  |  +-SqlFragment
          |  |  |  \-SqlFragment
          |  |  \-BinaryLogicOperatorNode
          |  |     +-SqlFragment
          |  |     \-SqlFragment
          |  \-InLogicOperatorNode
          |     +-BinaryLogicOperatorNode
          |     |  +-SqlFragment
          |     |  \-SqlFragment
          |     \-BinaryLogicOperatorNode
          |        +-SqlFragment
          |        \-SqlFragment
          \-InLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
             | path: cazz.state
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.workflow.CaseImpl)
             |  | originalText: cazz
             |  \-IdentNode
             |    persister: null
             |    originalText: state
             \-SqlNode
                \-ParameterNode

[TRACE] 2020-08-12 19:18:21.323 [main] JoinProcessor - Forcing inclusion of extra joins [alias=caseimpl0_, containsTableAlias=true]
[TRACE] 2020-08-12 19:18:21.323 [main] JoinProcessor - Forcing inclusion of extra joins [alias=caseimpl0_, containsTableAlias=true]
[DEBUG] 2020-08-12 19:18:21.323 [main] JoinProcessor - Using FROM fragment [RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.323 [main] JoinProcessor - Using FROM fragment [RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.323 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [caseimpl0_.ENTITY='CaseImpl']
[DEBUG] 2020-08-12 19:18:21.323 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [caseimpl0_.ENTITY='CaseImpl']
[DEBUG] 2020-08-12 19:18:21.323 [main] SyntheticAndFactory - Using processed WHERE-fragment [caseimpl0_.ENTITY='CaseImpl']
[DEBUG] 2020-08-12 19:18:21.323 [main] SyntheticAndFactory - Using processed WHERE-fragment [caseimpl0_.ENTITY='CaseImpl']
[DEBUG] 2020-08-12 19:18:21.323 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.323 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,CASES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'caseimpl0_.ISSUER' {propertyName=identifier,dereferenceType=COMPONENT,getPropertyPath=identifier,path=cazz.identifier,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
    |  |  +-[ALIAS_REF] IdentNode: '(caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
    |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_.IDENTIFIER'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cazz], fromElementByTableAlias=[caseimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cazz,role=null,tableName=RESOURCES,tableAlias=caseimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'caseimpl0_.ENTITY='CaseImpl''
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] BinaryLogicOperatorNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.FACE_ISSUER'
          |  |  |  \-[SQL_TOKEN] SqlFragment: '?'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.FACE_IDENTIFIER'
          |  |     \-[SQL_TOKEN] SqlFragment: '?'
          |  \-[OR] InLogicOperatorNode: 'or'
          |     +-[NE] BinaryLogicOperatorNode: '<>'
          |     |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_.ISSUER'
          |     |  \-[SQL_TOKEN] SqlFragment: '?'
          |     \-[NE] BinaryLogicOperatorNode: '<>'
          |        +-[SQL_TOKEN] SqlFragment: 'caseimpl0_.IDENTIFIER'
          |        \-[SQL_TOKEN] SqlFragment: '?'
          \-[NOT_IN] InLogicOperatorNode: 'not in'
             +-[DOT] DotNode: 'caseimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=cazz.state,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
             |  +-[ALIAS_REF] IdentNode: '(caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[IN_LIST] SqlNode: 'inList'
                \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@271a140c}

[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,CASES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'caseimpl0_.ISSUER' {propertyName=identifier,dereferenceType=COMPONENT,getPropertyPath=identifier,path=cazz.identifier,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
    |  |  +-[ALIAS_REF] IdentNode: '(caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
    |  |  \-[IDENT] IdentNode: 'identifier' {originalText=identifier}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_.IDENTIFIER'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cazz], fromElementByTableAlias=[caseimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cazz,role=null,tableName=RESOURCES,tableAlias=caseimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'caseimpl0_.ENTITY='CaseImpl''
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] BinaryLogicOperatorNode: 'AND'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.FACE_ISSUER'
          |  |  |  \-[SQL_TOKEN] SqlFragment: '?'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.FACE_IDENTIFIER'
          |  |     \-[SQL_TOKEN] SqlFragment: '?'
          |  \-[OR] InLogicOperatorNode: 'or'
          |     +-[NE] BinaryLogicOperatorNode: '<>'
          |     |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_.ISSUER'
          |     |  \-[SQL_TOKEN] SqlFragment: '?'
          |     \-[NE] BinaryLogicOperatorNode: '<>'
          |        +-[SQL_TOKEN] SqlFragment: 'caseimpl0_.IDENTIFIER'
          |        \-[SQL_TOKEN] SqlFragment: '?'
          \-[NOT_IN] InLogicOperatorNode: 'not in'
             +-[DOT] DotNode: 'caseimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=cazz.state,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
             |  +-[ALIAS_REF] IdentNode: '(caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
             |  \-[IDENT] IdentNode: 'state' {originalText=state}
             \-[IN_LIST] SqlNode: 'inList'
                \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.CustomType@271a140c}

[DEBUG] 2020-08-12 19:18:21.324 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.324 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - HQL: SELECT cazz.identifier FROM com.gemalto.ics.usplatform.bip.workflow.CaseImpl cazz  WHERE cazz.face.identifier = :resource AND cazz.identifier NOT IN :identifier AND cazz.state NOT IN :state
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - HQL: SELECT cazz.identifier FROM com.gemalto.ics.usplatform.bip.workflow.CaseImpl cazz  WHERE cazz.face.identifier = :resource AND cazz.identifier NOT IN :identifier AND cazz.state NOT IN :state
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - SQL: select caseimpl0_.ISSUER as col_0_0_, caseimpl0_.IDENTIFIER as col_0_1_ from RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER where caseimpl0_.ENTITY='CaseImpl' and caseimpl0_1_.FACE_ISSUER=? and caseimpl0_1_.FACE_IDENTIFIER=? and (caseimpl0_.ISSUER<>? or caseimpl0_.IDENTIFIER<>?) and (caseimpl0_1_.STATE not in  (?))
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - SQL: select caseimpl0_.ISSUER as col_0_0_, caseimpl0_.IDENTIFIER as col_0_1_ from RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER where caseimpl0_.ENTITY='CaseImpl' and caseimpl0_1_.FACE_ISSUER=? and caseimpl0_1_.FACE_IDENTIFIER=? and (caseimpl0_.ISSUER<>? or caseimpl0_.IDENTIFIER<>?) and (caseimpl0_1_.STATE not in  (?))
[DEBUG] 2020-08-12 19:18:21.324 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.324 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.324 [main] NamedQueryRepository - Checking named query: updateByAdjudicator
[DEBUG] 2020-08-12 19:18:21.324 [main] NamedQueryRepository - Checking named query: updateByAdjudicator
[TRACE] 2020-08-12 19:18:21.324 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (UPDATE CaseImpl cazz SET cazz.level = :level WHERE cazz.adjudicator = :adjudicator AND cazz.state  NOT IN :states)
[TRACE] 2020-08-12 19:18:21.324 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (UPDATE CaseImpl cazz SET cazz.level = :level WHERE cazz.adjudicator = :adjudicator AND cazz.state  NOT IN :states)
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - parse() - HQL: UPDATE com.gemalto.ics.usplatform.bip.workflow.CaseImpl cazz SET cazz.level = :level WHERE cazz.adjudicator = :adjudicator AND cazz.state  NOT IN :states
[DEBUG] 2020-08-12 19:18:21.324 [main] QueryTranslatorImpl - parse() - HQL: UPDATE com.gemalto.ics.usplatform.bip.workflow.CaseImpl cazz SET cazz.level = :level WHERE cazz.adjudicator = :adjudicator AND cazz.state  NOT IN :states
[TRACE] 2020-08-12 19:18:21.324 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.324 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---> updateStatement
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---> updateStatement
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> optionalVersioned
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> optionalVersioned
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----- optionalVersioned
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----- optionalVersioned
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------- path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------- path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> asAlias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> asAlias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> alias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> alias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- alias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- alias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------- asAlias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------- asAlias
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----- optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----- optionalFromTokenFromClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> setClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> setClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> assignment
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> assignment
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> stateField
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> stateField
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------- identifier
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------- path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------- path
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- stateField
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- stateField
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> newValue
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> newValue
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> concatenation
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> concatenation
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------------> atom
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------------> atom
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------------------> parameter
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------------------> parameter
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------------------- parameter
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------------------- parameter
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------------- atom
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------------- atom
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------- concatenation
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----------- concatenation
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- newValue
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <--------- newValue
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------- assignment
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <------- assignment
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----- setClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - <----- setClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> whereClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----> whereClause
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> logicalExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------> logicalExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> expression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------> expression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -----------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - -------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.325 [main] HqlParser - ---------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------> atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------------- atom
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- concatenation
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> inList
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - ---------------------> inList
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -----------------------> compoundExpr
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - -------------------------> parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------------- parameter
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------------- compoundExpr
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- inList
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <--------------------- inList
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.326 [main] HqlParser - <----------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <--------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <--------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <----------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <----------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <--------- expression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <--------- expression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <------- logicalExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <------- logicalExpression
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <----- whereClause
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <----- whereClause
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <--- updateStatement
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <--- updateStatement
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.327 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.327 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.327 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.327 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |     |  |  |  \-[IDENT] Node: 'bip'
    |     |  |  \-[IDENT] Node: 'workflow'
    |     |  \-[IDENT] Node: 'CaseImpl'
    |     \-[ALIAS] Node: 'cazz'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'cazz'
    |     |  \-[IDENT] Node: 'level'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'level'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cazz'
          |  |  \-[IDENT] Node: 'adjudicator'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'adjudicator'
          \-[NOT_IN] Node: 'not in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cazz'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'states'

[DEBUG] 2020-08-12 19:18:21.327 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'UPDATE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |     |  |  |  \-[IDENT] Node: 'bip'
    |     |  |  \-[IDENT] Node: 'workflow'
    |     |  \-[IDENT] Node: 'CaseImpl'
    |     \-[ALIAS] Node: 'cazz'
    +-[SET] Node: 'SET'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'cazz'
    |     |  \-[IDENT] Node: 'level'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'level'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'cazz'
          |  |  \-[IDENT] Node: 'adjudicator'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'adjudicator'
          \-[NOT_IN] Node: 'not in'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cazz'
             |  \-[IDENT] Node: 'state'
             \-[IN_LIST] Node: 'inList'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'states'

[DEBUG] 2020-08-12 19:18:21.329 [main] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[DEBUG] 2020-08-12 19:18:21.329 [main] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[DEBUG] 2020-08-12 19:18:21.329 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> caseimpl0_
[DEBUG] 2020-08-12 19:18:21.329 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> caseimpl0_
[TRACE] 2020-08-12 19:18:21.329 [main] FromElementType - Using non-qualified column reference [identifier -> ([ISSUER,IDENTIFIER])]
[TRACE] 2020-08-12 19:18:21.329 [main] FromElementType - Using non-qualified column reference [identifier -> ([ISSUER,IDENTIFIER])]
[DEBUG] 2020-08-12 19:18:21.329 [main] FromReferenceNode - Resolved : cazz -> (ISSUER, IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.329 [main] FromReferenceNode - Resolved : cazz -> (ISSUER, IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.329 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> level (subclass)]
[TRACE] 2020-08-12 19:18:21.329 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> level (subclass)]
[DEBUG] 2020-08-12 19:18:21.329 [main] DotNode - getDataType() : level -> org.hibernate.type.IntegerType@753fd7a1
[DEBUG] 2020-08-12 19:18:21.329 [main] DotNode - getDataType() : level -> org.hibernate.type.IntegerType@753fd7a1
[TRACE] 2020-08-12 19:18:21.329 [main] FromElementType - Using non-qualified column reference [level -> ([LEVEL])]
[TRACE] 2020-08-12 19:18:21.329 [main] FromElementType - Using non-qualified column reference [level -> ([LEVEL])]
[DEBUG] 2020-08-12 19:18:21.329 [main] FromReferenceNode - Resolved : cazz.level -> LEVEL
[DEBUG] 2020-08-12 19:18:21.329 [main] FromReferenceNode - Resolved : cazz.level -> LEVEL
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.334 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> adjudicator (subclass)]
[TRACE] 2020-08-12 19:18:21.334 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> adjudicator (subclass)]
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - getDataType() : adjudicator -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.security.AdjudicatorImpl)
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - getDataType() : adjudicator -> org.hibernate.type.ManyToOneType(com.gemalto.ics.usplatform.bip.security.AdjudicatorImpl)
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - dereferenceShortcut() : property adjudicator in com.gemalto.ics.usplatform.bip.workflow.CaseImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - dereferenceShortcut() : property adjudicator in com.gemalto.ics.usplatform.bip.workflow.CaseImpl does not require a join.
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - Terminal getPropertyPath = [adjudicator]
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - Terminal getPropertyPath = [adjudicator]
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz.adjudicator -> (caseimpl0_1_.ADJUDICATOR_ISSUER, caseimpl0_1_.ADJUDICATOR_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz.adjudicator -> (caseimpl0_1_.ADJUDICATOR_ISSUER, caseimpl0_1_.ADJUDICATOR_IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz -> (caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.334 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> state (subclass)]
[TRACE] 2020-08-12 19:18:21.334 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.workflow.CaseImpl (cazz) -> state (subclass)]
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@271a140c
[DEBUG] 2020-08-12 19:18:21.334 [main] DotNode - getDataType() : state -> org.hibernate.type.CustomType@271a140c
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz.state -> caseimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.334 [main] FromReferenceNode - Resolved : cazz.state -> caseimpl0_1_.STATE
[DEBUG] 2020-08-12 19:18:21.334 [main] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[DEBUG] 2020-08-12 19:18:21.334 [main] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[DEBUG] 2020-08-12 19:18:21.334 [main] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[DEBUG] 2020-08-12 19:18:21.334 [main] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[DEBUG] 2020-08-12 19:18:21.334 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (RESOURCES,CASES)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cazz], fromElementByTableAlias=[caseimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cazz,role=null,tableName=RESOURCES,tableAlias=caseimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'LEVEL' {propertyName=level,dereferenceType=PRIMITIVE,getPropertyPath=level,path=cazz.level,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
    |     |  +-[ALIAS_REF] IdentNode: '(ISSUER, IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
    |     |  \-[IDENT] IdentNode: 'level' {originalText=level}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=level, expectedType=org.hibernate.type.IntegerType@753fd7a1}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: '{and}'
          +-[SQL_TOKEN] SqlFragment: 'ENTITY='CaseImpl''
          \-[AND] SqlNode: 'AND'
             +-[AND] BinaryLogicOperatorNode: 'AND'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.ADJUDICATOR_ISSUER'
             |  |  \-[SQL_TOKEN] SqlFragment: '?'
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.ADJUDICATOR_IDENTIFIER'
             |     \-[SQL_TOKEN] SqlFragment: '?'
             \-[NOT_IN] InLogicOperatorNode: 'not in'
                +-[DOT] DotNode: 'caseimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=cazz.state,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
                |  +-[ALIAS_REF] IdentNode: '(caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
                |  \-[IDENT] IdentNode: 'state' {originalText=state}
                \-[IN_LIST] SqlNode: 'inList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=states, expectedType=org.hibernate.type.CustomType@271a140c}

[DEBUG] 2020-08-12 19:18:21.334 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'UPDATE'  querySpaces (RESOURCES,CASES)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cazz], fromElementByTableAlias=[caseimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cazz,role=null,tableName=RESOURCES,tableAlias=caseimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl}}
    +-[SET] SqlNode: 'SET'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'LEVEL' {propertyName=level,dereferenceType=PRIMITIVE,getPropertyPath=level,path=cazz.level,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
    |     |  +-[ALIAS_REF] IdentNode: '(ISSUER, IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
    |     |  \-[IDENT] IdentNode: 'level' {originalText=level}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=level, expectedType=org.hibernate.type.IntegerType@753fd7a1}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: '{and}'
          +-[SQL_TOKEN] SqlFragment: 'ENTITY='CaseImpl''
          \-[AND] SqlNode: 'AND'
             +-[AND] BinaryLogicOperatorNode: 'AND'
             |  +-[EQ] BinaryLogicOperatorNode: '='
             |  |  +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.ADJUDICATOR_ISSUER'
             |  |  \-[SQL_TOKEN] SqlFragment: '?'
             |  \-[EQ] BinaryLogicOperatorNode: '='
             |     +-[SQL_TOKEN] SqlFragment: 'caseimpl0_1_.ADJUDICATOR_IDENTIFIER'
             |     \-[SQL_TOKEN] SqlFragment: '?'
             \-[NOT_IN] InLogicOperatorNode: 'not in'
                +-[DOT] DotNode: 'caseimpl0_1_.STATE' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=cazz.state,tableAlias=caseimpl0_,className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl,classAlias=cazz}
                |  +-[ALIAS_REF] IdentNode: '(caseimpl0_.ISSUER, caseimpl0_.IDENTIFIER)' {alias=cazz, className=com.gemalto.ics.usplatform.bip.workflow.CaseImpl, tableAlias=caseimpl0_}
                |  \-[IDENT] IdentNode: 'state' {originalText=state}
                \-[IN_LIST] SqlNode: 'inList'
                   \-[NAMED_PARAM] ParameterNode: '?' {name=states, expectedType=org.hibernate.type.CustomType@271a140c}

[DEBUG] 2020-08-12 19:18:21.334 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.334 [main] ErrorTracker - throwQueryException() : no errors
[TRACE] 2020-08-12 19:18:21.411 [main] TableBasedUpdateHandlerImpl - Generated ID-INSERT-SELECT SQL (multi-table update) : insert into MODULE.HT_RESOURCES select caseimpl0_.ISSUER as ISSUER, caseimpl0_.IDENTIFIER as IDENTIFIER from RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER where ENTITY='CaseImpl' and caseimpl0_1_.ADJUDICATOR_ISSUER=? and caseimpl0_1_.ADJUDICATOR_IDENTIFIER=? and (caseimpl0_1_.STATE not in  (?))
[TRACE] 2020-08-12 19:18:21.411 [main] TableBasedUpdateHandlerImpl - Generated ID-INSERT-SELECT SQL (multi-table update) : insert into MODULE.HT_RESOURCES select caseimpl0_.ISSUER as ISSUER, caseimpl0_.IDENTIFIER as IDENTIFIER from RESOURCES caseimpl0_ inner join CASES caseimpl0_1_ on caseimpl0_.ISSUER=caseimpl0_1_.ISSUER and caseimpl0_.IDENTIFIER=caseimpl0_1_.IDENTIFIER where ENTITY='CaseImpl' and caseimpl0_1_.ADJUDICATOR_ISSUER=? and caseimpl0_1_.ADJUDICATOR_IDENTIFIER=? and (caseimpl0_1_.STATE not in  (?))
[DEBUG] 2020-08-12 19:18:21.411 [main] NamedQueryRepository - Checking named query: selectBiometricRecordResources
[DEBUG] 2020-08-12 19:18:21.411 [main] NamedQueryRepository - Checking named query: selectBiometricRecordResources
[TRACE] 2020-08-12 19:18:21.411 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT record.value FROM BiometricRecordImpl record WHERE record.identifier = :identifier)
[TRACE] 2020-08-12 19:18:21.411 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT record.value FROM BiometricRecordImpl record WHERE record.identifier = :identifier)
[DEBUG] 2020-08-12 19:18:21.411 [main] QueryTranslatorImpl - parse() - HQL: SELECT record.value FROM com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl record WHERE record.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.411 [main] QueryTranslatorImpl - parse() - HQL: SELECT record.value FROM com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl record WHERE record.identifier = :identifier
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.411 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.412 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.413 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:21.414 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:21.414 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.414 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.414 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'BiometricRecordImpl'
    |  |     \-[ALIAS] Node: 'record'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'record'
    |        \-[IDENT] Node: 'value'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'record'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.414 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  |  \-[IDENT] Node: 'bip'
    |  |     |  |  \-[IDENT] Node: 'biometric'
    |  |     |  \-[IDENT] Node: 'BiometricRecordImpl'
    |  |     \-[ALIAS] Node: 'record'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'record'
    |        \-[IDENT] Node: 'value'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'record'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:21.414 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.414 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.415 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> biometricr0_
[DEBUG] 2020-08-12 19:18:21.415 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> biometricr0_
[DEBUG] 2020-08-12 19:18:21.415 [main] FromReferenceNode - Resolved : record -> (biometricr0_.ISSUER, biometricr0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.415 [main] FromReferenceNode - Resolved : record -> (biometricr0_.ISSUER, biometricr0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.415 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> value (class)]
[TRACE] 2020-08-12 19:18:21.415 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> value (class)]
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - getDataType() : value -> org.hibernate.type.SetType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl.value)
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - getDataType() : value -> org.hibernate.type.SetType(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl.value)
[DEBUG] 2020-08-12 19:18:21.415 [main] FromElementFactory - createManyToMany() : path = record.value role = com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl.value associatedEntityName = com.gemalto.ics.usplatform.bip.biometric.FaceImpl
[DEBUG] 2020-08-12 19:18:21.415 [main] FromElementFactory - createManyToMany() : path = record.value role = com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl.value associatedEntityName = com.gemalto.ics.usplatform.bip.biometric.FaceImpl
[DEBUG] 2020-08-12 19:18:21.415 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) -> faceimpl2_
[DEBUG] 2020-08-12 19:18:21.415 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.biometric.FaceImpl (<no alias>) -> faceimpl2_
[DEBUG] 2020-08-12 19:18:21.415 [main] FromClause - addJoinByPathMap() : record.value -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=faceimpl2_,origin=RESOURCES biometricr0_,columns={biometricr0_.ISSUER biometricr0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
[DEBUG] 2020-08-12 19:18:21.415 [main] FromClause - addJoinByPathMap() : record.value -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RESOURCES,tableAlias=faceimpl2_,origin=RESOURCES biometricr0_,columns={biometricr0_.ISSUER biometricr0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - dereferenceCollection() : Created new FROM element for record.value : FACES faceimpl2_
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - dereferenceCollection() : Created new FROM element for record.value : FACES faceimpl2_
[DEBUG] 2020-08-12 19:18:21.415 [main] FromReferenceNode - Resolved : record.value -> .
[DEBUG] 2020-08-12 19:18:21.415 [main] FromReferenceNode - Resolved : record.value -> .
[TRACE] 2020-08-12 19:18:21.415 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> value (class)]
[TRACE] 2020-08-12 19:18:21.415 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> value (class)]
[DEBUG] 2020-08-12 19:18:21.415 [main] FromReferenceNode - Resolved : record -> (biometricr0_.ISSUER, biometricr0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.415 [main] FromReferenceNode - Resolved : record -> (biometricr0_.ISSUER, biometricr0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:21.415 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> identifier (class)]
[TRACE] 2020-08-12 19:18:21.415 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl (record) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.415 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:21.416 [main] FromReferenceNode - Resolved : record.identifier -> (biometricr0_.ISSUER, biometricr0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.416 [main] FromReferenceNode - Resolved : record.identifier -> (biometricr0_.ISSUER, biometricr0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:21.416 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.416 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.416 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( . (biometricr0_.ISSUER, biometricr0_.IDENTIFIER) value ) ) ( FromClause{level=1} ( RESOURCES biometricr0_ FACES faceimpl2_ ) ) ( WHERE ( AND ( = biometricr0_.ISSUER ? ) ( = biometricr0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.416 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( . (biometricr0_.ISSUER, biometricr0_.IDENTIFIER) value ) ) ( FromClause{level=1} ( RESOURCES biometricr0_ FACES faceimpl2_ ) ) ( WHERE ( AND ( = biometricr0_.ISSUER ? ) ( = biometricr0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:21.416 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | path: record.value
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
    |  |  | originalText: record
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: value
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.416 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity FaceImpl): [RESOURCES, FACES, DEMOGRAPHICS, EYES, TENPRINTS]
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.FaceImpl)
    |  | path: record.value
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl)
    |  |  | originalText: record
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: value
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:21.416 [main] JoinProcessor - Using FROM fragment [RESOURCES biometricr0_]
[DEBUG] 2020-08-12 19:18:21.416 [main] JoinProcessor - Using FROM fragment [RESOURCES biometricr0_]
[DEBUG] 2020-08-12 19:18:21.416 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [biometricr0_.ENTITY='BiometricRecordImpl']
[DEBUG] 2020-08-12 19:18:21.416 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [biometricr0_.ENTITY='BiometricRecordImpl']
[DEBUG] 2020-08-12 19:18:21.416 [main] SyntheticAndFactory - Using processed WHERE-fragment [biometricr0_.ENTITY='BiometricRecordImpl']
[DEBUG] 2020-08-12 19:18:21.416 [main] SyntheticAndFactory - Using processed WHERE-fragment [biometricr0_.ENTITY='BiometricRecordImpl']
[DEBUG] 2020-08-12 19:18:21.416 [main] JoinProcessor - Using FROM fragment [inner join FACES value1_ on biometricr0_.ISSUER=value1_.BIOMETRICRECORD_ISSUER and biometricr0_.IDENTIFIER=value1_.BIOMETRICRECORD_IDENTIFIER inner join RESOURCES faceimpl2_ on value1_.ISSUER=faceimpl2_.ISSUER and value1_.IDENTIFIER=faceimpl2_.IDENTIFIER inner join FACES faceimpl2_1_ on faceimpl2_.ISSUER=faceimpl2_1_.ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl2_2_ on faceimpl2_.ISSUER=faceimpl2_2_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_2_.FACE_IDENTIFIER left outer join EYES faceimpl2_3_ on faceimpl2_.ISSUER=faceimpl2_3_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl2_4_ on faceimpl2_.ISSUER=faceimpl2_4_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.416 [main] JoinProcessor - Using FROM fragment [inner join FACES value1_ on biometricr0_.ISSUER=value1_.BIOMETRICRECORD_ISSUER and biometricr0_.IDENTIFIER=value1_.BIOMETRICRECORD_IDENTIFIER inner join RESOURCES faceimpl2_ on value1_.ISSUER=faceimpl2_.ISSUER and value1_.IDENTIFIER=faceimpl2_.IDENTIFIER inner join FACES faceimpl2_1_ on faceimpl2_.ISSUER=faceimpl2_1_.ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl2_2_ on faceimpl2_.ISSUER=faceimpl2_2_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_2_.FACE_IDENTIFIER left outer join EYES faceimpl2_3_ on faceimpl2_.ISSUER=faceimpl2_3_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl2_4_ on faceimpl2_.ISSUER=faceimpl2_4_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_4_.FACE_IDENTIFIER]
[DEBUG] 2020-08-12 19:18:21.416 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.416 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:21.417 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'faceimpl2_.ISSUER as issuer2_14_, faceimpl2_.IDENTIFIER as identifi3_14_' {propertyName=value,dereferenceType=COLLECTION,getPropertyPath=value,path=record.value,tableAlias=faceimpl2_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: '(biometricr0_.ISSUER, biometricr0_.IDENTIFIER)' {alias=record, className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl, tableAlias=biometricr0_}
    |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl2_.CREATED as created4_14_, faceimpl2_.CREATOR_ISSUER as creator13_14_, faceimpl2_.CREATOR_IDENTIFIER as creator14_14_, faceimpl2_.ENTITY as entity1_14_, faceimpl2_.EXPIRATION as expirati5_14_, faceimpl2_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl2_.MIMETYPE as mimetype7_14_, faceimpl2_.MODIFIED as modified8_14_, faceimpl2_.MODIFIER_ISSUER as modifie15_14_, faceimpl2_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl2_.NAME as name9_14_, faceimpl2_.URI as uri10_14_, faceimpl2_.VERSION as version11_14_, faceimpl2_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl2_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl2_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl2_1_.STATE as state2_8_, faceimpl2_1_.TCN as tcn3_8_, faceimpl2_1_.UOW as uow4_8_, faceimpl2_2_.ISSUER as issuer0_4_, faceimpl2_2_.IDENTIFIER as identifi0_4_, faceimpl2_3_.ISSUER as issuer0_6_, faceimpl2_3_.IDENTIFIER as identifi0_6_, faceimpl2_4_.ISSUER as issuer0_18_, faceimpl2_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[record], fromElementByTableAlias=[faceimpl2_, biometricr0_], fromElementsByPath=[record.value], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES biometricr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=record,role=null,tableName=RESOURCES,tableAlias=biometricr0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join FACES value1_ on biometricr0_.ISSUER=value1_.BIOMETRICRECORD_ISSUER and biometricr0_.IDENTIFIER=value1_.BIOMETRICRECORD_IDENTIFIER inner join RESOURCES faceimpl2_ on value1_.ISSUER=faceimpl2_.ISSUER and value1_.IDENTIFIER=faceimpl2_.IDENTIFIER inner join FACES faceimpl2_1_ on faceimpl2_.ISSUER=faceimpl2_1_.ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl2_2_ on faceimpl2_.ISSUER=faceimpl2_2_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_2_.FACE_IDENTIFIER left outer join EYES faceimpl2_3_ on faceimpl2_.ISSUER=faceimpl2_3_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl2_4_ on faceimpl2_.ISSUER=faceimpl2_4_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl.value,tableName=RESOURCES,tableAlias=faceimpl2_,origin=RESOURCES biometricr0_,columns={biometricr0_.ISSUER biometricr0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'biometricr0_.ENTITY='BiometricRecordImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'biometricr0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'biometricr0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.417 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,DEMOGRAPHICS,EYES,TENPRINTS,FACES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'faceimpl2_.ISSUER as issuer2_14_, faceimpl2_.IDENTIFIER as identifi3_14_' {propertyName=value,dereferenceType=COLLECTION,getPropertyPath=value,path=record.value,tableAlias=faceimpl2_,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: '(biometricr0_.ISSUER, biometricr0_.IDENTIFIER)' {alias=record, className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl, tableAlias=biometricr0_}
    |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  \-[SQL_TOKEN] SqlFragment: 'faceimpl2_.CREATED as created4_14_, faceimpl2_.CREATOR_ISSUER as creator13_14_, faceimpl2_.CREATOR_IDENTIFIER as creator14_14_, faceimpl2_.ENTITY as entity1_14_, faceimpl2_.EXPIRATION as expirati5_14_, faceimpl2_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl2_.MIMETYPE as mimetype7_14_, faceimpl2_.MODIFIED as modified8_14_, faceimpl2_.MODIFIER_ISSUER as modifie15_14_, faceimpl2_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl2_.NAME as name9_14_, faceimpl2_.URI as uri10_14_, faceimpl2_.VERSION as version11_14_, faceimpl2_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl2_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl2_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl2_1_.STATE as state2_8_, faceimpl2_1_.TCN as tcn3_8_, faceimpl2_1_.UOW as uow4_8_, faceimpl2_2_.ISSUER as issuer0_4_, faceimpl2_2_.IDENTIFIER as identifi0_4_, faceimpl2_3_.ISSUER as issuer0_6_, faceimpl2_3_.IDENTIFIER as identifi0_6_, faceimpl2_4_.ISSUER as issuer0_18_, faceimpl2_4_.IDENTIFIER as identifi0_18_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[record], fromElementByTableAlias=[faceimpl2_, biometricr0_], fromElementsByPath=[record.value], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES biometricr0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=record,role=null,tableName=RESOURCES,tableAlias=biometricr0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join FACES value1_ on biometricr0_.ISSUER=value1_.BIOMETRICRECORD_ISSUER and biometricr0_.IDENTIFIER=value1_.BIOMETRICRECORD_IDENTIFIER inner join RESOURCES faceimpl2_ on value1_.ISSUER=faceimpl2_.ISSUER and value1_.IDENTIFIER=faceimpl2_.IDENTIFIER inner join FACES faceimpl2_1_ on faceimpl2_.ISSUER=faceimpl2_1_.ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl2_2_ on faceimpl2_.ISSUER=faceimpl2_2_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_2_.FACE_IDENTIFIER left outer join EYES faceimpl2_3_ on faceimpl2_.ISSUER=faceimpl2_3_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl2_4_ on faceimpl2_.ISSUER=faceimpl2_4_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_4_.FACE_IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl.value,tableName=RESOURCES,tableAlias=faceimpl2_,origin=RESOURCES biometricr0_,columns={biometricr0_.ISSUER biometricr0_.IDENTIFIER,className=com.gemalto.ics.usplatform.bip.biometric.FaceImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'biometricr0_.ENTITY='BiometricRecordImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'biometricr0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'biometricr0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:21.418 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.418 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.419 [main] QueryTranslatorImpl - HQL: SELECT record.value FROM com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl record WHERE record.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.419 [main] QueryTranslatorImpl - HQL: SELECT record.value FROM com.gemalto.ics.usplatform.bip.biometric.BiometricRecordImpl record WHERE record.identifier = :identifier
[DEBUG] 2020-08-12 19:18:21.419 [main] QueryTranslatorImpl - SQL: select faceimpl2_.ISSUER as issuer2_14_, faceimpl2_.IDENTIFIER as identifi3_14_, faceimpl2_.CREATED as created4_14_, faceimpl2_.CREATOR_ISSUER as creator13_14_, faceimpl2_.CREATOR_IDENTIFIER as creator14_14_, faceimpl2_.ENTITY as entity1_14_, faceimpl2_.EXPIRATION as expirati5_14_, faceimpl2_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl2_.MIMETYPE as mimetype7_14_, faceimpl2_.MODIFIED as modified8_14_, faceimpl2_.MODIFIER_ISSUER as modifie15_14_, faceimpl2_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl2_.NAME as name9_14_, faceimpl2_.URI as uri10_14_, faceimpl2_.VERSION as version11_14_, faceimpl2_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl2_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl2_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl2_1_.STATE as state2_8_, faceimpl2_1_.TCN as tcn3_8_, faceimpl2_1_.UOW as uow4_8_, faceimpl2_2_.ISSUER as issuer0_4_, faceimpl2_2_.IDENTIFIER as identifi0_4_, faceimpl2_3_.ISSUER as issuer0_6_, faceimpl2_3_.IDENTIFIER as identifi0_6_, faceimpl2_4_.ISSUER as issuer0_18_, faceimpl2_4_.IDENTIFIER as identifi0_18_ from RESOURCES biometricr0_ inner join FACES value1_ on biometricr0_.ISSUER=value1_.BIOMETRICRECORD_ISSUER and biometricr0_.IDENTIFIER=value1_.BIOMETRICRECORD_IDENTIFIER inner join RESOURCES faceimpl2_ on value1_.ISSUER=faceimpl2_.ISSUER and value1_.IDENTIFIER=faceimpl2_.IDENTIFIER inner join FACES faceimpl2_1_ on faceimpl2_.ISSUER=faceimpl2_1_.ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl2_2_ on faceimpl2_.ISSUER=faceimpl2_2_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_2_.FACE_IDENTIFIER left outer join EYES faceimpl2_3_ on faceimpl2_.ISSUER=faceimpl2_3_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl2_4_ on faceimpl2_.ISSUER=faceimpl2_4_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_4_.FACE_IDENTIFIER where biometricr0_.ENTITY='BiometricRecordImpl' and biometricr0_.ISSUER=? and biometricr0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.419 [main] QueryTranslatorImpl - SQL: select faceimpl2_.ISSUER as issuer2_14_, faceimpl2_.IDENTIFIER as identifi3_14_, faceimpl2_.CREATED as created4_14_, faceimpl2_.CREATOR_ISSUER as creator13_14_, faceimpl2_.CREATOR_IDENTIFIER as creator14_14_, faceimpl2_.ENTITY as entity1_14_, faceimpl2_.EXPIRATION as expirati5_14_, faceimpl2_.EXTERNAL_IDENTIFIER as external6_14_, faceimpl2_.MIMETYPE as mimetype7_14_, faceimpl2_.MODIFIED as modified8_14_, faceimpl2_.MODIFIER_ISSUER as modifie15_14_, faceimpl2_.MODIFIER_IDENTIFIER as modifie16_14_, faceimpl2_.NAME as name9_14_, faceimpl2_.URI as uri10_14_, faceimpl2_.VERSION as version11_14_, faceimpl2_1_.ABIS_IDENTIFIER as abis_ide1_8_, faceimpl2_1_.BIOMETRICRECORD_ISSUER as biometri5_8_, faceimpl2_1_.BIOMETRICRECORD_IDENTIFIER as biometri6_8_, faceimpl2_1_.STATE as state2_8_, faceimpl2_1_.TCN as tcn3_8_, faceimpl2_1_.UOW as uow4_8_, faceimpl2_2_.ISSUER as issuer0_4_, faceimpl2_2_.IDENTIFIER as identifi0_4_, faceimpl2_3_.ISSUER as issuer0_6_, faceimpl2_3_.IDENTIFIER as identifi0_6_, faceimpl2_4_.ISSUER as issuer0_18_, faceimpl2_4_.IDENTIFIER as identifi0_18_ from RESOURCES biometricr0_ inner join FACES value1_ on biometricr0_.ISSUER=value1_.BIOMETRICRECORD_ISSUER and biometricr0_.IDENTIFIER=value1_.BIOMETRICRECORD_IDENTIFIER inner join RESOURCES faceimpl2_ on value1_.ISSUER=faceimpl2_.ISSUER and value1_.IDENTIFIER=faceimpl2_.IDENTIFIER inner join FACES faceimpl2_1_ on faceimpl2_.ISSUER=faceimpl2_1_.ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_1_.IDENTIFIER left outer join DEMOGRAPHICS faceimpl2_2_ on faceimpl2_.ISSUER=faceimpl2_2_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_2_.FACE_IDENTIFIER left outer join EYES faceimpl2_3_ on faceimpl2_.ISSUER=faceimpl2_3_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_3_.FACE_IDENTIFIER left outer join TENPRINTS faceimpl2_4_ on faceimpl2_.ISSUER=faceimpl2_4_.FACE_ISSUER and faceimpl2_.IDENTIFIER=faceimpl2_4_.FACE_IDENTIFIER where biometricr0_.ENTITY='BiometricRecordImpl' and biometricr0_.ISSUER=? and biometricr0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:21.419 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.419 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:21.419 [main] NamedQueryRepository - Checking 8 named SQL queries
[DEBUG] 2020-08-12 19:18:21.419 [main] NamedQueryRepository - Checking 8 named SQL queries
[DEBUG] 2020-08-12 19:18:21.419 [main] NamedQueryRepository - Checking named SQL query: selectIssuersByIssuerOrParentNative
[DEBUG] 2020-08-12 19:18:21.419 [main] NamedQueryRepository - Checking named SQL query: selectIssuersByIssuerOrParentNative
[TRACE] 2020-08-12 19:18:21.419 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (SELECT ISSUER FROM ISSUERS WHERE ISSUER = ? OR PARENT_ISSUER = ?)
[TRACE] 2020-08-12 19:18:21.419 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (SELECT ISSUER FROM ISSUERS WHERE ISSUER = ? OR PARENT_ISSUER = ?)
[TRACE] 2020-08-12 19:18:21.422 [main] SQLCustomQuery - Starting processing of sql query [SELECT ISSUER FROM ISSUERS WHERE ISSUER = ? OR PARENT_ISSUER = ?]
[TRACE] 2020-08-12 19:18:21.422 [main] SQLCustomQuery - Starting processing of sql query [SELECT ISSUER FROM ISSUERS WHERE ISSUER = ? OR PARENT_ISSUER = ?]
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: deleteAdjudicator
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: deleteAdjudicator
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (UPDATE CASES SET ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE IN ('CLOSED'))
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (UPDATE CASES SET ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE IN ('CLOSED'))
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [UPDATE CASES SET ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE IN ('CLOSED')]
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [UPDATE CASES SET ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE IN ('CLOSED')]
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: deleteHistory
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: deleteHistory
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (DELETE FROM RESOURCES_HISTORY WHERE ISSUER = ? AND IDENTIFIER = ? AND REVTYPE NOT IN (?))
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (DELETE FROM RESOURCES_HISTORY WHERE ISSUER = ? AND IDENTIFIER = ? AND REVTYPE NOT IN (?))
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [DELETE FROM RESOURCES_HISTORY WHERE ISSUER = ? AND IDENTIFIER = ? AND REVTYPE NOT IN (?)]
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [DELETE FROM RESOURCES_HISTORY WHERE ISSUER = ? AND IDENTIFIER = ? AND REVTYPE NOT IN (?)]
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: selectResourceByIdentifierNative
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: selectResourceByIdentifierNative
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (SELECT IDENTIFIER FROM RESOURCES WITH (NOLOCK) WHERE ISSUER = ? AND IDENTIFIER = ?)
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (SELECT IDENTIFIER FROM RESOURCES WITH (NOLOCK) WHERE ISSUER = ? AND IDENTIFIER = ?)
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [SELECT IDENTIFIER FROM RESOURCES WITH (NOLOCK) WHERE ISSUER = ? AND IDENTIFIER = ?]
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [SELECT IDENTIFIER FROM RESOURCES WITH (NOLOCK) WHERE ISSUER = ? AND IDENTIFIER = ?]
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: updateCases
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: updateCases
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (UPDATE CASES SET STATE = 'OPEN', ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE NOT IN ('CLOSED'))
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (UPDATE CASES SET STATE = 'OPEN', ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE NOT IN ('CLOSED'))
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [UPDATE CASES SET STATE = 'OPEN', ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE NOT IN ('CLOSED')]
[TRACE] 2020-08-12 19:18:21.477 [main] SQLCustomQuery - Starting processing of sql query [UPDATE CASES SET STATE = 'OPEN', ADJUDICATOR_ISSUER = NULL, ADJUDICATOR_IDENTIFIER = NULL WHERE ADJUDICATOR_ISSUER = ? AND ADJUDICATOR_IDENTIFIER = ? AND STATE NOT IN ('CLOSED')]
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: deleteIssuersNative
[DEBUG] 2020-08-12 19:18:21.477 [main] NamedQueryRepository - Checking named SQL query: deleteIssuersNative
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (DELETE FROM ISSUERS WHERE ISSUER IN :issuers)
[TRACE] 2020-08-12 19:18:21.477 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (DELETE FROM ISSUERS WHERE ISSUER IN :issuers)
[TRACE] 2020-08-12 19:18:21.478 [main] SQLCustomQuery - Starting processing of sql query [DELETE FROM ISSUERS WHERE ISSUER IN :issuers]
[TRACE] 2020-08-12 19:18:21.478 [main] SQLCustomQuery - Starting processing of sql query [DELETE FROM ISSUERS WHERE ISSUER IN :issuers]
[DEBUG] 2020-08-12 19:18:21.478 [main] NamedQueryRepository - Checking named SQL query: deleteFromCollectionsNative
[DEBUG] 2020-08-12 19:18:21.478 [main] NamedQueryRepository - Checking named SQL query: deleteFromCollectionsNative
[TRACE] 2020-08-12 19:18:21.478 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (DELETE FROM COLLECTIONS WHERE RESOURCE_ISSUER = ? AND RESOURCE_IDENTIFIER = ?)
[TRACE] 2020-08-12 19:18:21.478 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (DELETE FROM COLLECTIONS WHERE RESOURCE_ISSUER = ? AND RESOURCE_IDENTIFIER = ?)
[TRACE] 2020-08-12 19:18:21.478 [main] SQLCustomQuery - Starting processing of sql query [DELETE FROM COLLECTIONS WHERE RESOURCE_ISSUER = ? AND RESOURCE_IDENTIFIER = ?]
[TRACE] 2020-08-12 19:18:21.478 [main] SQLCustomQuery - Starting processing of sql query [DELETE FROM COLLECTIONS WHERE RESOURCE_ISSUER = ? AND RESOURCE_IDENTIFIER = ?]
[DEBUG] 2020-08-12 19:18:21.479 [main] NamedQueryRepository - Checking named SQL query: selectIssuersNative
[DEBUG] 2020-08-12 19:18:21.479 [main] NamedQueryRepository - Checking named SQL query: selectIssuersNative
[TRACE] 2020-08-12 19:18:21.479 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (SELECT ISSUER FROM ISSUERS WITH (NOLOCK))
[TRACE] 2020-08-12 19:18:21.479 [main] QueryPlanCache - Unable to locate native-sql query plan in cache; generating (SELECT ISSUER FROM ISSUERS WITH (NOLOCK))
[TRACE] 2020-08-12 19:18:21.479 [main] SQLCustomQuery - Starting processing of sql query [SELECT ISSUER FROM ISSUERS WITH (NOLOCK)]
[TRACE] 2020-08-12 19:18:21.479 [main] SQLCustomQuery - Starting processing of sql query [SELECT ISSUER FROM ISSUERS WITH (NOLOCK)]
[TRACE] 2020-08-12 19:18:21.543 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@288b73c1] for TypeConfiguration
[TRACE] 2020-08-12 19:18:21.543 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@288b73c1] for TypeConfiguration
[DEBUG] 2020-08-12 19:18:21.547 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22fe90df
[DEBUG] 2020-08-12 19:18:21.547 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22fe90df
[TRACE] 2020-08-12 19:18:21.547 [main] AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[TRACE] 2020-08-12 19:18:21.547 [main] AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] 2020-08-12 19:18:21.550 [main] SessionFactoryRegistry - Registering SessionFactory: 2974b802-ac9e-4290-baf9-a2ba6a0d281d (<unnamed>)
[DEBUG] 2020-08-12 19:18:21.550 [main] SessionFactoryRegistry - Registering SessionFactory: 2974b802-ac9e-4290-baf9-a2ba6a0d281d (<unnamed>)
[DEBUG] 2020-08-12 19:18:21.550 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-08-12 19:18:21.550 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] 2020-08-12 19:18:21.590 [main] SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null
[TRACE] 2020-08-12 19:18:21.590 [main] SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null
[TRACE] 2020-08-12 19:18:22.357 [main] SessionImpl - Opened Session [fc7594a6-fc64-4cbf-b684-a615704dcad8] at timestamp: 6542450285789184
[TRACE] 2020-08-12 19:18:22.357 [main] SessionImpl - Opened Session [fc7594a6-fc64-4cbf-b684-a615704dcad8] at timestamp: 6542450285789184
[TRACE] 2020-08-12 19:18:22.470 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier)
[TRACE] 2020-08-12 19:18:22.470 [main] QueryPlanCache - Unable to locate HQL query plan in cache; generating (SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier)
[DEBUG] 2020-08-12 19:18:22.470 [main] QueryTranslatorImpl - parse() - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.IssuerImpl resource WHERE resource.identifier = :identifier
[DEBUG] 2020-08-12 19:18:22.470 [main] QueryTranslatorImpl - parse() - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.IssuerImpl resource WHERE resource.identifier = :identifier
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - -> statement
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - ---> selectStatement
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - -----> queryRule
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:22.470 [main] HqlParser - -------> selectFrom
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------> selectClause
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------> selectedPropertiesList
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------> aliasedExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------> expression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------> negatedExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------> equalityExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------> relationalExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------------> concatenation
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------------------> atom
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - ---------------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -----------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - -------------------------------------------> identifier
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------------------------- identifier
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------------------- atom
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------------- concatenation
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------------- relationalExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <----------------------- equalityExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <--------------------- negatedExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:22.471 [main] HqlParser - <------------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <--------------- expression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <------------- aliasedExpression
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------- selectedPropertiesList
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <--------- selectClause
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - ---------> fromClause
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------> fromRange
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -------------> fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - ---------------> path
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <----------------- identifier
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - <--------------- path
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - ---------------> asAlias
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:22.472 [main] HqlParser - -----------------> alias
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -------------------> identifier
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <------------------- identifier
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <----------------- alias
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <--------------- asAlias
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <------------- fromClassOrOuterQueryPath
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <----------- fromRange
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <--------- fromClause
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - <------- selectFrom
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -------> whereClause
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - ---------> logicalExpression
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -----------> expression
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:22.473 [main] HqlParser - -------------> logicalOrExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - ---------------> logicalAndExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -----------------> negatedExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -------------------> equalityExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:22.474 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -----------------------------------> identPrimary
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -------------------------------------> identPrimaryBase
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - ---------------------------------------> identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <--------------------------------------- identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <------------------------------------- identPrimaryBase
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - -------------------------------------> identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <------------------------------------- identifier
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <----------------------------------- identPrimary
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:22.475 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - ---------------------> relationalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -----------------------> concatenation
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -------------------------> additiveExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - ---------------------------> multiplyExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -----------------------------> unaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -------------------------------> atom
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - ---------------------------------> primaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - -----------------------------------> parameter
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------------------- parameter
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------------------- primaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------------- atom
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------------- unaryExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------------- multiplyExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------------- additiveExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------------- concatenation
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------------- relationalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------------- equalityExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------------- negatedExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------------- logicalAndExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------------- logicalOrExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----------- expression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--------- logicalExpression
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <------- whereClause
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <----- queryRule
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <--- selectStatement
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <- statement
[TRACE] 2020-08-12 19:18:22.476 [main] HqlParser - <- statement
[DEBUG] 2020-08-12 19:18:22.476 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:22.476 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:22.477 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[DISTINCT] Node: 'DISTINCT'
    |     \-[IDENT] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'resource'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:22.477 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'gemalto'
    |  |     |  |  |  |  \-[IDENT] Node: 'ics'
    |  |     |  |  |  \-[IDENT] Node: 'usplatform'
    |  |     |  |  \-[IDENT] Node: 'bip'
    |  |     |  \-[IDENT] Node: 'IssuerImpl'
    |  |     \-[ALIAS] Node: 'resource'
    |  \-[SELECT] Node: 'SELECT'
    |     +-[DISTINCT] Node: 'DISTINCT'
    |     \-[IDENT] Node: 'resource'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'resource'
          |  \-[IDENT] Node: 'identifier'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'identifier'

[DEBUG] 2020-08-12 19:18:22.478 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:22.478 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:22.478 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (resource) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:22.478 [main] FromElement - FromClause{level=1} : com.gemalto.ics.usplatform.bip.IssuerImpl (resource) -> issuerimpl0_
[DEBUG] 2020-08-12 19:18:22.478 [main] FromReferenceNode - Resolved : resource -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:22.478 [main] FromReferenceNode - Resolved : resource -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:22.478 [main] FromReferenceNode - Resolved : resource -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:22.478 [main] FromReferenceNode - Resolved : resource -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[TRACE] 2020-08-12 19:18:22.478 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (resource) -> identifier (class)]
[TRACE] 2020-08-12 19:18:22.478 [main] FromElement - Handling property dereference [com.gemalto.ics.usplatform.bip.IssuerImpl (resource) -> identifier (class)]
[DEBUG] 2020-08-12 19:18:22.478 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:22.478 [main] DotNode - getDataType() : identifier -> org.hibernate.type.ComponentType@1e2b37cd
[DEBUG] 2020-08-12 19:18:22.479 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:22.479 [main] DotNode - Terminal getPropertyPath = [identifier]
[DEBUG] 2020-08-12 19:18:22.479 [main] FromReferenceNode - Resolved : resource.identifier -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:22.479 [main] FromReferenceNode - Resolved : resource.identifier -> (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER)
[DEBUG] 2020-08-12 19:18:22.479 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:22.479 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:22.479 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} DISTINCT (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( AND ( = issuerimpl0_.ISSUER ? ) ( = issuerimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:22.479 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} DISTINCT (issuerimpl0_.ISSUER, issuerimpl0_.IDENTIFIER) ) ( FromClause{level=1} RESOURCES issuerimpl0_ ) ( WHERE ( AND ( = issuerimpl0_.ISSUER ? ) ( = issuerimpl0_.IDENTIFIER ? ) ) ) )
[DEBUG] 2020-08-12 19:18:22.479 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity IssuerImpl): [RESOURCES, ISSUERS]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:22.479 [main] JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity IssuerImpl): [RESOURCES, ISSUERS]
    |  +-SqlNode
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.gemalto.ics.usplatform.bip.IssuerImpl)
    |  | originalText: resource
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-BinaryLogicOperatorNode
          |  +-SqlFragment
          |  \-SqlFragment
          \-BinaryLogicOperatorNode
             +-SqlFragment
             \-SqlFragment

[DEBUG] 2020-08-12 19:18:22.479 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:22.479 [main] JoinProcessor - Using FROM fragment [RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER]
[DEBUG] 2020-08-12 19:18:22.479 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:22.479 [main] SyntheticAndFactory - Using unprocessed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:22.479 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:22.479 [main] SyntheticAndFactory - Using processed WHERE-fragment [issuerimpl0_.ENTITY='IssuerImpl']
[DEBUG] 2020-08-12 19:18:22.479 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:22.479 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-08-12 19:18:22.479 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[ALIAS_REF] IdentNode: 'issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:22.479 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (RESOURCES,ISSUERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[ALIAS_REF] IdentNode: 'issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_' {alias=resource, className=com.gemalto.ics.usplatform.bip.IssuerImpl, tableAlias=issuerimpl0_}
    |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[resource], fromElementByTableAlias=[issuerimpl0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=resource,role=null,tableName=RESOURCES,tableAlias=issuerimpl0_,origin=null,columns={,className=com.gemalto.ics.usplatform.bip.IssuerImpl}}
    \-[WHERE] SqlNode: 'WHERE'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ENTITY='IssuerImpl''
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.ISSUER'
          |  \-[SQL_TOKEN] SqlFragment: '?'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'issuerimpl0_.IDENTIFIER'
             \-[SQL_TOKEN] SqlFragment: '?'

[DEBUG] 2020-08-12 19:18:22.479 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:22.479 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:22.480 [main] QueryTranslatorImpl - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.IssuerImpl resource WHERE resource.identifier = :identifier
[DEBUG] 2020-08-12 19:18:22.480 [main] QueryTranslatorImpl - HQL: SELECT DISTINCT resource FROM com.gemalto.ics.usplatform.bip.IssuerImpl resource WHERE resource.identifier = :identifier
[DEBUG] 2020-08-12 19:18:22.480 [main] QueryTranslatorImpl - SQL: select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:22.480 [main] QueryTranslatorImpl - SQL: select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:22.480 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-08-12 19:18:22.480 [main] ErrorTracker - throwQueryException() : no errors
[TRACE] 2020-08-12 19:18:22.485 [main] QueryPlanCache - Located HQL query plan in cache (SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier)
[TRACE] 2020-08-12 19:18:22.485 [main] QueryPlanCache - Located HQL query plan in cache (SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier)
[TRACE] 2020-08-12 19:18:22.507 [main] QueryPlanCache - Located HQL query plan in cache (SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier)
[TRACE] 2020-08-12 19:18:22.507 [main] QueryPlanCache - Located HQL query plan in cache (SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier)
[TRACE] 2020-08-12 19:18:22.508 [main] HQLQueryPlan - Find: SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier
[TRACE] 2020-08-12 19:18:22.508 [main] HQLQueryPlan - Find: SELECT DISTINCT resource FROM IssuerImpl resource WHERE resource.identifier = :identifier
[TRACE] 2020-08-12 19:18:22.513 [main] QueryParameters - Named parameters: {identifier=component[issuer,value]{value=1, issuer=1}}
[TRACE] 2020-08-12 19:18:22.513 [main] QueryParameters - Named parameters: {identifier=component[issuer,value]{value=1, issuer=1}}
[DEBUG] 2020-08-12 19:18:22.556 [main] SQL - select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?
[DEBUG] 2020-08-12 19:18:22.556 [main] SQL - select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?
[TRACE] 2020-08-12 19:18:22.570 [main] ResourceRegistryStandardImpl - Registering statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[null], [null]]]]
[TRACE] 2020-08-12 19:18:22.570 [main] ResourceRegistryStandardImpl - Registering statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[null], [null]]]]
[TRACE] 2020-08-12 19:18:22.570 [main] JdbcCoordinatorImpl - Registering last query statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[null], [null]]]]
[TRACE] 2020-08-12 19:18:22.570 [main] JdbcCoordinatorImpl - Registering last query statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[null], [null]]]]
[TRACE] 2020-08-12 19:18:22.579 [main] BasicBinder - binding parameter [1] as [BIGINT] - [1]
[TRACE] 2020-08-12 19:18:22.579 [main] BasicBinder - binding parameter [1] as [BIGINT] - [1]
[TRACE] 2020-08-12 19:18:22.586 [main] BasicBinder - binding parameter [2] as [NVARCHAR] - [1]
[TRACE] 2020-08-12 19:18:22.586 [main] BasicBinder - binding parameter [2] as [NVARCHAR] - [1]
[DEBUG] 2020-08-12 19:18:22.587 [main] Loader - Lock timeout [180000] requested but dialect reported to not support lock timeouts
[DEBUG] 2020-08-12 19:18:22.587 [main] Loader - Lock timeout [180000] requested but dialect reported to not support lock timeouts
[TRACE] 2020-08-12 19:18:22.607 [main] Loader - Bound [3] parameters total
[TRACE] 2020-08-12 19:18:22.607 [main] Loader - Bound [3] parameters total
[TRACE] 2020-08-12 19:18:22.613 [main] ResourceRegistryStandardImpl - Registering result set [HikariProxyResultSet@1946618260 wrapping org.hsqldb.jdbc.JDBCResultSet@7c816f46]
[TRACE] 2020-08-12 19:18:22.613 [main] ResourceRegistryStandardImpl - Registering result set [HikariProxyResultSet@1946618260 wrapping org.hsqldb.jdbc.JDBCResultSet@7c816f46]
[TRACE] 2020-08-12 19:18:22.615 [main] Loader - Processing result set
[TRACE] 2020-08-12 19:18:22.615 [main] Loader - Processing result set
[TRACE] 2020-08-12 19:18:22.615 [main] Loader - Done processing result set (0 rows)
[TRACE] 2020-08-12 19:18:22.615 [main] Loader - Done processing result set (0 rows)
[TRACE] 2020-08-12 19:18:22.618 [main] ResourceRegistryStandardImpl - Releasing statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[1], [1]]]]
[TRACE] 2020-08-12 19:18:22.618 [main] ResourceRegistryStandardImpl - Releasing statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[1], [1]]]]
[TRACE] 2020-08-12 19:18:22.618 [main] ResourceRegistryStandardImpl - Closing result set [HikariProxyResultSet@1946618260 wrapping org.hsqldb.jdbc.JDBCResultSet@7c816f46]
[TRACE] 2020-08-12 19:18:22.618 [main] ResourceRegistryStandardImpl - Closing result set [HikariProxyResultSet@1946618260 wrapping org.hsqldb.jdbc.JDBCResultSet@7c816f46]
[TRACE] 2020-08-12 19:18:22.618 [main] ResourceRegistryStandardImpl - Closing prepared statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[1], [1]]]]
[TRACE] 2020-08-12 19:18:22.618 [main] ResourceRegistryStandardImpl - Closing prepared statement [HikariProxyPreparedStatement@2111326114 wrapping org.hsqldb.jdbc.JDBCPreparedStatement@533a27f8[sql=[select distinct issuerimpl0_.ISSUER as issuer2_14_, issuerimpl0_.IDENTIFIER as identifi3_14_, issuerimpl0_.CREATED as created4_14_, issuerimpl0_.CREATOR_ISSUER as creator13_14_, issuerimpl0_.CREATOR_IDENTIFIER as creator14_14_, issuerimpl0_.ENTITY as entity1_14_, issuerimpl0_.EXPIRATION as expirati5_14_, issuerimpl0_.EXTERNAL_IDENTIFIER as external6_14_, issuerimpl0_.MIMETYPE as mimetype7_14_, issuerimpl0_.MODIFIED as modified8_14_, issuerimpl0_.MODIFIER_ISSUER as modifie15_14_, issuerimpl0_.MODIFIER_IDENTIFIER as modifie16_14_, issuerimpl0_.NAME as name9_14_, issuerimpl0_.URI as uri10_14_, issuerimpl0_.VERSION as version11_14_, issuerimpl0_1_.NAME as name1_10_, issuerimpl0_1_.PARENT_ISSUER as parent_i2_10_, issuerimpl0_1_.PARENT_IDENTIFIER as parent_i3_10_ from RESOURCES issuerimpl0_ inner join ISSUERS issuerimpl0_1_ on issuerimpl0_.ISSUER=issuerimpl0_1_.ISSUER and issuerimpl0_.IDENTIFIER=issuerimpl0_1_.IDENTIFIER where issuerimpl0_.ENTITY='IssuerImpl' and issuerimpl0_.ISSUER=? and issuerimpl0_.IDENTIFIER=?], parameters=[[1], [1]]]]
[TRACE] 2020-08-12 19:18:22.631 [main] JdbcCoordinatorImpl - Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] 2020-08-12 19:18:22.631 [main] JdbcCoordinatorImpl - Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] 2020-08-12 19:18:22.632 [main] StatefulPersistenceContext - Initializing non-lazy collections
[TRACE] 2020-08-12 19:18:22.632 [main] StatefulPersistenceContext - Initializing non-lazy collections
[TRACE] 2020-08-12 19:18:22.635 [main] AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
[TRACE] 2020-08-12 19:18:22.635 [main] AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
[TRACE] 2020-08-12 19:18:22.635 [main] ResourceRegistryStandardImpl - Releasing JDBC resources
[TRACE] 2020-08-12 19:18:22.635 [main] ResourceRegistryStandardImpl - Releasing JDBC resources
[DEBUG] 2020-08-12 19:18:22.635 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-08-12 19:18:22.635 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-08-12 19:18:22.635 [main] ProxyConnection - HikariPool-1 - Executed rollback on connection org.hsqldb.jdbc.JDBCConnection@3b78c683 due to dirty commit state on close().
[TRACE] 2020-08-12 19:18:22.635 [main] ResourceRegistryStandardImpl - Releasing JDBC resources
[TRACE] 2020-08-12 19:18:22.635 [main] ResourceRegistryStandardImpl - Releasing JDBC resources
[TRACE] 2020-08-12 19:18:22.636 [main] SessionImpl - Closing session [fc7594a6-fc64-4cbf-b684-a615704dcad8]
[TRACE] 2020-08-12 19:18:22.636 [main] SessionImpl - Closing session [fc7594a6-fc64-4cbf-b684-a615704dcad8]
[TRACE] 2020-08-12 19:18:22.636 [main] JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@46aea9f7]
[TRACE] 2020-08-12 19:18:22.636 [main] JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@46aea9f7]
[TRACE] 2020-08-12 19:18:22.637 [main] ResourceRegistryStandardImpl - Releasing JDBC resources
[TRACE] 2020-08-12 19:18:22.637 [main] ResourceRegistryStandardImpl - Releasing JDBC resources
[TRACE] 2020-08-12 19:18:22.637 [main] LogicalConnectionManagedImpl - Closing logical connection
[TRACE] 2020-08-12 19:18:22.637 [main] LogicalConnectionManagedImpl - Closing logical connection
[TRACE] 2020-08-12 19:18:22.637 [main] LogicalConnectionManagedImpl - Logical connection closed
[TRACE] 2020-08-12 19:18:22.637 [main] LogicalConnectionManagedImpl - Logical connection closed

com.gemalto.ics.usplatform.bip.ResourceNotFoundException: javax.persistence.NoResultException: No entity found for query

	at com.gemalto.ics.usplatform.bip.conversion.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:113)
	at com.gemalto.ics.usplatform.bip.conversion.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:19)
	at com.gemalto.ics.usplatform.bip.ResourceManagerImpl.find(ResourceManagerImpl.java:423)
	at com.gemalto.ics.usplatform.bip.IssuerTest.testFind(IssuerTest.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.Verifier$1.evaluate(Verifier.java:35)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: javax.persistence.NoResultException: No entity found for query
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1583)
	at com.gemalto.ics.usplatform.bip.ResourceManagerImpl.find(ResourceManagerImpl.java:406)
	... 27 more

