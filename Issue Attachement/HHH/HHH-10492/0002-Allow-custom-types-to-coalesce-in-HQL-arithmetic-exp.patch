From cccc8886e4c38fe6d1293b3df96b5d16d5283565 Mon Sep 17 00:00:00 2001
From: Peter SEVERIN <pse@infologic.fr>
Date: Wed, 17 Feb 2016 14:17:54 +0100
Subject: [PATCH 2/2] Allow custom types to coalesce in HQL arithmetic
 expressions (HHH-10492)

---
 .../ast/tree/BinaryArithmeticOperatorNode.java         |  7 +++++++
 .../main/java/org/hibernate/type/CoalescingType.java   | 18 ++++++++++++++++++
 2 files changed, 25 insertions(+)
 create mode 100644 hibernate-core/src/main/java/org/hibernate/type/CoalescingType.java

diff --git a/hibernate-core/src/main/java/org/hibernate/hql/internal/ast/tree/BinaryArithmeticOperatorNode.java b/hibernate-core/src/main/java/org/hibernate/hql/internal/ast/tree/BinaryArithmeticOperatorNode.java
index 493ced9..44d7f9b 100644
--- a/hibernate-core/src/main/java/org/hibernate/hql/internal/ast/tree/BinaryArithmeticOperatorNode.java
+++ b/hibernate-core/src/main/java/org/hibernate/hql/internal/ast/tree/BinaryArithmeticOperatorNode.java
@@ -8,6 +8,7 @@ package org.hibernate.hql.internal.ast.tree;
 
 import org.hibernate.hql.internal.antlr.HqlSqlTokenTypes;
 import org.hibernate.hql.internal.ast.util.ColumnHelper;
+import org.hibernate.type.CoalescingType;
 import org.hibernate.type.StandardBasicTypes;
 import org.hibernate.type.Type;
 
@@ -117,6 +118,12 @@ public class BinaryArithmeticOperatorNode extends AbstractSelectExpression
 					return lhType;
 				}
 				else {
+				    if( lhType instanceof CoalescingType ) {
+				        return ((CoalescingType) lhType).coalesce(rhType);
+				    }
+				    if( rhType instanceof CoalescingType ) {
+				        return ((CoalescingType) rhType).coalesce(lhType);
+				    }
 					if ( lhType == StandardBasicTypes.DOUBLE || rhType == StandardBasicTypes.DOUBLE ) {
 						return StandardBasicTypes.DOUBLE;
 					}
diff --git a/hibernate-core/src/main/java/org/hibernate/type/CoalescingType.java b/hibernate-core/src/main/java/org/hibernate/type/CoalescingType.java
new file mode 100644
index 0000000..2a2c59a
--- /dev/null
+++ b/hibernate-core/src/main/java/org/hibernate/type/CoalescingType.java
@@ -0,0 +1,18 @@
+package org.hibernate.type;
+
+/**
+ * An interface that overcomes the limitation of custom types described in HHH-10492
+ * (https://hibernate.atlassian.net/browse/HHH-10492)
+ * <p>
+ * This interface is meant to be implemented by custom numerical types that can be used in HQL
+ * arythmetic expressions.
+ * 
+ * @author Peter Severin (pse@infologic.fr)
+ */
+public interface CoalescingType extends Type
+{
+    /**
+     * Coalesces this type with some other type
+     */
+    public Type coalesce(Type other);
+}
-- 
2.5.3.windows.1

