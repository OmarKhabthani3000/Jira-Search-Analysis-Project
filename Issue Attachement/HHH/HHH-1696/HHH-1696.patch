Index: src/org/hibernate/criterion/DetachedCriteria.java
===================================================================
RCS file: /cvs/hibernate-3.1/src/org/hibernate/criterion/DetachedCriteria.java,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 DetachedCriteria.java
--- src/org/hibernate/criterion/DetachedCriteria.java	13 Jul 2006 21:10:44 -0000	1.1.1.1
+++ src/org/hibernate/criterion/DetachedCriteria.java	13 Jul 2006 21:45:30 -0000
@@ -3,10 +3,7 @@
 
 import java.io.Serializable;
 
-import org.hibernate.Criteria;
-import org.hibernate.FetchMode;
-import org.hibernate.HibernateException;
-import org.hibernate.Session;
+import org.hibernate.*;
 import org.hibernate.engine.SessionImplementor;
 import org.hibernate.impl.CriteriaImpl;
 import org.hibernate.transform.ResultTransformer;
@@ -121,4 +118,32 @@
 	CriteriaImpl getCriteriaImpl() {
 		return impl;
 	}
+
+    public DetachedCriteria createAlias(String associationPath, String alias, int joinType) throws HibernateException {
+        criteria.createAlias(associationPath, alias, joinType);
+        return this;
+    }
+
+    public DetachedCriteria createCriteria(String associationPath, int joinType) throws HibernateException {
+        return new DetachedCriteria(impl, criteria.createCriteria(associationPath, joinType));
+    }
+
+    public DetachedCriteria createCriteria(String associationPath, String alias, int joinType) throws HibernateException {
+        return new DetachedCriteria(impl, criteria.createCriteria(associationPath, alias, joinType));
+    }
+
+    public DetachedCriteria setComment(String comment) {
+        criteria.setComment(comment);
+        return this;
+    }
+
+    public DetachedCriteria setLockMode(LockMode lockMode) {
+        criteria.setLockMode(lockMode);
+        return this;
+    }
+
+    public DetachedCriteria setLockMode(String alias, LockMode lockMode) {
+        criteria.setLockMode(alias, lockMode);
+        return this;
+    }
 }
