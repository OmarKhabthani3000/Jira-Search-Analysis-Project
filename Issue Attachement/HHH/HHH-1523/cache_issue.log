org.hibernate.cfg.Environment: Hibernate 3.0.5
org.hibernate.cfg.Environment: hibernate.properties not found
org.hibernate.cfg.Environment: using CGLIB reflection optimizer
org.hibernate.cfg.Environment: using JDK 1.4 java.sql.Timestamp handling
org.hibernate.cfg.Configuration: configuring from resource: /hibernate.cfg.xml
org.hibernate.cfg.Configuration: Configuration resource: /hibernate.cfg.xml
org.hibernate.util.DTDEntityResolver: trying to locate http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd in classpath under org/hibernate/
org.hibernate.util.DTDEntityResolver: found http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd in classpath
org.hibernate.cfg.Configuration: connection.driver_class=org.hsqldb.jdbcDriver
org.hibernate.cfg.Configuration: connection.url=jdbc:hsqldb:mem:refAppDb
org.hibernate.cfg.Configuration: connection.username=sa
org.hibernate.cfg.Configuration: connection.password=
org.hibernate.cfg.Configuration: show_sql=true
org.hibernate.cfg.Configuration: dialect=org.hibernate.dialect.HSQLDialect
org.hibernate.cfg.Configuration: query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory
org.hibernate.cfg.Configuration: cache.provider_class=org.hibernate.cache.EhCacheProvider
org.hibernate.cfg.Configuration: cache.use_query_cache=true
org.hibernate.cfg.Configuration: jdbc.batch_size=30
org.hibernate.cfg.Configuration: hbm2ddl.auto=create
org.hibernate.cfg.Configuration: null<-org.dom4j.tree.DefaultAttribute@1b9ce4b [Attribute: name resource value "tavant/platform/test/domain/Department.hbm.xml"]
org.hibernate.cfg.Configuration: Mapping resource: tavant/platform/test/domain/Department.hbm.xml
org.hibernate.util.DTDEntityResolver: trying to locate http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd in classpath under org/hibernate/
org.hibernate.util.DTDEntityResolver: found http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd in classpath
org.hibernate.cfg.HbmBinder: Mapping class: tavant.platform.test.domain.Department -> CACHE_ISSUE_DEP
org.hibernate.cfg.HbmBinder: Mapped property: id -> DEPARTMENT_ID
org.hibernate.cfg.HbmBinder: Mapped property: name -> NAME
org.hibernate.cfg.HbmBinder: Mapped property: employees
org.hibernate.cfg.Configuration: null<-org.dom4j.tree.DefaultAttribute@2a15cd [Attribute: name resource value "tavant/platform/test/domain/Employee.hbm.xml"]
org.hibernate.cfg.Configuration: Mapping resource: tavant/platform/test/domain/Employee.hbm.xml
org.hibernate.util.DTDEntityResolver: trying to locate http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd in classpath under org/hibernate/
org.hibernate.util.DTDEntityResolver: found http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd in classpath
org.hibernate.cfg.HbmBinder: Mapping class: tavant.platform.test.domain.Employee -> CACHE_ISSUE_EMP
org.hibernate.cfg.HbmBinder: Mapped property: id -> EMP_ID
org.hibernate.cfg.HbmBinder: Mapped property: name -> EMP_NAME
org.hibernate.cfg.HbmBinder: Mapped property: department -> DEPARTMENT_ID
org.hibernate.cfg.Configuration: Configured SessionFactory: null
org.hibernate.cfg.Configuration: properties: {java.vendor=Sun Microsystems Inc., show_sql=true, hibernate.connection.url=jdbc:hsqldb:mem:refAppDb, hbm2ddl.auto=create, os.name=Windows 2000, sun.boot.class.path=C:\j2sdk1.4.2_02\jre\lib\rt.jar;C:\j2sdk1.4.2_02\jre\lib\i18n.jar;C:\j2sdk1.4.2_02\jre\lib\sunrsasign.jar;C:\j2sdk1.4.2_02\jre\lib\jsse.jar;C:\j2sdk1.4.2_02\jre\lib\jce.jar;C:\j2sdk1.4.2_02\jre\lib\charsets.jar;C:\j2sdk1.4.2_02\jre\classes, sun.java2d.fontpath=, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.4.2_02-b03, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, user.name=vikas.sasidharan, connection.driver_class=org.hsqldb.jdbcDriver, user.language=en, sun.boot.library.path=C:\j2sdk1.4.2_02\jre\bin, dialect=org.hibernate.dialect.HSQLDialect, java.version=1.4.2_02, user.timezone=, jdbc.batch_size=30, sun.arch.data.model=32, java.endorsed.dirs=C:\j2sdk1.4.2_02\jre\lib\endorsed, sun.cpu.isalist=pentium i486 i386, file.encoding.pkg=sun.io, file.separator=\, cache.use_query_cache=true, java.specification.name=Java Platform API Specification, hibernate.cglib.use_reflection_optimizer=true, java.class.version=48.0, user.country=US, connection.url=jdbc:hsqldb:mem:refAppDb, java.home=C:\j2sdk1.4.2_02\jre, java.vm.info=mixed mode, os.version=5.0, path.separator=;, connection.password=, java.vm.version=1.4.2_02-b03, java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory, hibernate.connection.password=, user.variant=, hibernate.jdbc.batch_size=30, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=sa, user.home=C:\Documents and Settings\vikas.sasidharan, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=C:\j2sdk1.4.2_02\bin;.;C:\WINNT\system32;C:\WINNT;d:\program files\imagemagick-6.2.5-q16;C:\j2sdk1.4.2_02\bin;D:\oracle\ora81\bin;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32\Wbem;C:\Program Files\Perforce;D:\Vikas\JavaStuff\Libraries\Ant\1.6.5\bin;C:\bea\weblogic81\server\bin;D:\PROGRA~1\GraphViz\Graphviz\bin;D:\PROGRA~1\GraphViz\Graphviz\bin\tools;D:\Program Files\TortoiseCVS;D:\oracle\ora81\bin;C:\Program Files\Oracle\jre\1.3.1\bin;D:\maven-2.0\bin;d:\Program Files\Common Files\2.0\bin;C:\Program Files\QuickTime\QTSystem\;, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, java.class.path=D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\bin;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\antlr-2.7.5H3.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\asm.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\asm-attrs.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\cglib-2.1.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\commons-beanutils.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\commons-collections.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\commons-logging.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\dom4j-1.6.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\ehcache-1.1.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\hibernate3.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\hsqldb.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\jta.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\log4j-1.2.9.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-aop.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-beans.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-context.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-core.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-dao.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-hibernate.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-jdbc.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-orm.jar, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 4, hibernate.cache.use_query_cache=true, java.io.tmpdir=C:\DOCUME~1\VIKAS~1.SAS\LOCALS~1\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory, hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\j2sdk1.4.2_02\jre\lib\ext, user.dir=D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, cache.provider_class=org.hibernate.cache.EhCacheProvider, file.encoding=Cp1252, java.specification.version=1.4, hibernate.show_sql=true}
org.hibernate.cfg.Configuration: Preparing to build session factory with filters : {}
org.hibernate.cfg.Configuration: processing extends queue
org.hibernate.cfg.Configuration: processing collection mappings
org.hibernate.cfg.HbmBinder: Second pass for collection: tavant.platform.test.domain.Department.employees
org.hibernate.cfg.HbmBinder: Mapping collection: tavant.platform.test.domain.Department.employees -> CACHE_ISSUE_EMP
org.hibernate.cfg.HbmBinder: Mapped collection key: DEPARTMENT_ID, one-to-many: tavant.platform.test.domain.Employee
org.hibernate.cfg.Configuration: processing association property references
org.hibernate.cfg.Configuration: processing foreign key constraints
org.hibernate.cfg.Configuration: resolving reference to class: tavant.platform.test.domain.Department
org.hibernate.connection.DriverManagerConnectionProvider: Using Hibernate built-in connection pool (not for production use!)
org.hibernate.connection.DriverManagerConnectionProvider: Hibernate connection pool size: 20
org.hibernate.connection.DriverManagerConnectionProvider: autocommit mode: false
org.hibernate.connection.DriverManagerConnectionProvider: using driver: org.hsqldb.jdbcDriver at URL: jdbc:hsqldb:mem:refAppDb
org.hibernate.connection.DriverManagerConnectionProvider: connection properties: {user=sa, password=}
org.hibernate.connection.DriverManagerConnectionProvider: total checked-out connections: 0
org.hibernate.connection.DriverManagerConnectionProvider: opening new JDBC connection
org.hibernate.connection.DriverManagerConnectionProvider: created connection to: jdbc:hsqldb:mem:refAppDb, Isolation Level: 1
org.hibernate.cfg.SettingsFactory: RDBMS: HSQL Database Engine, version: 1.7.2
org.hibernate.cfg.SettingsFactory: JDBC driver: HSQL Database Engine Driver, version: 1.7.2
org.hibernate.connection.DriverManagerConnectionProvider: returning connection to pool, pool size: 1
org.hibernate.dialect.Dialect: Using dialect: org.hibernate.dialect.HSQLDialect
org.hibernate.transaction.TransactionFactoryFactory: Using default transaction strategy (direct JDBC transactions)
org.hibernate.transaction.TransactionManagerLookupFactory: No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
org.hibernate.cfg.SettingsFactory: Automatic flush during beforeCompletion(): disabled
org.hibernate.cfg.SettingsFactory: Automatic session close at end of transaction: disabled
org.hibernate.cfg.SettingsFactory: JDBC batch size: 30
org.hibernate.cfg.SettingsFactory: JDBC batch updates for versioned data: disabled
org.hibernate.cfg.SettingsFactory: Scrollable result sets: enabled
org.hibernate.cfg.SettingsFactory: Wrap result sets: disabled
org.hibernate.cfg.SettingsFactory: JDBC3 getGeneratedKeys(): disabled
org.hibernate.cfg.SettingsFactory: Connection release mode: null
org.hibernate.cfg.SettingsFactory: Default batch fetch size: 1
org.hibernate.cfg.SettingsFactory: Generate SQL with comments: disabled
org.hibernate.cfg.SettingsFactory: Order SQL updates by primary key: disabled
org.hibernate.cfg.SettingsFactory: Query translator: org.hibernate.hql.classic.ClassicQueryTranslatorFactory
org.hibernate.cfg.SettingsFactory: Query language substitutions: {}
org.hibernate.cfg.SettingsFactory: Second-level cache: enabled
org.hibernate.cfg.SettingsFactory: Query cache: enabled
org.hibernate.cfg.SettingsFactory: Cache provider: org.hibernate.cache.EhCacheProvider
org.hibernate.cfg.SettingsFactory: Optimize cache for minimal puts: disabled
org.hibernate.cfg.SettingsFactory: Structured second-level cache entries: disabled
org.hibernate.cfg.SettingsFactory: Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
org.hibernate.exception.SQLExceptionConverterFactory: Using dialect defined converter
org.hibernate.cfg.SettingsFactory: Echoing all SQL to stdout
org.hibernate.cfg.SettingsFactory: Statistics: disabled
org.hibernate.cfg.SettingsFactory: Deleted entity synthetic identifier rollback: disabled
org.hibernate.cfg.SettingsFactory: Default entity-mode: pojo
org.hibernate.impl.SessionFactoryImpl: building session factory
org.hibernate.impl.SessionFactoryImpl: Session factory constructed with filter configurations : {}
org.hibernate.impl.SessionFactoryImpl: instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., show_sql=true, hibernate.connection.url=jdbc:hsqldb:mem:refAppDb, hbm2ddl.auto=create, os.name=Windows 2000, sun.boot.class.path=C:\j2sdk1.4.2_02\jre\lib\rt.jar;C:\j2sdk1.4.2_02\jre\lib\i18n.jar;C:\j2sdk1.4.2_02\jre\lib\sunrsasign.jar;C:\j2sdk1.4.2_02\jre\lib\jsse.jar;C:\j2sdk1.4.2_02\jre\lib\jce.jar;C:\j2sdk1.4.2_02\jre\lib\charsets.jar;C:\j2sdk1.4.2_02\jre\classes, sun.java2d.fontpath=, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.4.2_02-b03, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, user.name=vikas.sasidharan, connection.driver_class=org.hsqldb.jdbcDriver, user.language=en, sun.boot.library.path=C:\j2sdk1.4.2_02\jre\bin, dialect=org.hibernate.dialect.HSQLDialect, java.version=1.4.2_02, user.timezone=, jdbc.batch_size=30, sun.arch.data.model=32, java.endorsed.dirs=C:\j2sdk1.4.2_02\jre\lib\endorsed, sun.cpu.isalist=pentium i486 i386, file.encoding.pkg=sun.io, file.separator=\, cache.use_query_cache=true, java.specification.name=Java Platform API Specification, hibernate.cglib.use_reflection_optimizer=true, java.class.version=48.0, user.country=US, connection.url=jdbc:hsqldb:mem:refAppDb, java.home=C:\j2sdk1.4.2_02\jre, java.vm.info=mixed mode, os.version=5.0, path.separator=;, connection.password=, java.vm.version=1.4.2_02-b03, java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory, hibernate.connection.password=, user.variant=, hibernate.jdbc.batch_size=30, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=sa, user.home=C:\Documents and Settings\vikas.sasidharan, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create, java.library.path=C:\j2sdk1.4.2_02\bin;.;C:\WINNT\system32;C:\WINNT;d:\program files\imagemagick-6.2.5-q16;C:\j2sdk1.4.2_02\bin;D:\oracle\ora81\bin;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32\Wbem;C:\Program Files\Perforce;D:\Vikas\JavaStuff\Libraries\Ant\1.6.5\bin;C:\bea\weblogic81\server\bin;D:\PROGRA~1\GraphViz\Graphviz\bin;D:\PROGRA~1\GraphViz\Graphviz\bin\tools;D:\Program Files\TortoiseCVS;D:\oracle\ora81\bin;C:\Program Files\Oracle\jre\1.3.1\bin;D:\maven-2.0\bin;d:\Program Files\Common Files\2.0\bin;C:\Program Files\QuickTime\QTSystem\;, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, connection.username=sa, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition, java.class.path=D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\bin;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\antlr-2.7.5H3.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\asm.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\asm-attrs.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\cglib-2.1.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\commons-beanutils.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\commons-collections.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\commons-logging.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\dom4j-1.6.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\ehcache-1.1.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\hibernate3.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\hsqldb.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\jta.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\log4j-1.2.9.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-aop.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-beans.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-context.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-core.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-dao.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-hibernate.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-jdbc.jar;D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue\lib\spring-orm.jar, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=Service Pack 4, hibernate.cache.use_query_cache=true, java.io.tmpdir=C:\DOCUME~1\VIKAS~1.SAS\LOCALS~1\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory, hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory, os.arch=x86, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\j2sdk1.4.2_02\jre\lib\ext, user.dir=D:\Vikas\Projects\TheOthers\SandBox\QueryCacheIssue, line.separator=
, java.vm.name=Java HotSpot(TM) Client VM, cache.provider_class=org.hibernate.cache.EhCacheProvider, file.encoding=Cp1252, java.specification.version=1.4, hibernate.show_sql=true}
net.sf.ehcache.CacheManager: Creating new CacheManager with default config
net.sf.ehcache.CacheManager: Configuring ehcache from classpath.
net.sf.ehcache.config.Configurator: No configuration found. Configuring ehcache from ehcache-failsafe.xml found in the classpath: jar:file:/D:/Vikas/Projects/TheOthers/SandBox/QueryCacheIssue/lib/ehcache-1.1.jar!/ehcache-failsafe.xml
net.sf.ehcache.config.Configuration$DiskStore: Disk Store Path: C:\DOCUME~1\VIKAS~1.SAS\LOCALS~1\Temp\
org.hibernate.cache.CacheFactory: instantiating cache region: tavant.platform.test.domain.Department usage strategy: read-write
org.hibernate.cache.EhCacheProvider: Could not find configuration [tavant.platform.test.domain.Department]; using defaults.
net.sf.ehcache.store.DiskStore: Deleting data file tavant.platform.test.domain.Department.data
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.Department Cache: Using SpoolingLinkedHashMap implementation
net.sf.ehcache.store.MemoryStore: initialized MemoryStore for tavant.platform.test.domain.Department
net.sf.ehcache.Cache: Initialised cache: tavant.platform.test.domain.Department
org.hibernate.cache.EhCacheProvider: started EHCache region: tavant.platform.test.domain.Department
org.hibernate.persister.entity.BasicEntityPersister: Static SQL for entity: tavant.platform.test.domain.Department
org.hibernate.persister.entity.BasicEntityPersister:  Version select: select DEPARTMENT_ID from CACHE_ISSUE_DEP where DEPARTMENT_ID =?
org.hibernate.persister.entity.BasicEntityPersister:  Snapshot select: select department_.DEPARTMENT_ID from CACHE_ISSUE_DEP department_ where department_.DEPARTMENT_ID=?
org.hibernate.persister.entity.BasicEntityPersister:  Insert 0: insert into CACHE_ISSUE_DEP (NAME, DEPARTMENT_ID) values (?, ?)
org.hibernate.persister.entity.BasicEntityPersister:  Update 0: null
org.hibernate.persister.entity.BasicEntityPersister:  Delete 0: delete from CACHE_ISSUE_DEP where DEPARTMENT_ID=?
org.hibernate.cache.CacheFactory: instantiating cache region: tavant.platform.test.domain.Employee usage strategy: read-write
org.hibernate.cache.EhCacheProvider: Could not find configuration [tavant.platform.test.domain.Employee]; using defaults.
net.sf.ehcache.store.DiskStore: Deleting data file tavant.platform.test.domain.Employee.data
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.Employee Cache: Using SpoolingLinkedHashMap implementation
net.sf.ehcache.store.MemoryStore: initialized MemoryStore for tavant.platform.test.domain.Employee
net.sf.ehcache.Cache: Initialised cache: tavant.platform.test.domain.Employee
org.hibernate.cache.EhCacheProvider: started EHCache region: tavant.platform.test.domain.Employee
org.hibernate.persister.entity.BasicEntityPersister: Static SQL for entity: tavant.platform.test.domain.Employee
org.hibernate.persister.entity.BasicEntityPersister:  Version select: select EMP_ID from CACHE_ISSUE_EMP where EMP_ID =?
org.hibernate.persister.entity.BasicEntityPersister:  Snapshot select: select employee_.EMP_ID, employee_.EMP_NAME as EMP2_1_, employee_.DEPARTMENT_ID as DEPARTMENT3_1_ from CACHE_ISSUE_EMP employee_ where employee_.EMP_ID=?
org.hibernate.persister.entity.BasicEntityPersister:  Insert 0: insert into CACHE_ISSUE_EMP (EMP_NAME, DEPARTMENT_ID, EMP_ID) values (?, ?, ?)
org.hibernate.persister.entity.BasicEntityPersister:  Update 0: update CACHE_ISSUE_EMP set EMP_NAME=?, DEPARTMENT_ID=? where EMP_ID=?
org.hibernate.persister.entity.BasicEntityPersister:  Delete 0: delete from CACHE_ISSUE_EMP where EMP_ID=?
org.hibernate.cache.CacheFactory: instantiating cache region: tavant.platform.test.domain.Department.employees usage strategy: read-write
org.hibernate.cache.EhCacheProvider: Could not find configuration [tavant.platform.test.domain.Department.employees]; using defaults.
net.sf.ehcache.store.DiskStore: Deleting data file tavant.platform.test.domain.Department.employees.data
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.Department.employees Cache: Using SpoolingLinkedHashMap implementation
net.sf.ehcache.store.MemoryStore: initialized MemoryStore for tavant.platform.test.domain.Department.employees
net.sf.ehcache.Cache: Initialised cache: tavant.platform.test.domain.Department.employees
org.hibernate.cache.EhCacheProvider: started EHCache region: tavant.platform.test.domain.Department.employees
org.hibernate.persister.collection.AbstractCollectionPersister: Static SQL for collection: tavant.platform.test.domain.Department.employees
org.hibernate.persister.collection.AbstractCollectionPersister:  Row insert: update CACHE_ISSUE_EMP set DEPARTMENT_ID=? where EMP_ID=?
org.hibernate.persister.collection.AbstractCollectionPersister:  Row delete: update CACHE_ISSUE_EMP set DEPARTMENT_ID=null where DEPARTMENT_ID=? and EMP_ID=?
org.hibernate.persister.collection.AbstractCollectionPersister:  One-shot delete: update CACHE_ISSUE_EMP set DEPARTMENT_ID=null where DEPARTMENT_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Department: select department0_.DEPARTMENT_ID as DEPARTMENT1_0_, department0_.NAME as NAME0_0_ from CACHE_ISSUE_DEP department0_ where department0_.DEPARTMENT_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Department: select department0_.DEPARTMENT_ID as DEPARTMENT1_0_, department0_.NAME as NAME0_0_ from CACHE_ISSUE_DEP department0_ where department0_.DEPARTMENT_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Department: select department0_.DEPARTMENT_ID as DEPARTMENT1_0_, department0_.NAME as NAME0_0_ from CACHE_ISSUE_DEP department0_ where department0_.DEPARTMENT_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Department: select department0_.DEPARTMENT_ID as DEPARTMENT1_0_, department0_.NAME as NAME0_0_ from CACHE_ISSUE_DEP department0_ where department0_.DEPARTMENT_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Employee: select employee0_.EMP_ID as EMP1_0_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_ from CACHE_ISSUE_EMP employee0_ where employee0_.EMP_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Employee: select employee0_.EMP_ID as EMP1_0_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_ from CACHE_ISSUE_EMP employee0_ where employee0_.EMP_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Employee: select employee0_.EMP_ID as EMP1_0_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_ from CACHE_ISSUE_EMP employee0_ where employee0_.EMP_ID=?
org.hibernate.loader.entity.EntityLoader: Static select for entity tavant.platform.test.domain.Employee: select employee0_.EMP_ID as EMP1_0_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_ from CACHE_ISSUE_EMP employee0_ where employee0_.EMP_ID=?
org.hibernate.loader.collection.OneToManyLoader: Static select for one-to-many tavant.platform.test.domain.Department.employees: select employees0_.DEPARTMENT_ID as DEPARTMENT3_1_, employees0_.EMP_ID as EMP1_1_, employees0_.EMP_ID as EMP1_0_, employees0_.EMP_NAME as EMP2_1_0_, employees0_.DEPARTMENT_ID as DEPARTMENT3_1_0_ from CACHE_ISSUE_EMP employees0_ where employees0_.DEPARTMENT_ID=?
org.hibernate.impl.SessionFactoryObjectFactory: initializing class SessionFactoryObjectFactory
org.hibernate.impl.SessionFactoryObjectFactory: registered: 402809d2099c09e601099c09e8e20000 (unnamed)
org.hibernate.impl.SessionFactoryObjectFactory: Not binding factory to JNDI, no JNDI name configured
org.hibernate.impl.SessionFactoryImpl: instantiated session factory
org.hibernate.dialect.Dialect: Using dialect: org.hibernate.dialect.HSQLDialect
org.hibernate.cfg.Configuration: processing extends queue
org.hibernate.cfg.Configuration: processing collection mappings
org.hibernate.cfg.Configuration: processing association property references
org.hibernate.cfg.Configuration: processing foreign key constraints
org.hibernate.cfg.Configuration: resolving reference to class: tavant.platform.test.domain.Department
org.hibernate.cfg.Configuration: processing extends queue
org.hibernate.cfg.Configuration: processing collection mappings
org.hibernate.cfg.Configuration: processing association property references
org.hibernate.cfg.Configuration: processing foreign key constraints
org.hibernate.cfg.Configuration: resolving reference to class: tavant.platform.test.domain.Department
org.hibernate.tool.hbm2ddl.SchemaExport: Running hbm2ddl schema export
org.hibernate.tool.hbm2ddl.SchemaExport: exporting generated schema to database
org.hibernate.connection.DriverManagerConnectionProvider: Using Hibernate built-in connection pool (not for production use!)
org.hibernate.connection.DriverManagerConnectionProvider: Hibernate connection pool size: 20
org.hibernate.connection.DriverManagerConnectionProvider: autocommit mode: false
org.hibernate.connection.DriverManagerConnectionProvider: using driver: org.hsqldb.jdbcDriver at URL: jdbc:hsqldb:mem:refAppDb
org.hibernate.connection.DriverManagerConnectionProvider: connection properties: {user=sa, password=}
org.hibernate.connection.DriverManagerConnectionProvider: total checked-out connections: 0
org.hibernate.connection.DriverManagerConnectionProvider: opening new JDBC connection
org.hibernate.connection.DriverManagerConnectionProvider: created connection to: jdbc:hsqldb:mem:refAppDb, Isolation Level: 1
org.hibernate.tool.hbm2ddl.SchemaExport: alter table CACHE_ISSUE_EMP drop constraint FKEE1247859E9FC133
org.hibernate.tool.hbm2ddl.SchemaExport: Unsuccessful: alter table CACHE_ISSUE_EMP drop constraint FKEE1247859E9FC133
org.hibernate.tool.hbm2ddl.SchemaExport: Table not found: CACHE_ISSUE_EMP in statement [alter table CACHE_ISSUE_EMP]
org.hibernate.tool.hbm2ddl.SchemaExport: drop table CACHE_ISSUE_DEP if exists
org.hibernate.tool.hbm2ddl.SchemaExport: drop table CACHE_ISSUE_EMP if exists
org.hibernate.tool.hbm2ddl.SchemaExport: create table CACHE_ISSUE_DEP (
    DEPARTMENT_ID bigint not null,
    NAME varchar(255),
    primary key (DEPARTMENT_ID)
)
org.hibernate.tool.hbm2ddl.SchemaExport: create table CACHE_ISSUE_EMP (
    EMP_ID bigint not null,
    EMP_NAME varchar(255),
    DEPARTMENT_ID bigint,
    primary key (EMP_ID)
)
org.hibernate.tool.hbm2ddl.SchemaExport: alter table CACHE_ISSUE_EMP 
    add constraint FKEE1247859E9FC133 
    foreign key (DEPARTMENT_ID) 
    references CACHE_ISSUE_DEP
org.hibernate.tool.hbm2ddl.SchemaExport: schema export complete
org.hibernate.connection.DriverManagerConnectionProvider: returning connection to pool, pool size: 1
org.hibernate.connection.DriverManagerConnectionProvider: cleaning up connection pool: jdbc:hsqldb:mem:refAppDb
org.hibernate.cache.UpdateTimestampsCache: starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
org.hibernate.cache.EhCacheProvider: Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
net.sf.ehcache.store.DiskStore: Deleting data file org.hibernate.cache.UpdateTimestampsCache.data
net.sf.ehcache.store.MemoryStore: org.hibernate.cache.UpdateTimestampsCache Cache: Using SpoolingLinkedHashMap implementation
net.sf.ehcache.store.MemoryStore: initialized MemoryStore for org.hibernate.cache.UpdateTimestampsCache
net.sf.ehcache.Cache: Initialised cache: org.hibernate.cache.UpdateTimestampsCache
org.hibernate.cache.EhCacheProvider: started EHCache region: org.hibernate.cache.UpdateTimestampsCache
org.hibernate.cache.StandardQueryCache: starting query cache at region: org.hibernate.cache.StandardQueryCache
org.hibernate.cache.EhCacheProvider: Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
net.sf.ehcache.store.DiskStore: Deleting data file org.hibernate.cache.StandardQueryCache.data
net.sf.ehcache.store.MemoryStore: org.hibernate.cache.StandardQueryCache Cache: Using SpoolingLinkedHashMap implementation
net.sf.ehcache.store.MemoryStore: initialized MemoryStore for org.hibernate.cache.StandardQueryCache
net.sf.ehcache.Cache: Initialised cache: org.hibernate.cache.StandardQueryCache
org.hibernate.cache.EhCacheProvider: started EHCache region: org.hibernate.cache.StandardQueryCache
org.hibernate.impl.SessionFactoryImpl: Checking 0 named queries
tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled: Starting Test Case
tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled: Before insert...
org.hibernate.connection.DriverManagerConnectionProvider: cleaning up connection pool: jdbc:hsqldb:mem:refAppDb
org.hibernate.impl.SessionImpl: opened session at timestamp: 4672652200448000
org.hibernate.transaction.JDBCTransaction: begin
org.hibernate.jdbc.ConnectionManager: opening JDBC connection
org.hibernate.connection.DriverManagerConnectionProvider: total checked-out connections: 0
org.hibernate.connection.DriverManagerConnectionProvider: using pooled JDBC connection, pool size: 0
org.hibernate.transaction.JDBCTransaction: current autocommit status: false
org.hibernate.event.def.DefaultSaveOrUpdateEventListener: saving transient instance
org.hibernate.id.IncrementGenerator: fetching initial value: select max(DEPARTMENT_ID) from CACHE_ISSUE_DEP
org.hibernate.SQL: select max(DEPARTMENT_ID) from CACHE_ISSUE_DEP
org.hibernate.id.IncrementGenerator: first free id: 1
org.hibernate.event.def.AbstractSaveEventListener: generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
org.hibernate.event.def.AbstractSaveEventListener: saving [tavant.platform.test.domain.Department#1]
org.hibernate.engine.Cascades: processing cascade ACTION_SAVE_UPDATE for: tavant.platform.test.domain.Department
org.hibernate.engine.Cascades: done processing cascade ACTION_SAVE_UPDATE for: tavant.platform.test.domain.Department
org.hibernate.event.def.WrapVisitor: Wrapped collection in role: tavant.platform.test.domain.Department.employees
org.hibernate.engine.Cascades: processing cascade ACTION_SAVE_UPDATE for: tavant.platform.test.domain.Department
org.hibernate.engine.Cascades: cascade ACTION_SAVE_UPDATE for collection: tavant.platform.test.domain.Department.employees
org.hibernate.engine.Cascades: cascading to saveOrUpdate: tavant.platform.test.domain.Employee
org.hibernate.event.def.AbstractSaveEventListener: transient instance of: tavant.platform.test.domain.Employee
org.hibernate.event.def.DefaultSaveOrUpdateEventListener: saving transient instance
org.hibernate.id.IncrementGenerator: fetching initial value: select max(EMP_ID) from CACHE_ISSUE_EMP
org.hibernate.SQL: select max(EMP_ID) from CACHE_ISSUE_EMP
org.hibernate.id.IncrementGenerator: first free id: 1
org.hibernate.event.def.AbstractSaveEventListener: generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
org.hibernate.event.def.AbstractSaveEventListener: saving [tavant.platform.test.domain.Employee#1]
org.hibernate.engine.Cascades: done cascade ACTION_SAVE_UPDATE for collection: tavant.platform.test.domain.Department.employees
org.hibernate.engine.Cascades: done processing cascade ACTION_SAVE_UPDATE for: tavant.platform.test.domain.Department
org.hibernate.transaction.JDBCTransaction: commit
org.hibernate.impl.SessionImpl: automatically flushing session
org.hibernate.event.def.AbstractFlushingEventListener: flushing session
org.hibernate.event.def.AbstractFlushingEventListener: processing flush-time cascades
org.hibernate.engine.Cascades: processing cascade ACTION_SAVE_UPDATE for: tavant.platform.test.domain.Department
org.hibernate.engine.Cascades: cascade ACTION_SAVE_UPDATE for collection: tavant.platform.test.domain.Department.employees
org.hibernate.engine.Cascades: cascading to saveOrUpdate: tavant.platform.test.domain.Employee
org.hibernate.event.def.AbstractSaveEventListener: persistent instance of: tavant.platform.test.domain.Employee
org.hibernate.event.def.DefaultSaveOrUpdateEventListener: ignoring persistent instance
org.hibernate.event.def.DefaultSaveOrUpdateEventListener: object already associated with session: [tavant.platform.test.domain.Employee#1]
org.hibernate.engine.Cascades: done cascade ACTION_SAVE_UPDATE for collection: tavant.platform.test.domain.Department.employees
org.hibernate.engine.Cascades: done processing cascade ACTION_SAVE_UPDATE for: tavant.platform.test.domain.Department
org.hibernate.event.def.AbstractFlushingEventListener: dirty checking collections
org.hibernate.event.def.AbstractFlushingEventListener: Flushing entities and processing referenced collections
org.hibernate.engine.Collections: Collection found: [tavant.platform.test.domain.Department.employees#1], was: [<unreferenced>] (initialized)
org.hibernate.event.def.AbstractFlushingEventListener: Processing unreferenced collections
org.hibernate.event.def.AbstractFlushingEventListener: Scheduling collection removes/(re)creates/updates
org.hibernate.event.def.AbstractFlushingEventListener: Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
org.hibernate.event.def.AbstractFlushingEventListener: Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
org.hibernate.pretty.Printer: listing entities:
org.hibernate.pretty.Printer: tavant.platform.test.domain.Employee{name=testEmployee, id=1, department=tavant.platform.test.domain.Department#1}
org.hibernate.pretty.Printer: tavant.platform.test.domain.Department{employees=[tavant.platform.test.domain.Employee#1], name=testDepartment, id=1}
org.hibernate.event.def.AbstractFlushingEventListener: executing flush
org.hibernate.cache.ReadWriteCache: Invalidating: tavant.platform.test.domain.Department.employees#1
org.hibernate.cache.EhCache: key: tavant.platform.test.domain.Department.employees#1
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.Department.employeesCache: MemoryStore miss for tavant.platform.test.domain.Department.employees#1
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees cache - Miss
org.hibernate.cache.EhCache: Element for tavant.platform.test.domain.Department.employees#1 is null
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 now: 1140784228766
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 Creation Time: 1140784228766 Next To Last Access Time: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 mostRecentTime: 1140784228766
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees: Is element with key tavant.platform.test.domain.Department.employees#1 expired?: false
org.hibernate.cache.UpdateTimestampsCache: Pre-invalidating space [CACHE_ISSUE_DEP]
net.sf.ehcache.Cache: CACHE_ISSUE_DEP now: 1140784228766
net.sf.ehcache.Cache: CACHE_ISSUE_DEP Creation Time: 1140784228766 Next To Last Access Time: 0
net.sf.ehcache.Cache: CACHE_ISSUE_DEP mostRecentTime: 1140784228766
net.sf.ehcache.Cache: CACHE_ISSUE_DEP Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: org.hibernate.cache.UpdateTimestampsCache: Is element with key CACHE_ISSUE_DEP expired?: false
org.hibernate.persister.entity.BasicEntityPersister: Inserting entity: [tavant.platform.test.domain.Department#1]
org.hibernate.jdbc.AbstractBatcher: about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
org.hibernate.SQL: insert into CACHE_ISSUE_DEP (NAME, DEPARTMENT_ID) values (?, ?)
org.hibernate.jdbc.AbstractBatcher: preparing statement
org.hibernate.persister.entity.BasicEntityPersister: Dehydrating entity: [tavant.platform.test.domain.Department#1]
org.hibernate.type.StringType: binding 'testDepartment' to parameter: 1
org.hibernate.type.LongType: binding '1' to parameter: 2
org.hibernate.jdbc.AbstractBatcher: Adding to batch
org.hibernate.cache.UpdateTimestampsCache: Pre-invalidating space [CACHE_ISSUE_EMP]
net.sf.ehcache.Cache: CACHE_ISSUE_DEP now: 1140784228766
net.sf.ehcache.Cache: CACHE_ISSUE_DEP Creation Time: 1140784228766 Next To Last Access Time: 0
net.sf.ehcache.Cache: CACHE_ISSUE_DEP mostRecentTime: 1140784228766
net.sf.ehcache.Cache: CACHE_ISSUE_DEP Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: org.hibernate.cache.UpdateTimestampsCache: Is element with key CACHE_ISSUE_DEP expired?: false
org.hibernate.persister.entity.BasicEntityPersister: Inserting entity: [tavant.platform.test.domain.Employee#1]
org.hibernate.jdbc.AbstractBatcher: Executing batch size: 1
org.hibernate.jdbc.AbstractBatcher: about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
org.hibernate.jdbc.AbstractBatcher: closing statement
org.hibernate.jdbc.AbstractBatcher: about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
org.hibernate.SQL: insert into CACHE_ISSUE_EMP (EMP_NAME, DEPARTMENT_ID, EMP_ID) values (?, ?, ?)
org.hibernate.jdbc.AbstractBatcher: preparing statement
org.hibernate.persister.entity.BasicEntityPersister: Dehydrating entity: [tavant.platform.test.domain.Employee#1]
org.hibernate.type.StringType: binding 'testEmployee' to parameter: 1
org.hibernate.type.LongType: binding '1' to parameter: 2
org.hibernate.type.LongType: binding '1' to parameter: 3
org.hibernate.jdbc.AbstractBatcher: Adding to batch
org.hibernate.jdbc.AbstractBatcher: Executing batch size: 1
org.hibernate.jdbc.AbstractBatcher: about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
org.hibernate.jdbc.AbstractBatcher: closing statement
org.hibernate.cache.UpdateTimestampsCache: Pre-invalidating space [CACHE_ISSUE_EMP]
org.hibernate.event.def.AbstractFlushingEventListener: post flush
org.hibernate.jdbc.JDBCContext: before transaction completion
org.hibernate.impl.SessionImpl: before transaction completion
org.hibernate.transaction.JDBCTransaction: committed JDBC Connection
org.hibernate.jdbc.JDBCContext: after transaction completion
org.hibernate.impl.SessionImpl: after transaction completion
org.hibernate.cache.UpdateTimestampsCache: Invalidating space [CACHE_ISSUE_DEP], timestamp: 4672652201025539
org.hibernate.cache.UpdateTimestampsCache: Invalidating space [CACHE_ISSUE_EMP], timestamp: 4672652201025540
org.hibernate.cache.ReadWriteCache: Releasing: tavant.platform.test.domain.Department.employees#1
org.hibernate.cache.EhCache: key: tavant.platform.test.domain.Department.employees#1
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.Department.employeesCache: MemoryStore hit for tavant.platform.test.domain.Department.employees#1
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 now: 1140784228766
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 Creation Time: 1140784228766 Next To Last Access Time: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 mostRecentTime: 1140784228766
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees#1 Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Department.employees: Is element with key tavant.platform.test.domain.Department.employees#1 expired?: false
org.hibernate.cache.UpdateTimestampsCache: Invalidating space [CACHE_ISSUE_EMP], timestamp: 4672652201086977
org.hibernate.impl.SessionImpl: closing session
org.hibernate.jdbc.ConnectionManager: closing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
org.hibernate.connection.DriverManagerConnectionProvider: returning connection to pool, pool size: 1
org.hibernate.jdbc.JDBCContext: after transaction completion
org.hibernate.impl.SessionImpl: after transaction completion
tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled: Before first read...
org.hibernate.impl.SessionImpl: opened session at timestamp: 4672652201086978
org.hibernate.impl.SessionImpl: find: from Employee e join fetch e.department where e.name = :name
org.hibernate.engine.QueryParameters: named parameters: {name=testEmployee}
org.hibernate.hql.classic.QueryTranslatorImpl: compiling query
org.hibernate.cache.StandardQueryCache: checking cached query results in region: org.hibernate.cache.StandardQueryCache
org.hibernate.cache.EhCache: key: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee}
net.sf.ehcache.store.MemoryStore: org.hibernate.cache.StandardQueryCacheCache: MemoryStore miss for sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee}
net.sf.ehcache.Cache: org.hibernate.cache.StandardQueryCache cache - Miss
org.hibernate.cache.EhCache: Element for sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} is null
org.hibernate.cache.StandardQueryCache: query results were not found in cache
org.hibernate.hql.classic.QueryTranslatorImpl: HQL: from tavant.platform.test.domain.Employee e join fetch e.department where e.name = :name
org.hibernate.hql.classic.QueryTranslatorImpl: SQL: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? )
org.hibernate.jdbc.AbstractBatcher: about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
org.hibernate.jdbc.ConnectionManager: opening JDBC connection
org.hibernate.connection.DriverManagerConnectionProvider: total checked-out connections: 0
org.hibernate.connection.DriverManagerConnectionProvider: using pooled JDBC connection, pool size: 0
org.hibernate.SQL: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? )
org.hibernate.jdbc.AbstractBatcher: preparing statement
org.hibernate.type.StringType: binding 'testEmployee' to parameter: 1
org.hibernate.jdbc.AbstractBatcher: about to open ResultSet (open ResultSets: 0, globally: 0)
org.hibernate.loader.Loader: processing result set
org.hibernate.loader.Loader: result set row: 0
org.hibernate.type.LongType: returning '1' as column: EMP1_0_
org.hibernate.type.LongType: returning '1' as column: DEPARTMENT1_1_
org.hibernate.loader.Loader: result row: EntityKey[tavant.platform.test.domain.Employee#1], EntityKey[tavant.platform.test.domain.Department#1]
org.hibernate.loader.Loader: Initializing object from ResultSet: [tavant.platform.test.domain.Employee#1]
org.hibernate.persister.entity.BasicEntityPersister: Hydrating entity: [tavant.platform.test.domain.Employee#1]
org.hibernate.type.StringType: returning 'testEmployee' as column: EMP2_1_0_
org.hibernate.type.LongType: returning '1' as column: DEPARTMENT3_1_0_
org.hibernate.loader.Loader: Initializing object from ResultSet: [tavant.platform.test.domain.Department#1]
org.hibernate.persister.entity.BasicEntityPersister: Hydrating entity: [tavant.platform.test.domain.Department#1]
org.hibernate.type.StringType: returning 'testDepartment' as column: NAME0_1_
org.hibernate.loader.Loader: done processing result set (1 rows)
org.hibernate.jdbc.AbstractBatcher: about to close ResultSet (open ResultSets: 1, globally: 1)
org.hibernate.jdbc.AbstractBatcher: about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
org.hibernate.jdbc.AbstractBatcher: closing statement
org.hibernate.loader.Loader: total objects hydrated: 2
org.hibernate.engine.TwoPhaseLoad: resolving associations for [tavant.platform.test.domain.Employee#1]
org.hibernate.event.def.DefaultLoadEventListener: loading entity: [tavant.platform.test.domain.Department#1]
org.hibernate.event.def.DefaultLoadEventListener: entity found in session cache
org.hibernate.engine.TwoPhaseLoad: adding entity to second-level cache: [tavant.platform.test.domain.Employee#1]
org.hibernate.cache.ReadWriteCache: Caching: tavant.platform.test.domain.Employee#1
org.hibernate.cache.EhCache: key: tavant.platform.test.domain.Employee#1
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.EmployeeCache: MemoryStore miss for tavant.platform.test.domain.Employee#1
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee cache - Miss
org.hibernate.cache.EhCache: Element for tavant.platform.test.domain.Employee#1 is null
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 now: 1140784228859
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 Creation Time: 1140784228859 Next To Last Access Time: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 mostRecentTime: 1140784228859
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee: Is element with key tavant.platform.test.domain.Employee#1 expired?: false
org.hibernate.cache.ReadWriteCache: Cached: tavant.platform.test.domain.Employee#1
org.hibernate.engine.TwoPhaseLoad: done materializing entity [tavant.platform.test.domain.Employee#1]
org.hibernate.engine.TwoPhaseLoad: resolving associations for [tavant.platform.test.domain.Department#1]
org.hibernate.engine.CollectionLoadContext: creating collection wrapper:[tavant.platform.test.domain.Department.employees#1]
org.hibernate.engine.TwoPhaseLoad: adding entity to second-level cache: [tavant.platform.test.domain.Department#1]
org.hibernate.cache.ReadWriteCache: Caching: tavant.platform.test.domain.Department#1
org.hibernate.cache.EhCache: key: tavant.platform.test.domain.Department#1
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.DepartmentCache: MemoryStore miss for tavant.platform.test.domain.Department#1
net.sf.ehcache.Cache: tavant.platform.test.domain.Department cache - Miss
org.hibernate.cache.EhCache: Element for tavant.platform.test.domain.Department#1 is null
net.sf.ehcache.Cache: tavant.platform.test.domain.Department#1 now: 1140784228859
net.sf.ehcache.Cache: tavant.platform.test.domain.Department#1 Creation Time: 1140784228859 Next To Last Access Time: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Department#1 mostRecentTime: 1140784228859
net.sf.ehcache.Cache: tavant.platform.test.domain.Department#1 Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Department: Is element with key tavant.platform.test.domain.Department#1 expired?: false
org.hibernate.cache.ReadWriteCache: Cached: tavant.platform.test.domain.Department#1
org.hibernate.engine.TwoPhaseLoad: done materializing entity [tavant.platform.test.domain.Department#1]
org.hibernate.engine.PersistenceContext: initializing non-lazy collections
org.hibernate.cache.StandardQueryCache: caching query results in region: org.hibernate.cache.StandardQueryCache
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} now: 1140784228859
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} Creation Time: 1140784228859 Next To Last Access Time: 0
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} mostRecentTime: 1140784228859
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: org.hibernate.cache.StandardQueryCache: Is element with key sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} expired?: false
org.hibernate.jdbc.JDBCContext: after autocommit
org.hibernate.impl.SessionImpl: closing session
org.hibernate.jdbc.ConnectionManager: closing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
org.hibernate.connection.DriverManagerConnectionProvider: returning connection to pool, pool size: 1
org.hibernate.jdbc.JDBCContext: after transaction completion
org.hibernate.impl.SessionImpl: after transaction completion
tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled: Before first print...
tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled: Before second read...
org.hibernate.impl.SessionImpl: opened session at timestamp: 4672652201406466
org.hibernate.impl.SessionImpl: find: from Employee e join fetch e.department where e.name = :name
org.hibernate.engine.QueryParameters: named parameters: {name=testEmployee}
org.hibernate.cache.StandardQueryCache: checking cached query results in region: org.hibernate.cache.StandardQueryCache
org.hibernate.cache.EhCache: key: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee}
net.sf.ehcache.store.MemoryStore: org.hibernate.cache.StandardQueryCacheCache: MemoryStore hit for sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee}
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} now: 1140784228859
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} Creation Time: 1140784228859 Next To Last Access Time: 0
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} mostRecentTime: 1140784228859
net.sf.ehcache.Cache: sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: org.hibernate.cache.StandardQueryCache: Is element with key sql: select employee0_.EMP_ID as EMP1_0_, department1_.DEPARTMENT_ID as DEPARTMENT1_1_, employee0_.EMP_NAME as EMP2_1_0_, employee0_.DEPARTMENT_ID as DEPARTMENT3_1_0_, department1_.NAME as NAME0_1_ from CACHE_ISSUE_EMP employee0_ inner join CACHE_ISSUE_DEP department1_ on employee0_.DEPARTMENT_ID=department1_.DEPARTMENT_ID where (employee0_.EMP_NAME=? ); parameters: ; named parameters: {name=testEmployee} expired?: false
org.hibernate.cache.StandardQueryCache: Checking query spaces for up-to-dateness: [[CACHE_ISSUE_DEP, CACHE_ISSUE_EMP]]
org.hibernate.cache.EhCache: key: CACHE_ISSUE_DEP
net.sf.ehcache.store.MemoryStore: org.hibernate.cache.UpdateTimestampsCacheCache: MemoryStore hit for CACHE_ISSUE_DEP
net.sf.ehcache.Cache: CACHE_ISSUE_DEP now: 1140784228859
net.sf.ehcache.Cache: CACHE_ISSUE_DEP Creation Time: 1140784228766 Next To Last Access Time: 0
net.sf.ehcache.Cache: CACHE_ISSUE_DEP mostRecentTime: 1140784228766
net.sf.ehcache.Cache: CACHE_ISSUE_DEP Age to Idle: 120000 Age Idled: 93
net.sf.ehcache.Cache: org.hibernate.cache.UpdateTimestampsCache: Is element with key CACHE_ISSUE_DEP expired?: false
org.hibernate.cache.UpdateTimestampsCache: [CACHE_ISSUE_DEP] last update timstamp: 4672652201025539, result set timestamp: 4672652201086978
org.hibernate.cache.EhCache: key: CACHE_ISSUE_EMP
net.sf.ehcache.store.MemoryStore: org.hibernate.cache.UpdateTimestampsCacheCache: MemoryStore hit for CACHE_ISSUE_EMP
net.sf.ehcache.Cache: CACHE_ISSUE_EMP now: 1140784228859
net.sf.ehcache.Cache: CACHE_ISSUE_EMP Creation Time: 1140784228781 Next To Last Access Time: 0
net.sf.ehcache.Cache: CACHE_ISSUE_EMP mostRecentTime: 1140784228781
net.sf.ehcache.Cache: CACHE_ISSUE_EMP Age to Idle: 120000 Age Idled: 78
net.sf.ehcache.Cache: org.hibernate.cache.UpdateTimestampsCache: Is element with key CACHE_ISSUE_EMP expired?: false
org.hibernate.cache.UpdateTimestampsCache: [CACHE_ISSUE_EMP] last update timstamp: 4672652201086977, result set timestamp: 4672652201086978
org.hibernate.cache.StandardQueryCache: returning cached query results
org.hibernate.event.def.DefaultLoadEventListener: loading entity: [tavant.platform.test.domain.Employee#1]
org.hibernate.event.def.DefaultLoadEventListener: attempting to resolve: [tavant.platform.test.domain.Employee#1]
org.hibernate.cache.ReadWriteCache: Cache lookup: tavant.platform.test.domain.Employee#1
org.hibernate.cache.EhCache: key: tavant.platform.test.domain.Employee#1
net.sf.ehcache.store.MemoryStore: tavant.platform.test.domain.EmployeeCache: MemoryStore hit for tavant.platform.test.domain.Employee#1
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 now: 1140784228859
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 Creation Time: 1140784228859 Next To Last Access Time: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 mostRecentTime: 1140784228859
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee#1 Age to Idle: 120000 Age Idled: 0
net.sf.ehcache.Cache: tavant.platform.test.domain.Employee: Is element with key tavant.platform.test.domain.Employee#1 expired?: false
org.hibernate.cache.ReadWriteCache: Cache hit: tavant.platform.test.domain.Employee#1
org.hibernate.event.def.DefaultLoadEventListener: resolved object in second-level cache: [tavant.platform.test.domain.Employee#1]
org.hibernate.event.def.DefaultLoadEventListener: loading entity: [tavant.platform.test.domain.Department#1]
org.hibernate.event.def.DefaultLoadEventListener: creating new proxy for entity
org.hibernate.event.def.DefaultLoadEventListener: Cached Version: null
org.hibernate.engine.PersistenceContext: initializing non-lazy collections
org.hibernate.event.def.DefaultLoadEventListener: resolved object in second-level cache: [tavant.platform.test.domain.Employee#1]
org.hibernate.jdbc.JDBCContext: after autocommit
org.hibernate.impl.SessionImpl: after transaction completion
org.hibernate.impl.SessionImpl: closing session
tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled: Before second print...
org.hibernate.LazyInitializationException: could not initialize proxy - the owning Session was closed
org.hibernate.LazyInitializationException: could not initialize proxy - the owning Session was closed
	at org.hibernate.proxy.AbstractLazyInitializer.initialize(AbstractLazyInitializer.java:53)
	at org.hibernate.proxy.AbstractLazyInitializer.getImplementation(AbstractLazyInitializer.java:84)
	at org.hibernate.proxy.CGLIBLazyInitializer.intercept(CGLIBLazyInitializer.java:134)
	at tavant.platform.test.domain.Department$$EnhancerByCGLIB$$4dfa8ac1.toString(<generated>)
	at java.lang.String.valueOf(String.java:2131)
	at java.lang.StringBuffer.append(StringBuffer.java:370)
	at tavant.platform.test.client.TestPrefetchRelationWithQueryCacheEnabled.main(TestPrefetchRelationWithQueryCacheEnabled.java:115)
org.hibernate.jdbc.ConnectionManager: running Session.finalize()
