### Eclipse Workspace Patch 1.0
#P _hibernate-3.2.5_ga-src
Index: src/org/hibernate/proxy/AbstractLazyInitializer.java
===================================================================
RCS file: /cvs/lib/ormapping/_hibernate-3.2.5_ga-src/src/org/hibernate/proxy/AbstractLazyInitializer.java,v
retrieving revision 1.1
diff -u -r1.1 AbstractLazyInitializer.java
--- src/org/hibernate/proxy/AbstractLazyInitializer.java	27 Feb 2008 16:38:08 -0000	1.1
+++ src/org/hibernate/proxy/AbstractLazyInitializer.java	11 Jul 2008 08:24:39 -0000
@@ -4,7 +4,6 @@
 
 import org.hibernate.HibernateException;
 import org.hibernate.LazyInitializationException;
-import org.hibernate.ObjectNotFoundException;
 import org.hibernate.engine.EntityKey;
 import org.hibernate.engine.SessionImplementor;
 
@@ -99,6 +98,11 @@
 				session.getPersistenceContext().containsProxy(this);
 	}
 	
+	public void setSessionToNull()
+	{
+	   session = null;
+	}
+	
 	public final void setImplementation(Object target) {
 		this.target = target;
 		initialized = true;
Index: src/org/hibernate/proxy/LazyInitializer.java
===================================================================
RCS file: /cvs/lib/ormapping/_hibernate-3.2.5_ga-src/src/org/hibernate/proxy/LazyInitializer.java,v
retrieving revision 1.1
diff -u -r1.1 LazyInitializer.java
--- src/org/hibernate/proxy/LazyInitializer.java	27 Feb 2008 16:38:08 -0000	1.1
+++ src/org/hibernate/proxy/LazyInitializer.java	11 Jul 2008 08:24:39 -0000
@@ -58,6 +58,11 @@
 	 * Attach the proxy to a session
 	 */
 	public abstract void setSession(SessionImplementor s) throws HibernateException;
+	
+	/** 
+	 * Sets the session to null. This method may be used only when the proxy is also removed from the old session
+	 */
+	public abstract void setSessionToNull();
 
 	/**
 	 * Return the underlying persistent object, initializing if necessary
Index: src/org/hibernate/event/def/DefaultEvictEventListener.java
===================================================================
RCS file: /cvs/lib/ormapping/_hibernate-3.2.5_ga-src/src/org/hibernate/event/def/DefaultEvictEventListener.java,v
retrieving revision 1.1
diff -u -r1.1 DefaultEvictEventListener.java
--- src/org/hibernate/event/def/DefaultEvictEventListener.java	27 Feb 2008 16:37:49 -0000	1.1
+++ src/org/hibernate/event/def/DefaultEvictEventListener.java	11 Jul 2008 08:24:39 -0000
@@ -58,7 +58,7 @@
 					doEvict( entity, key, e.getPersister(), event.getSession() );
 				}
 			}
-			li.setSession( null );
+			li.setSessionToNull();
 		}
 		else {
 			EntityEntry e = persistenceContext.removeEntry( object );
Index: src/org/hibernate/engine/StatefulPersistenceContext.java
===================================================================
RCS file: /cvs/lib/ormapping/_hibernate-3.2.5_ga-src/src/org/hibernate/engine/StatefulPersistenceContext.java,v
retrieving revision 1.1
diff -u -r1.1 StatefulPersistenceContext.java
--- src/org/hibernate/engine/StatefulPersistenceContext.java	27 Feb 2008 16:37:52 -0000	1.1
+++ src/org/hibernate/engine/StatefulPersistenceContext.java	11 Jul 2008 08:24:39 -0000
@@ -181,7 +181,7 @@
 		Iterator itr = proxiesByKey.values().iterator();
 		while ( itr.hasNext() ) {
 			final LazyInitializer li = ( ( HibernateProxy ) itr.next() ).getHibernateLazyInitializer();
-			li.setSession( null );
+			li.setSessionToNull();
 		}
 		Map.Entry[] collectionEntryArray = IdentityMap.concurrentEntries( collectionEntries );
 		for ( int i = 0; i < collectionEntryArray.length; i++ ) {
