<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping SYSTEM "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >

<hibernate-mapping package="org.hibernate.test.cascade.circle">

    <class name="Route" table="HB_Route">

        <id name="routeID" type="long"><generator class="native"/></id>

        <property name="name" type="string" not-null="true"/>

        <!--
            Associations
            
			@OneToMany(targetEntity=Node.class, fetch=FetchType.EAGER, cascade=CascadeType.ALL, mappedBy="route")
			nodeList
        -->
        <list name="nodeList" inverse="true" cascade="all">
            <key column="routeID"/>
            <index column="nodeID"></index>
            <one-to-many class="Node"/>
        </list>
    </class>

   <class name="Tour" table="HB_Tour">

        <id name="tourID" type="long"><generator class="native"/></id>

        <property name="name" type="string" not-null="true"/>

        <!--
            Associations
            
			@OneToMany(targetEntity=Node.class, fetch=FetchType.LAZY, cascade={CascadeType.MERGE, CascadeType.REFRESH}, mappedBy="tour")
			nodeList
        -->
        <list name="node" inverse="true" lazy="true" cascade="merge,refresh">
            <key column="tourID"/>
            <index column="nodeID"></index>
            <one-to-many class="Node"/>
        </list>
    </class>
    
    <class name="Transport" table="HB_Transport">

        <id name="transportID" type="long"><generator class="native"/></id>

        <property name="name" type="string" not-null="true"/>

        <!--
            Associations
            
			//@ManyToOne(optional=false, cascade={CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH}, fetch=FetchType.EAGER)
			//@JoinColumn(name="PICKUPNODEID", /*nullable=false,*/insertable=true, updatable=true)
			pickupNode
			
			@ManyToOne(optional=false, cascade={CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH}, fetch=FetchType.EAGER)
			@JoinColumn(name="DELIVERYNODEID", /*nullable=false,*/ insertable=true, updatable=true)
			deliveryNode
        -->
        <many-to-one name="pickupNode"
            column="pickupNodeID"
            unique="true"
            not-null="true"
            cascade="merge,persist,refresh"
            lazy="false"/> 

        <many-to-one name="deliveryNode"
            column="deliveryNodeID"
            unique="true"
            not-null="true"
            cascade="merge,persist,refresh"
            lazy="false"/> 
    </class>
    
    <class name="Node" table="HB_Node">

        <id name="nodeID" type="long"><generator class="native"/></id>

        <property name="name" type="string" not-null="true"/>

        <!--
            Associations
            
			//@OneToMany(fetch=FetchType.LAZY, cascade={CascadeType.MERGE, CascadeType.REFRESH}, mappedBy="deliveryNode")
			deliveryTransport
			
			//@OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL, mappedBy="pickupNode")
			pickupTransport

			//@ManyToOne(targetEntity=Route.class, optional=false, fetch=FetchType.EAGER)
			//@JoinColumn(name="ROUTEID", nullable=false, insertable=true, updatable=true)
			route
			
			//@ManyToOne(targetEntity=Tour.class, cascade={CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH}, optional=true, fetch=FetchType.LAZY)
			//@JoinColumn(name="TOURID", nullable=true, insertable=true, updatable=true)
			
        -->
        <list name="deliveryTransport" inverse="true" lazy="true" cascade="merge,refresh">
            <key column="deliveryNodeID"/>
            <index column="transportID"></index>
            <one-to-many class="Transport"/>
        </list>

        <list name="pickupTransport" inverse="true" lazy="true" cascade="all">
            <key column="pickupNodeID"/>
            <index column="transportID"></index>
            <one-to-many class="Transport"/>
        </list>

        <many-to-one name="route"
            column="routeID"
            unique="false"
            not-null="true"
            cascade=""
            lazy="false"/> 

        <many-to-one name="tour"
            column="tourID"
            unique="false"
            not-null="false"
            cascade="merge,persist,refresh"
            lazy="false"/>                 
    </class>
    
    <!-- 
        <class name="G" table="HB_G">

        <id name="id" type="long"><generator class="native"/></id>

        <property name="data" type="string" not-null="true"/>

        <set name="hs" inverse="true" table="HB_G_H" cascade="all">
            <key column="g_fk"/>
            <many-to-many class="H" column="h_fk"/>
        </set>

        <many-to-one name="a"
            column="aId"
            unique="true"
            not-null="false"/>

    </class>

    <class name="H" table="HB_H">

        <id name="id" type="long"><generator class="native"/></id>

        <property name="data" type="string" not-null="true"/>

        <set name="gs" table="HB_G_H">
            <key column="h_fk"/>
            <many-to-many class="G" column="g_fk"/>
        </set>

        <many-to-one name="a" column="a_fk" class="A"/>

    </class> -->


</hibernate-mapping>
