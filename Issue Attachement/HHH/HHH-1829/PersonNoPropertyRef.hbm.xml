<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
	
<!-- 

  This mapping demonstrates 

     (1) a table-per-subclass mapping strategy where subclass data is
         retrieved by sequential select instead of a join (we do NOT
         recommend you do this, since it is very vulnerable to N+1
         problems; users porting applications from TopLink might find
         this useful for reproducing old behavior)
         
     (2) spreading data from a single class across multiple tables
         (again, we do not recommend you do this; use finer grained
         classes instead)
     
     (3) use of null as a discriminator value
     
     (4) recursive associations withing an inheritance tree
     
-->

<hibernate-mapping 
	package="org.hibernate.test.joinpropertyref"
	default-access="field">
	
	<class name="Person" 
		table="person" 
		lazy="true">
		
		<id name="id" 
			column="person_id" 
			unsaved-value="0">
			<generator class="native"/>
		</id>
		
		<property name="name" 
			not-null="true"
			length="80"/>
		
		<property name="sex" 
			not-null="true"
			update="false"/>
		
		<join table="address">
			<key column="address_id"/>
			<property name="address"/>
			<property name="zip"/>
			<property name="country"/>
		</join>
		
	</class>
	

</hibernate-mapping>
