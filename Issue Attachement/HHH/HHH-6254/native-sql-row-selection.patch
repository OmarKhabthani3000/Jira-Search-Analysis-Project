diff --git a/hibernate-core/src/main/java/org/hibernate/internal/SQLQueryImpl.java b/hibernate-core/src/main/java/org/hibernate/internal/SQLQueryImpl.java
index 7d64ce1..dd9ee6b 100644
--- a/hibernate-core/src/main/java/org/hibernate/internal/SQLQueryImpl.java
+++ b/hibernate-core/src/main/java/org/hibernate/internal/SQLQueryImpl.java
@@ -198,6 +198,7 @@ public class SQLQueryImpl extends AbstractQueryImpl implements SQLQuery {
 		QueryParameters qp = super.getQueryParameters(namedParams);
 		qp.setCallable(callable);
 		qp.setAutoDiscoverScalarTypes( autoDiscoverTypes );
+		qp.setRowSelection(getRowSelection());
 		return qp;
 	}
 
diff --git a/hibernate-core/src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java b/hibernate-core/src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java
index ac74d80..b77f701 100644
--- a/hibernate-core/src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java
+++ b/hibernate-core/src/test/java/org/hibernate/test/annotations/query/QueryAndSQLTest.java
@@ -147,7 +147,39 @@ public class QueryAndSQLTest extends BaseCoreFunctionalTestCase {
 		s.close();
 	}
 
-	
+        @Test
+        public void testSQLQueryRowSelection() {
+		Area area1 = new Area();
+		area1.setName( "2rPi" );
+
+		Area area2 = new Area();
+		area2.setName( "ab" );
+
+		Session s = openSession();
+		Transaction tx = s.beginTransaction();
+		s.persist( area1 );
+		s.persist( area2 );
+		tx.commit();
+		s.clear();
+
+		tx = s.beginTransaction();
+
+		Query q = s.getNamedQuery( "getAreaByNative" );
+		q.setMaxResults( 1 );
+
+		List<Area> results1 = q.list();
+		assertEquals( 1, results1.size() );
+
+		q.setFirstResult( 1 );
+		List<Area> results2 = q.list();
+		assertEquals( 1, results2.size() );
+
+		s.delete ( results1.get(0) );
+		s.delete ( results2.get(0) );
+		tx.commit();
+		s.close();
+        }
+
 	/**
 	 * We are testing 2 things here:
 	 * 1. The query 'night.olderThan' is defined in a MappedSuperClass - Darkness.
