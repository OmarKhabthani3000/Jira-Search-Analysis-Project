diff --git a/core/src/main/java/org/hibernate/dialect/SQLServer2005Dialect.java b/core/src/main/java/org/hibernate/dialect/SQLServer2005Dialect.java
new file mode 100644
index 0000000..48dfcea
--- /dev/null
+++ b/core/src/main/java/org/hibernate/dialect/SQLServer2005Dialect.java
@@ -0,0 +1,26 @@
+package org.hibernate.dialect;
+
+import java.sql.Types;
+
+/**
+ * Use the new SQL Server 2005 datatypes var{binary,char}(max)
+ * for bigger binary/text columns
+ * @author Johannes Rudolph <johannes.rudolph@gmail.com>
+ */
+public class SQLServer2005Dialect extends SQLServerDialect {
+	public SQLServer2005Dialect() {
+		super();
+	}
+
+	@Override
+	protected void registerVarTypes() {
+		// these are the new recommended data types
+		// see http://msdn2.microsoft.com/en-us/library/ms178158.aspx
+
+		registerColumnType( Types.VARBINARY, "varbinary(max)" );
+		registerColumnType( Types.VARBINARY, 8000, "varbinary($l)" );
+
+		registerColumnType( Types.VARCHAR, "varchar(max)" );
+		registerColumnType( Types.VARCHAR, 8000, "varchar($l)" );
+	}
+}
diff --git a/core/src/main/java/org/hibernate/dialect/SQLServerDialect.java b/core/src/main/java/org/hibernate/dialect/SQLServerDialect.java
index 66a385b..aa3ec1a 100644
--- a/core/src/main/java/org/hibernate/dialect/SQLServerDialect.java
+++ b/core/src/main/java/org/hibernate/dialect/SQLServerDialect.java
@@ -2,15 +2,12 @@
 package org.hibernate.dialect;
 
 import java.sql.Types;
-import java.util.Map;
-import java.util.Iterator;
 
 import org.hibernate.Hibernate;
 import org.hibernate.LockMode;
-import org.hibernate.util.StringHelper;
+import org.hibernate.dialect.function.AnsiTrimEmulationFunction;
 import org.hibernate.dialect.function.SQLFunctionTemplate;
 import org.hibernate.dialect.function.StandardSQLFunction;
-import org.hibernate.dialect.function.AnsiTrimEmulationFunction;
 
 /**
  * A dialect for Microsoft SQL Server 2000 and 2005
@@ -20,8 +17,7 @@ import org.hibernate.dialect.function.AnsiTrimEmulationFunction;
 public class SQLServerDialect extends SybaseDialect {
 
 	public SQLServerDialect() {
-		registerColumnType( Types.VARBINARY, "image" );
-		registerColumnType( Types.VARBINARY, 8000, "varbinary($l)" );
+		registerVarTypes();
 
 		registerFunction( "second", new SQLFunctionTemplate( Hibernate.INTEGER, "datepart(second, ?1)" ) );
 		registerFunction( "minute", new SQLFunctionTemplate( Hibernate.INTEGER, "datepart(minute, ?1)" ) );
@@ -37,6 +33,14 @@ public class SQLServerDialect extends SybaseDialect {
 		registerKeyword( "top" );
 	}
 
+	protected void registerVarTypes(){
+		registerColumnType( Types.VARBINARY, "image" );
+		registerColumnType( Types.VARBINARY, 8000, "varbinary($l)" );
+
+		registerColumnType( Types.VARCHAR, "text" );
+		registerColumnType( Types.VARCHAR, 8000, "varchar($l)" );
+	}
+
 	public String getNoColumnsInsertString() {
 		return "default values";
 	}
