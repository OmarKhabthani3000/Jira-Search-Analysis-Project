HQL: select ep from daisy.shared.enhet.Enhetsperson ep join ep.behorighetsgrupper eb join eb.behorigheter ebb where ep.personID = ? and (ebb = ? or ebb = ?)

HQL
  \-[QUERY] CommonAST: 'query'
     +-[SELECT_FROM] CommonAST: 'SELECT_FROM'
     |  +-[FROM] CommonAST: 'from'
     |  |  +-[DOT] CommonAST: '.'
     |  |  |  +-[DOT] CommonAST: '.'
     |  |  |  |  +-[DOT] CommonAST: '.'
     |  |  |  |  |  +-[IDENT] CommonAST: 'daisy'
     |  |  |  |  |  \-[IDENT] CommonAST: 'shared'
     |  |  |  |  \-[IDENT] CommonAST: 'enhet'
     |  |  |  \-[IDENT] CommonAST: 'Enhetsperson'
     |  |  +-[ALIAS] CommonAST: 'ep'
     |  |  +-[JOIN] CommonAST: 'join'
     |  |  |  +-[DOT] CommonAST: '.'
     |  |  |  |  +-[IDENT] CommonAST: 'ep'
     |  |  |  |  \-[IDENT] CommonAST: 'behorighetsgrupper'
     |  |  |  \-[ALIAS] CommonAST: 'eb'
     |  |  \-[JOIN] CommonAST: 'join'
     |  |     +-[DOT] CommonAST: '.'
     |  |     |  +-[IDENT] CommonAST: 'eb'
     |  |     |  \-[IDENT] CommonAST: 'behorigheter'
     |  |     \-[ALIAS] CommonAST: 'ebb'
     |  \-[SELECT] CommonAST: 'select'
     |     \-[IDENT] CommonAST: 'ep'
     \-[WHERE] CommonAST: 'where'
        \-[AND] CommonAST: 'and'
           +-[EQ] CommonAST: '='
           |  +-[DOT] CommonAST: '.'
           |  |  +-[IDENT] CommonAST: 'ep'
           |  |  \-[IDENT] CommonAST: 'personID'
           |  \-[PARAM] CommonAST: '?'
           \-[OR] CommonAST: 'or'
              +-[EQ] CommonAST: '='
              |  +-[IDENT] CommonAST: 'ebb'
              |  \-[PARAM] CommonAST: '?'
              \-[EQ] CommonAST: '='
                 +-[IDENT] CommonAST: 'ebb'
                 \-[PARAM] CommonAST: '?'

SQL
  \-[SELECT] QueryNode: 'SELECT'  querySpaces (Grupp_Behörighet,Enhetsperson,Behörighetsgrupp,Pers_Behörighetsgrupp)
     +-[SELECT_CLAUSE] SelectClause: '{select clause}'
     |  +-[ALIAS_REF] IdentNode: 'enhetspers0_.EnhetspersonID as Enhetspe1_' {alias=ep, className=daisy.shared.enhet.Enhetsperson, tableAlias=enhetspers0_}
     |  \-[SQL_TOKEN] SqlFragment: 'enhetspers0_.Enhet_ID as Enhet2_72_, enhetspers0_.Extern as Extern72_, enhetspers0_.Person_ID as Person4_72_'
     +-[FROM] FromClause: 'from' FromClause{from}
     |  \-[FROM_FRAGMENT] FromElement: 'Enhetsperson enhetspers0_' FromElement{explicit,not a collection join,classAlias=ep,role=null,tableName=Enhetsperson,tableAlias=enhetspers0_,colums={,className=daisy.shared.enhet.Enhetsperson}}
     |     \-[FROM_FRAGMENT] FromElement: 'inner join Pers_Behörighetsgrupp behorighet1_ on enhetspers0_.EnhetspersonID=behorighet1_.Enhetsperson_ID inner join Behörighetsgrupp behorighet2_ on behorighet1_.Grupp_ID=behorighet2_.GruppID' FromElement{explicit,collection join,classAlias=eb,role=daisy.shared.enhet.Enhetsperson.behorighetsgrupper,tableName=Behörighetsgrupp,tableAlias=behorighet2_,colums={enhetspers0_.EnhetspersonID ,className=daisy.shared.enhet.behorighet.Behorighetsgrupp}}
     |        \-[JOIN_FRAGMENT] FromElement: 'inner join Grupp_Behörighet behorighet3_ on behorighet2_.GruppID=behorighet3_.Grupp_ID' FromElement{explicit,collection join,classAlias=ebb,role=daisy.shared.enhet.behorighet.Behorighetsgrupp.behorigheter,tableName={none},tableAlias=behorighet3_,colums={,className=null}}
     \-[WHERE] SqlNode: 'where'
        \-[AND] SqlNode: 'and'
           +-[EQ] SqlNode: '='
           |  +-[DOT] DotNode: 'enhetspers0_.Person_ID' {propertyName=personID,dereferenceType=4,propertyPath=personID,path=ep.personID,tableAlias=enhetspers0_,className=daisy.shared.enhet.Enhetsperson,classAlias=ep}
           |  |  +-[ALIAS_REF] IdentNode: 'enhetspers0_.EnhetspersonID' {alias=ep, className=daisy.shared.enhet.Enhetsperson, tableAlias=enhetspers0_}
           |  |  \-[IDENT] IdentNode: 'personID' {originalText=personID}
           |  \-[PARAM] SqlNode: '?'
           \-[OR] SqlNode: 'or'
              +-[EQ] SqlNode: '='
              |  +-[ALIAS_REF] IdentNode: 'behorighet3_.Behörighet' {alias=ebb, className=null, tableAlias=behorighet3_}
              |  \-[PARAM] SqlNode: '?'
              \-[EQ] SqlNode: '='
                 +-[ALIAS_REF] IdentNode: 'behorighet3_.Behörighet' {alias=ebb, className=null, tableAlias=behorighet3_}
                 \-[PARAM] SqlNode: '?'

SQL: select enhetspers0_.EnhetspersonID as Enhetspe1_, enhetspers0_.Enhet_ID as Enhet2_72_, enhetspers0_.Extern as Extern72_, enhetspers0_.Person_ID as Person4_72_ from Enhetsperson enhetspers0_, inner join Pers_Behörighetsgrupp behorighet1_ on enhetspers0_.EnhetspersonID=behorighet1_.Enhetsperson_ID inner join Behörighetsgrupp behorighet2_ on behorighet1_.Grupp_ID=behorighet2_.GruppID inner join Grupp_Behörighet behorighet3_ on behorighet2_.GruppID=behorighet3_.Grupp_ID where (enhetspers0_.Person_ID=? and (behorighet3_.Behörighet=? or behorighet3_.Behörighet=?))