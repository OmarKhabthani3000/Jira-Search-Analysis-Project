Index: java/org/hibernate/cfg/annotations/reflection/EJB3OverridenAnnotationReader.java
===================================================================
--- java/org/hibernate/cfg/annotations/reflection/EJB3OverridenAnnotationReader.java	(revision 14741)
+++ java/org/hibernate/cfg/annotations/reflection/EJB3OverridenAnnotationReader.java	(working copy)
@@ -6,6 +6,7 @@
 import java.lang.reflect.AnnotatedElement;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -379,14 +380,20 @@
 			for (Field field : clazz.getFields()) {
 				properties.add( field.getName() );
 			}
-			for (Method method : clazz.getMethods()) {
+			Set<Method> methods = new HashSet<Method>();
+			methods.addAll( clazz.getMethods() );
+			methods.addAll( clazz.getDeclaredMethods() );
+			for (Method method : methods) {
 				String name = method.getName();
-				if ( name.startsWith( "get" ) ) {
-					properties.add( Introspector.decapitalize( name.substring( "get".length() ) ) );
+				int modifiers = method.getModifiers();
+				if ( Modifier.isPublic( modifiers ) || Modifier.isProtected( modifiers ) ) {
+					if ( name.startsWith( "get" ) ) {
+						properties.add( Introspector.decapitalize( name.substring( "get".length() ) ) );
+					}
+					else if ( name.startsWith( "is" ) ) {
+						properties.add( Introspector.decapitalize( name.substring( "is".length() ) ) );
+					}
 				}
-				else if ( name.startsWith( "is" ) ) {
-					properties.add( Introspector.decapitalize( name.substring( "is".length() ) ) );
-				}
 			}
 			for (Element subelement : (List<Element>) element.elements()) {
 				String propertyName = subelement.attributeValue( "name" );
