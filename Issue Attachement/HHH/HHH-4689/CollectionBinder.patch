Index: annotations/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java
===================================================================
--- annotations/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java	(revision 18424)
+++ annotations/src/main/java/org/hibernate/cfg/annotations/CollectionBinder.java	(working copy)
@@ -1031,11 +1031,11 @@
 				int index = 0;
 
 				for (String property : properties) {
-					Property p = component.getProperty( property );
+					Property p = getComponentProperty( component, property );
 					if ( p == null ) {
 						throw new AnnotationException(
 								"property from @OrderBy clause not found: "
-										+ role + "." + property
+										+ role + ", " + property
 						);
 					}
 
@@ -1058,6 +1058,24 @@
 		return orderByString;
 	}
 
+	/**
+	 * Get the property from the component.  If property uses dotted notation (see JPA-2 11.1.38),
+	 * each segment of property name refers respectively to property reference.
+	 * @param component
+	 * @param property
+	 * @return
+	 */
+	private static Property getComponentProperty(Component component, String property) {
+		Property p;
+		StringTokenizer st = new StringTokenizer( property, ".", false );
+		p = component.getProperty( st.nextToken() );
+		while ( st.hasMoreTokens() && p != null ) {
+			component = (Component)p.getValue();
+			p = component.getProperty( st.nextToken() );
+		}
+		return p;
+	}
+
 	private static boolean isNonPropertyToken(String token) {
 		if ( " ".equals( token ) ) return true;
 		if ( ",".equals( token ) ) return true;
