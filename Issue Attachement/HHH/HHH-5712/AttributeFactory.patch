--- AttributeFactory.java	2010-11-18 10:03:15.663211954 +0100
+++ AttributeFactory.java	2010-11-18 10:01:19.271572208 +0100
@@ -28,6 +28,7 @@
 import java.lang.reflect.Method;
 import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.TypeVariable;
+import java.lang.reflect.WildcardType;
 import java.util.Iterator;
 import javax.persistence.ManyToMany;
 import javax.persistence.OneToOne;
@@ -842,6 +843,12 @@
 				final java.lang.reflect.Type rawType = ( (ParameterizedType) type ).getRawType();
 				return getClassFromGenericArgument( rawType );
 			}
+			else if ( type instanceof WildcardType ) {
+				//guaranteed to always have at least 1 element
+				//no support for multiple upper bounds
+				final java.lang.reflect.Type rawType = ( (WildcardType) type ).getUpperBounds()[0];
+				return getClassFromGenericArgument( rawType );
+			}
 			else {
 				throw new AssertionFailure(
 						"Fail to process type argument in a generic declaration. Member : " + getMemberDescription()
