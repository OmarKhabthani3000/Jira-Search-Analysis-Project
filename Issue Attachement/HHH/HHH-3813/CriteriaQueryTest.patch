Index: src/test/java/org/hibernate/test/criteria/CriteriaQueryTest.java
===================================================================
--- src/test/java/org/hibernate/test/criteria/CriteriaQueryTest.java	(revision 16204)
+++ src/test/java/org/hibernate/test/criteria/CriteriaQueryTest.java	(working copy)
@@ -27,6 +27,7 @@
 import org.hibernate.junit.functional.FunctionalTestClassTestSuite;
 import org.hibernate.test.hql.Animal;
 import org.hibernate.test.hql.Reptile;
+import org.hibernate.test.hql.SimpleEntityWithAssociation;
 import org.hibernate.transform.Transformers;
 import org.hibernate.type.Type;
 import org.hibernate.util.SerializationHelper;
@@ -41,7 +42,7 @@
 	}
 
 	public String[] getMappings() {
-		return new String[] { "criteria/Enrolment.hbm.xml", "hql/Animal.hbm.xml" };
+		return new String[] { "criteria/Enrolment.hbm.xml", "hql/Animal.hbm.xml", "hql/SimpleEntityWithAssociation.hbm.xml" };
 	}
 
 	public void configure(Configuration cfg) {
@@ -794,5 +795,27 @@
 		t.commit();
 		session.close();
 	}
+	
+	public void testJoinTableFlush() throws Exception {
+		Session session = openSession();
+		Transaction t = session.beginTransaction();
+		SimpleEntityWithAssociation e1 = new SimpleEntityWithAssociation();
+		e1.setName("entity1");
+		SimpleEntityWithAssociation e2 = new SimpleEntityWithAssociation();
+		e2.setName("entity2");
+		e1.getManyToManyAssociatedEntities().add(e2);
+		session.persist(e1);
+		
+		List result = session.createCriteria(SimpleEntityWithAssociation.class)
+				.createAlias("manyToManyAssociatedEntities", "e")
+				.add(Restrictions.eq("e.name", "entity2"))
+				.list();
+		assertEquals(1, result.size());
+		
+		session.delete(e1);
+		session.delete(e2);
+		t.commit();
+		session.close();
+	}
 }
 
