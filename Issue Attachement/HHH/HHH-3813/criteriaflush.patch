Index: src/main/java/org/hibernate/loader/criteria/CriteriaQueryTranslator.java
===================================================================
--- src/main/java/org/hibernate/loader/criteria/CriteriaQueryTranslator.java	(revision 16147)
+++ src/main/java/org/hibernate/loader/criteria/CriteriaQueryTranslator.java	(working copy)
@@ -49,6 +49,7 @@
 import org.hibernate.engine.SessionFactoryImplementor;
 import org.hibernate.engine.TypedValue;
 import org.hibernate.impl.CriteriaImpl;
+import org.hibernate.persister.collection.CollectionPersister;
 import org.hibernate.persister.entity.Loadable;
 import org.hibernate.persister.entity.PropertyMapping;
 import org.hibernate.persister.entity.Queryable;
@@ -137,6 +138,20 @@
 			String entityName = ( String ) iter.next();
 			result.addAll( Arrays.asList( getFactory().getEntityPersister( entityName ).getQuerySpaces() ) );
 		}
+		iter = associationPathCriteriaMap.entrySet().iterator();
+		while (iter.hasNext()) {
+			Map.Entry entry = (Map.Entry) iter.next();
+			String path = (String) entry.getKey();
+			CriteriaImpl.Subcriteria crit = ( CriteriaImpl.Subcriteria ) entry.getValue();
+			int index = path.lastIndexOf('.');
+			if(index > 0) {
+				path = path.substring(index+1, path.length());
+			}
+			CollectionPersister persister = (CollectionPersister) getFactory().getAllCollectionMetadata().get(criteriaEntityNames.get(crit.getParent()) + "." + path);
+			if(persister != null) {
+				result.addAll(Arrays.asList( persister.getCollectionSpaces()));
+			}
+		}
 		return result;
 	}
 
