Index: Environment.java
===================================================================
--- Environment.java	(revision 10874)
+++ Environment.java	(working copy)
@@ -410,6 +410,11 @@
 	 */
 	public static final String USE_REFLECTION_OPTIMIZER = "hibernate.bytecode.use_reflection_optimizer";
 
+    /**
+     * Use bytecode libraries optimized property access
+     */
+    public static final String USE_LAZY_PROXY_FACTORY = "hibernate.use_lazy_proxy_factory";
+
 	/**
 	 * The classname of the HQL query parser factory
 	 */
@@ -460,7 +465,8 @@
 	private static final BytecodeProvider BYTECODE_PROVIDER_INSTANCE;
 	private static final boolean ENABLE_BINARY_STREAMS;
 	private static final boolean ENABLE_REFLECTION_OPTIMIZER;
-	private static final boolean JVM_SUPPORTS_LINKED_HASH_COLLECTIONS;
+    private static final boolean ENABLE_LAZY_PROXY_FACTORY;
+    private static final boolean JVM_SUPPORTS_LINKED_HASH_COLLECTIONS;
 	private static final boolean JVM_HAS_TIMESTAMP_BUG;
 	private static final boolean JVM_HAS_JDK14_TIMESTAMP;
 	private static final boolean JVM_SUPPORTS_GET_GENERATED_KEYS;
@@ -544,6 +550,7 @@
 
 		ENABLE_BINARY_STREAMS = PropertiesHelper.getBoolean(USE_STREAMS_FOR_BINARY, GLOBAL_PROPERTIES);
 		ENABLE_REFLECTION_OPTIMIZER = PropertiesHelper.getBoolean(USE_REFLECTION_OPTIMIZER, GLOBAL_PROPERTIES);
+        ENABLE_LAZY_PROXY_FACTORY = PropertiesHelper.getBoolean(USE_LAZY_PROXY_FACTORY, GLOBAL_PROPERTIES);
 
 		if (ENABLE_BINARY_STREAMS) {
 			log.info("using java.io streams to persist binary types");
@@ -637,6 +644,15 @@
 		return ENABLE_REFLECTION_OPTIMIZER;
 	}
 
+    /**
+     * Should we lazily create proxy factories to improve startup speed.
+     * Property <tt>hibernate.use_lazy_proxy_factory</tt>.
+     * @see Environment#USE_LAZY_PROXY_FACTORY
+     */
+    public static boolean useLazyProxyFactory() {
+        return ENABLE_LAZY_PROXY_FACTORY;
+    }
+
 	private Environment() { throw new UnsupportedOperationException(); }
 
 	/**
