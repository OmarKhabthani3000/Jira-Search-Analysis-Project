--- src/main/java/org/hibernate/impl/StatelessSessionImpl.java	2008-10-13 18:36:30.000000000 -0500
+++ StatelessSessionImpl.java	2008-10-13 18:40:58.000000000 -0500
@@ -257,18 +257,20 @@
 	}
 
 	public Object internalLoad(
-			String entityName,
-	        Serializable id,
-	        boolean eager,
-	        boolean nullable) throws HibernateException {
+		String entityName,
+		Serializable id,
+		boolean eager,
+		boolean nullable) throws HibernateException {
 		errorIfClosed();
 		EntityPersister persister = getFactory().getEntityPersister(entityName);
+		Object loaded = temporaryPersistenceContext.getEntity( new EntityKey(id, persister, EntityMode.POJO) );
+		if (loaded != null)
+			return loaded;
 		if ( !eager && persister.hasProxy() ) {
 			return persister.createProxy(id, this);
 		}
-		Object loaded = temporaryPersistenceContext.getEntity( new EntityKey(id, persister, EntityMode.POJO) );
 		//TODO: if not loaded, throw an exception
-		return loaded==null ? get( entityName, id ) : loaded;
+		return get( entityName, id );
 	}
   
 	public Iterator iterate(String query, QueryParameters queryParameters) throws HibernateException {
