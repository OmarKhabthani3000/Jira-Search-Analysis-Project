00:28:59,330  INFO Environment:593 - Hibernate 3.6.1.Final
00:28:59,336  INFO Environment:611 - loaded properties from resource hibernate.properties: {hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, hibernate.connection.isolation=2, hibernate.cache.provider_class=org.hibernate.cache.HashtableCacheProvider, hibernate.max_fetch_depth=5, hibernate.dialect=org.hibernate.dialect.SQLServer2005Dialect, hibernate.format_sql=true, hibernate.jdbc.batch_size=0, hibernate.connection.username=sa, hibernate.cache.region_prefix=hibernate.test, hibernate.connection.url=jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor, hibernate.show_sql=true, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.password=****, hibernate.connection.pool_size=5}
00:28:59,338  INFO Environment:804 - Bytecode provider name : javassist
00:28:59,341  INFO Environment:685 - using JDK 1.4 java.sql.Timestamp handling
00:28:59,348  INFO Dialect:135 - Using dialect: org.hibernate.dialect.SQLServer2005Dialect
00:28:59,399  INFO Dialect:135 - Using dialect: org.hibernate.dialect.SQLServer2005Dialect
00:28:59,429 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@423e5d1
00:28:59,429 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@423e5d1
00:28:59,429 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@423e5d1
00:28:59,429 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351e1e67
00:28:59,429 DEBUG BasicTypeRegistry:147 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c5e176f
00:28:59,430 DEBUG BasicTypeRegistry:147 - Adding type registration yes_no -> org.hibernate.type.YesNoType@35549f94
00:28:59,430 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@46b8c8e6
00:28:59,430 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@46b8c8e6
00:28:59,430 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46b8c8e6
00:28:59,430 DEBUG BasicTypeRegistry:147 - Adding type registration character -> org.hibernate.type.CharacterType@d8d9850
00:28:59,432 DEBUG BasicTypeRegistry:147 - Adding type registration char -> org.hibernate.type.CharacterType@d8d9850
00:28:59,432 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d8d9850
00:28:59,432 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@82a6f16
00:28:59,432 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@82a6f16
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@82a6f16
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration integer -> org.hibernate.type.IntegerType@19e3118a
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration int -> org.hibernate.type.IntegerType@19e3118a
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19e3118a
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@a94884d
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@a94884d
00:28:59,433 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@a94884d
00:28:59,434 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@1d807ca8
00:28:59,434 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@1d807ca8
00:28:59,434 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d807ca8
00:28:59,434 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@5e7808b9
00:28:59,434 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@5e7808b9
00:28:59,434 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e7808b9
00:28:59,435 DEBUG BasicTypeRegistry:147 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a84da23
00:28:59,435 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a84da23
00:28:59,435 DEBUG BasicTypeRegistry:147 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@80d3d6f
00:28:59,436 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@80d3d6f
00:28:59,436 DEBUG BasicTypeRegistry:147 - Adding type registration string -> org.hibernate.type.StringType@1d3c468a
00:28:59,436 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d3c468a
00:28:59,436 DEBUG BasicTypeRegistry:147 - Adding type registration url -> org.hibernate.type.UrlType@603b1d04
00:28:59,437 DEBUG BasicTypeRegistry:147 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@603b1d04
00:28:59,437 DEBUG BasicTypeRegistry:147 - Adding type registration date -> org.hibernate.type.DateType@48ee22f7
00:28:59,437 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@48ee22f7
00:28:59,438 DEBUG BasicTypeRegistry:147 - Adding type registration time -> org.hibernate.type.TimeType@a39ab89
00:28:59,438 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a39ab89
00:28:59,438 DEBUG BasicTypeRegistry:147 - Adding type registration timestamp -> org.hibernate.type.TimestampType@502cb49d
00:28:59,438 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@502cb49d
00:28:59,438 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@502cb49d
00:28:59,440 DEBUG BasicTypeRegistry:147 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@380e28b9
00:28:59,440 DEBUG BasicTypeRegistry:147 - Adding type registration calendar -> org.hibernate.type.CalendarType@2993a66f
00:28:59,440 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2993a66f
00:28:59,440 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2993a66f
00:28:59,440 DEBUG BasicTypeRegistry:147 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c93d6bc
00:28:59,440 DEBUG BasicTypeRegistry:147 - Adding type registration locale -> org.hibernate.type.LocaleType@2df6df4c
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2df6df4c
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration currency -> org.hibernate.type.CurrencyType@2abe0e27
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2abe0e27
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2393385d
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2393385d
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@165973ea
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@165973ea
00:28:59,441 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4ac9131c
00:28:59,442 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4ac9131c
00:28:59,442 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5705b99f
00:28:59,443 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2efb56b1
00:28:59,443 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@76f8968f
00:28:59,443 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76f8968f
00:28:59,443 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@76f8968f
00:28:59,443 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:28:59,444 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:28:59,444 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:28:59,444 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@2d5253d5
00:28:59,444 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@77fddc31
00:28:59,444 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@77fddc31
00:28:59,444 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@77fddc31
00:28:59,445 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b835282
00:28:59,445 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b835282
00:28:59,445 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b835282
00:28:59,445 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@509f5011
00:28:59,445 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@b41b571
00:28:59,446 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b41b571
00:28:59,446 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ef137d
00:28:59,446 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@39e87719
00:28:59,446 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@4ce32802
00:28:59,446 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4ce32802
00:28:59,447 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5557c2bd
00:28:59,447 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@74b23210
00:28:59,447 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ef4f44a
00:28:59,447 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@23d256fa
00:28:59,448 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@464c4975
00:28:59,448 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@464c4975
00:28:59,449 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3782da3d
00:28:59,449 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fc5f743
00:28:59,449 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dec8909
00:28:59,450 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@418c56d
00:28:59,450 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76497934
00:28:59,450 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51b48197
00:28:59,450 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@21a80a69
00:28:59,451 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f4384c2
00:28:59,470  INFO Version:37 - Hibernate Commons Annotations 3.2.0.Final
00:28:59,515 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
00:28:59,516 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
00:28:59,516 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
00:28:59,517 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
00:28:59,518 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
00:28:59,519 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
00:28:59,520 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
00:28:59,520 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
00:28:59,521 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
00:28:59,521 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
00:28:59,522 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
00:28:59,522 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
00:28:59,523 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
00:28:59,523 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
00:28:59,524 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
00:28:59,526  INFO Version:42 - Hibernate EntityManager 3.6.1.Final
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@423e5d1
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@423e5d1
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@423e5d1
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351e1e67
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c5e176f
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration yes_no -> org.hibernate.type.YesNoType@35549f94
00:28:59,527 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@46b8c8e6
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@46b8c8e6
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46b8c8e6
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration character -> org.hibernate.type.CharacterType@d8d9850
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration char -> org.hibernate.type.CharacterType@d8d9850
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d8d9850
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@82a6f16
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@82a6f16
00:28:59,528 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@82a6f16
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration integer -> org.hibernate.type.IntegerType@19e3118a
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration int -> org.hibernate.type.IntegerType@19e3118a
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19e3118a
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@a94884d
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@a94884d
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@a94884d
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@1d807ca8
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@1d807ca8
00:28:59,529 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d807ca8
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@5e7808b9
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@5e7808b9
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e7808b9
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a84da23
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a84da23
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@80d3d6f
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@80d3d6f
00:28:59,530 DEBUG BasicTypeRegistry:147 - Adding type registration string -> org.hibernate.type.StringType@1d3c468a
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d3c468a
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration url -> org.hibernate.type.UrlType@603b1d04
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@603b1d04
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration date -> org.hibernate.type.DateType@48ee22f7
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@48ee22f7
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration time -> org.hibernate.type.TimeType@a39ab89
00:28:59,531 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a39ab89
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration timestamp -> org.hibernate.type.TimestampType@502cb49d
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@502cb49d
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@502cb49d
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@380e28b9
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration calendar -> org.hibernate.type.CalendarType@2993a66f
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2993a66f
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2993a66f
00:28:59,532 DEBUG BasicTypeRegistry:147 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c93d6bc
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration locale -> org.hibernate.type.LocaleType@2df6df4c
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2df6df4c
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration currency -> org.hibernate.type.CurrencyType@2abe0e27
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2abe0e27
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2393385d
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2393385d
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@165973ea
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@165973ea
00:28:59,533 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4ac9131c
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4ac9131c
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5705b99f
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2efb56b1
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@76f8968f
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76f8968f
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@76f8968f
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:28:59,534 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@2d5253d5
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@77fddc31
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@77fddc31
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@77fddc31
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b835282
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b835282
00:28:59,535 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b835282
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@509f5011
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@b41b571
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b41b571
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ef137d
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@39e87719
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@4ce32802
00:28:59,536 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4ce32802
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5557c2bd
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@74b23210
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ef4f44a
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@23d256fa
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@464c4975
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@464c4975
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ac44b88
00:28:59,537 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d3ad33d
00:28:59,538 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4102799c
00:28:59,538 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@97e121c
00:28:59,538 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@33d6f122
00:28:59,538 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@647109c4
00:28:59,538 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39385660
00:28:59,538 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21aed5f9
00:28:59,538 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
00:28:59,539 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
00:28:59,540 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
00:28:59,540 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
00:28:59,540 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
00:28:59,540 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
00:28:59,540 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
00:28:59,540 DEBUG DefaultIdentifierGeneratorFactory:100 - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
00:28:59,597 DEBUG Configuration:3937 - Processing hbm.xml files
00:28:59,597 DEBUG Configuration:3967 - Process annotated classes
00:28:59,604  INFO AnnotationBinder:532 - Binding entity from annotated class: org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft
00:28:59,634 DEBUG Ejb3Column:192 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
00:28:59,636 DEBUG AnnotationBinder:1019 - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
00:28:59,643 DEBUG EntityBinder:353 - Import with entity name MSSQLPagingTest$Aircraft
00:28:59,647  INFO EntityBinder:519 - Bind entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft on table MSSQLPagingTest$Aircraft
00:28:59,678 DEBUG Ejb3Column:192 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MSSQLPagingTest$Aircraft), mappingColumn=id, insertable=true, updatable=true, unique=false}
00:28:59,682 DEBUG PropertyBinder:175 - binding property id with lazy=false
00:28:59,684 DEBUG SimpleValueBinder:303 - building SimpleValue for id
00:28:59,686 DEBUG PropertyBinder:255 - Building property id
00:28:59,689 DEBUG Ejb3Column:192 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MSSQLPagingTest$Aircraft), mappingColumn=name, insertable=true, updatable=true, unique=false}
00:28:59,689 DEBUG PropertyBinder:175 - binding property name with lazy=false
00:28:59,689 DEBUG SimpleValueBinder:303 - building SimpleValue for name
00:28:59,690 DEBUG PropertyBinder:255 - Building property name
00:28:59,690 DEBUG Ejb3Column:192 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MSSQLPagingTest$Aircraft), mappingColumn=idx, insertable=true, updatable=true, unique=false}
00:28:59,690 DEBUG PropertyBinder:175 - binding property order with lazy=false
00:28:59,690 DEBUG SimpleValueBinder:303 - building SimpleValue for order
00:28:59,691 DEBUG PropertyBinder:255 - Building property order
00:28:59,693 DEBUG SimpleValueBinder:341 - Setting SimpleValue typeName for id
00:28:59,693 DEBUG SimpleValueBinder:341 - Setting SimpleValue typeName for name
00:28:59,693 DEBUG SimpleValueBinder:341 - Setting SimpleValue typeName for order
00:28:59,694 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:28:59,696 DEBUG Configuration:1678 - processing extends queue
00:28:59,696 DEBUG Configuration:1732 - processing extends queue
00:28:59,696 DEBUG Configuration:1681 - processing collection mappings
00:28:59,696 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:28:59,696 DEBUG Configuration:1699 - processing association property references
00:28:59,696 DEBUG Configuration:1721 - processing foreign key constraints
00:28:59,697  INFO Configuration:1646 - Hibernate Validator not found: ignoring
00:28:59,719  INFO Version:56 - Hibernate Validator 4.1.0.Final
00:28:59,726 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:28:59,729  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:28:59,735 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:28:59,779 DEBUG NamingHelper:53 - No JNDI name configured for binding Ejb3Configuration
00:28:59,782 DEBUG Configuration:1824 - Preparing to build session factory with filters : {}
00:28:59,782 DEBUG Configuration:3937 - Processing hbm.xml files
00:28:59,783 DEBUG Configuration:3967 - Process annotated classes
00:28:59,783 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:28:59,783 DEBUG Configuration:1678 - processing extends queue
00:28:59,783 DEBUG Configuration:1732 - processing extends queue
00:28:59,783 DEBUG Configuration:1681 - processing collection mappings
00:28:59,783 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:28:59,783 DEBUG Configuration:1699 - processing association property references
00:28:59,783 DEBUG Configuration:1721 - processing foreign key constraints
00:28:59,784 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:28:59,784  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:28:59,784 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:28:59,786 DEBUG Configuration:1866 - Legacy Validator not present in classpath, ignoring event listener registration
00:28:59,786 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:28:59,786  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:28:59,787 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:28:59,790 DEBUG HibernateSearchEventListenerRegister:231 - Search not present in classpath, ignoring event listener registration.
00:28:59,790  INFO HibernateSearchEventListenerRegister:75 - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
00:28:59,795  INFO DriverManagerConnectionProvider:64 - Using Hibernate built-in connection pool (not for production use!)
00:28:59,796  INFO DriverManagerConnectionProvider:65 - Hibernate connection pool size: 5
00:28:59,796  INFO DriverManagerConnectionProvider:68 - autocommit mode: true
00:28:59,796  INFO DriverManagerConnectionProvider:72 - JDBC isolation level: READ_COMMITTED
00:28:59,924  INFO DriverManagerConnectionProvider:103 - using driver: com.microsoft.sqlserver.jdbc.SQLServerDriver at URL: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor
00:28:59,924  INFO DriverManagerConnectionProvider:106 - connection properties: {user=sa, password=Kocken2, autocommit=true, release_mode=auto}
00:28:59,924 DEBUG DriverManagerConnectionProvider:132 - opening new JDBC connection
00:29:00,334 DEBUG DriverManagerConnectionProvider:138 - created connection to: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor, Isolation Level: 2
00:29:00,344  INFO SettingsFactory:117 - Database ->
       name : Microsoft SQL Server
    version : 10.50.1600
      major : 10
      minor : 50
00:29:00,344  INFO SettingsFactory:123 - Driver ->
       name : Microsoft SQL Server JDBC Driver 3.0
    version : 3.0.1301.101
      major : 3
      minor : 0
00:29:00,354  INFO Dialect:135 - Using dialect: org.hibernate.dialect.SQLServer2005Dialect
00:29:00,364  INFO TransactionFactoryFactory:62 - Transaction strategy: org.hibernate.transaction.JDBCTransactionFactory
00:29:00,374  INFO TransactionManagerLookupFactory:80 - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
00:29:00,374  INFO SettingsFactory:179 - Automatic flush during beforeCompletion(): disabled
00:29:00,374  INFO SettingsFactory:183 - Automatic session close at end of transaction: disabled
00:29:00,374  INFO SettingsFactory:198 - Scrollable result sets: enabled
00:29:00,374 DEBUG SettingsFactory:202 - Wrap result sets: disabled
00:29:00,374  INFO SettingsFactory:206 - JDBC3 getGeneratedKeys(): enabled
00:29:00,374  INFO SettingsFactory:214 - Connection release mode: auto
00:29:00,374  INFO SettingsFactory:238 - Maximum outer join fetch depth: 5
00:29:00,374  INFO SettingsFactory:241 - Default batch fetch size: 1
00:29:00,374  INFO SettingsFactory:245 - Generate SQL with comments: disabled
00:29:00,374  INFO SettingsFactory:249 - Order SQL updates by primary key: disabled
00:29:00,374  INFO SettingsFactory:253 - Order SQL inserts for batching: disabled
00:29:00,374  INFO SettingsFactory:431 - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
00:29:00,374  INFO ASTQueryTranslatorFactory:47 - Using ASTQueryTranslatorFactory
00:29:00,374  INFO SettingsFactory:261 - Query language substitutions: {}
00:29:00,374  INFO SettingsFactory:266 - JPA-QL strict compliance: enabled
00:29:00,374  INFO SettingsFactory:271 - Second-level cache: enabled
00:29:00,374  INFO SettingsFactory:275 - Query cache: disabled
00:29:00,374  INFO SettingsFactory:406 - Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
00:29:00,374  INFO RegionFactoryCacheProviderBridge:61 - Cache provider: org.hibernate.cache.HashtableCacheProvider
00:29:00,384  INFO SettingsFactory:285 - Optimize cache for minimal puts: disabled
00:29:00,384  INFO SettingsFactory:290 - Cache region prefix: hibernate.test
00:29:00,384  INFO SettingsFactory:294 - Structured second-level cache entries: disabled
00:29:00,384  INFO SettingsFactory:314 - Echoing all SQL to stdout
00:29:00,384  INFO SettingsFactory:323 - Statistics: disabled
00:29:00,384  INFO SettingsFactory:327 - Deleted entity synthetic identifier rollback: disabled
00:29:00,384  INFO SettingsFactory:343 - Default entity-mode: pojo
00:29:00,384  INFO SettingsFactory:347 - Named query checking : enabled
00:29:00,384  INFO SettingsFactory:351 - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
00:29:00,404  INFO SessionFactoryImpl:202 - building session factory
00:29:00,404 DEBUG SessionFactoryImpl:206 - Statistics initialized [enabled=false]}
00:29:00,404 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@77bf7b23
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@423e5d1
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration boolean -> org.hibernate.type.BooleanType@423e5d1
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@423e5d1
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351e1e67
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c5e176f
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration yes_no -> org.hibernate.type.YesNoType@35549f94
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@46b8c8e6
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration byte -> org.hibernate.type.ByteType@46b8c8e6
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46b8c8e6
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration character -> org.hibernate.type.CharacterType@d8d9850
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration char -> org.hibernate.type.CharacterType@d8d9850
00:29:00,404 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d8d9850
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@82a6f16
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration short -> org.hibernate.type.ShortType@82a6f16
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@82a6f16
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration integer -> org.hibernate.type.IntegerType@19e3118a
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration int -> org.hibernate.type.IntegerType@19e3118a
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19e3118a
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@a94884d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration long -> org.hibernate.type.LongType@a94884d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@a94884d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@1d807ca8
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration float -> org.hibernate.type.FloatType@1d807ca8
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d807ca8
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@5e7808b9
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration double -> org.hibernate.type.DoubleType@5e7808b9
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e7808b9
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a84da23
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a84da23
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@80d3d6f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@80d3d6f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration string -> org.hibernate.type.StringType@1d3c468a
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d3c468a
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration url -> org.hibernate.type.UrlType@603b1d04
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@603b1d04
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration date -> org.hibernate.type.DateType@48ee22f7
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@48ee22f7
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration time -> org.hibernate.type.TimeType@a39ab89
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a39ab89
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration timestamp -> org.hibernate.type.TimestampType@502cb49d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@502cb49d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@502cb49d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@380e28b9
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration calendar -> org.hibernate.type.CalendarType@2993a66f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2993a66f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2993a66f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1c93d6bc
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration locale -> org.hibernate.type.LocaleType@2df6df4c
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2df6df4c
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration currency -> org.hibernate.type.CurrencyType@2abe0e27
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2abe0e27
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2393385d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2393385d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration class -> org.hibernate.type.ClassType@165973ea
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@165973ea
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4ac9131c
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4ac9131c
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5705b99f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2efb56b1
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration binary -> org.hibernate.type.BinaryType@76f8968f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76f8968f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration [B -> org.hibernate.type.BinaryType@76f8968f
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a64c34e
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration image -> org.hibernate.type.ImageType@2d5253d5
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration characters -> org.hibernate.type.CharArrayType@77fddc31
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration char[] -> org.hibernate.type.CharArrayType@77fddc31
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration [C -> org.hibernate.type.CharArrayType@77fddc31
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b835282
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b835282
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b835282
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration text -> org.hibernate.type.TextType@509f5011
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@b41b571
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b41b571
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ef137d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@39e87719
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@4ce32802
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4ce32802
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5557c2bd
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@74b23210
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@5ef4f44a
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration serializable -> org.hibernate.type.SerializableType@23d256fa
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration object -> org.hibernate.type.ObjectType@464c4975
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@464c4975
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3c2d7440
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c2b349d
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@288b567c
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53dafbaf
00:29:00,414 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4dc1c92b
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d7e4dee
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f2e7c6a
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44ea5461
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration clob -> org.hibernate.type.ClobType@4cbfea1d
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [clob] overrides previous : org.hibernate.type.ClobType@4ce32802
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4cbfea1d
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4ce32802
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1cf11404
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@39e87719
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56406199
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@5557c2bd
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4de13d52
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@5ef4f44a
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@43b09468
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@74b23210
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b543c88
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@6ef137d
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration blob -> org.hibernate.type.BlobType@28d08633
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [blob] overrides previous : org.hibernate.type.BlobType@b41b571
00:29:00,424 DEBUG BasicTypeRegistry:147 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28d08633
00:29:00,424  INFO BasicTypeRegistry:150 - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@b41b571
00:29:00,424 DEBUG SessionFactoryImpl:228 - Session factory constructed with filter configurations : {}
00:29:00,424 DEBUG SessionFactoryImpl:232 - instantiating session factory with properties: {java.vendor=Sun Microsystems Inc., localRepository=C:\Users\noetro.AVINODE\.m2\repository, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor, sun.management.compiler=HotSpot 64-Bit Server Compiler, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\development\jdk\1.6.0_22\jre\lib\resources.jar;C:\development\jdk\1.6.0_22\jre\lib\rt.jar;C:\development\jdk\1.6.0_22\jre\lib\sunrsasign.jar;C:\development\jdk\1.6.0_22\jre\lib\jsse.jar;C:\development\jdk\1.6.0_22\jre\lib\jce.jar;C:\development\jdk\1.6.0_22\jre\lib\charsets.jar;C:\development\jdk\1.6.0_22\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Sun Microsystems Inc., java.runtime.version=1.6.0_22-b04, hibernate.connection.autocommit=true, hibernate.cache.provider_class=org.hibernate.cache.HashtableCacheProvider, user.name=noetro, hibernate.connection.release_mode=auto, user.language=sv, sun.boot.library.path=C:\development\jdk\1.6.0_22\jre\bin, java.version=1.6.0_22, user.timezone=Europe/Berlin, sun.arch.data.model=64, java.endorsed.dirs=C:\development\jdk\1.6.0_22\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=true, java.class.version=50.0, user.country=SE, java.home=C:\development\jdk\1.6.0_22\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory, surefire.real.class.path=C:\Users\NOETRO~1.AVI\AppData\Local\Temp\surefirebooter835777079335074395.jar, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=17.1-b03, hibernate.max_fetch_depth=5, hibernate.connection.password=Kocken2, user.variant=, hibernate.id.new_generator_mappings=true, hibernate.jdbc.batch_size=0, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=sa, hibernate.check_nullability=false, hibernate.cache.region_prefix=hibernate.test, user.home=C:\Users\noetro.AVINODE, java.specification.vendor=Sun Microsystems Inc., hibernate.hbm2ddl.auto=create-drop, java.library.path=C:\development\jdk\1.6.0_22\jre\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\development\jdk\1.6.0_22\bin;C:\development\libraries\apache-maven-3.0\bin;C:\development\libraries\apache-ant-1.7.1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\CollabNet\Subversion Client;c:\Program Files\Intel\DMIX;C:\Program Files\Dell\DW WLAN Card;c:\Program Files\WIDCOMM\Bluetooth Software\;c:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\Program Files (x86)\NTRU Cryptosystems\NTRU TCG Software Stack\bin\;C:\Program Files\NTRU Cryptosystems\NTRU TCG Software Stack\bin\;C:\Program Files\Wave Systems Corp\Gemalto\Access Client\v5\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Common Files\Microsoft Shared\Windows Live;C:\Program Files (x86)\Common Files\microsoft shared\Windows Live;C:\Program Files (x86)\Windows Live\Shared;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\, java.vendor.url=http://java.sun.com/, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vm.vendor=Sun Microsystems Inc., hibernate.dialect=org.hibernate.dialect.SQLServer2005Dialect, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=c:\development\libraries\hibernate-distribution-3.6.1.Final\project\entitymanager\target\test-classes;c:\development\libraries\hibernate-distribution-3.6.1.Final\project\entitymanager\target\classes;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-core\3.6.1.Final\hibernate-core-3.6.1.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\noetro.AVINODE\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\noetro.AVINODE\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\noetro.AVINODE\.m2\repository\cglib\cglib\2.2\cglib-2.2.jar;C:\Users\noetro.AVINODE\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\noetro.AVINODE\.m2\repository\javassist\javassist\3.12.0.GA\javassist-3.12.0.GA.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-validator\4.1.0.Final\hibernate-validator-4.1.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-testing\3.6.1.Final\hibernate-testing-3.6.1.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\org\jboss\shrinkwrap\shrinkwrap-api\1.0.0-alpha-6\shrinkwrap-api-1.0.0-alpha-6.jar;C:\Users\noetro.AVINODE\.m2\repository\org\jboss\shrinkwrap\shrinkwrap-impl-base\1.0.0-alpha-6\shrinkwrap-impl-base-1.0.0-alpha-6.jar;C:\Users\noetro.AVINODE\.m2\repository\org\jboss\shrinkwrap\shrinkwrap-spi\1.0.0-alpha-6\shrinkwrap-spi-1.0.0-alpha-6.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-jpamodelgen\1.0.0.Final\hibernate-jpamodelgen-1.0.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\junit\junit\3.8.1\junit-3.8.1.jar;C:\Users\noetro.AVINODE\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\noetro.AVINODE\.m2\repository\commons-logging\commons-logging\99.0-does-not-exist\commons-logging-99.0-does-not-exist.jar;C:\Users\noetro.AVINODE\.m2\repository\commons-logging\commons-logging-api\99.0-does-not-exist\commons-logging-api-99.0-does-not-exist.jar;C:\development\libraries\sqljdbc_3.0\enu\sqljdbc4.jar;, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.0, sun.cpu.endian=little, sun.os.patch.level=, surefire.test.class.path=c:\development\libraries\hibernate-distribution-3.6.1.Final\project\entitymanager\target\test-classes;c:\development\libraries\hibernate-distribution-3.6.1.Final\project\entitymanager\target\classes;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-core\3.6.1.Final\hibernate-core-3.6.1.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\antlr\antlr\2.7.6\antlr-2.7.6.jar;C:\Users\noetro.AVINODE\.m2\repository\commons-collections\commons-collections\3.1\commons-collections-3.1.jar;C:\Users\noetro.AVINODE\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-commons-annotations\3.2.0.Final\hibernate-commons-annotations-3.2.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\noetro.AVINODE\.m2\repository\cglib\cglib\2.2\cglib-2.2.jar;C:\Users\noetro.AVINODE\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\noetro.AVINODE\.m2\repository\javassist\javassist\3.12.0.GA\javassist-3.12.0.GA.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.0.Final\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-validator\4.1.0.Final\hibernate-validator-4.1.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-testing\3.6.1.Final\hibernate-testing-3.6.1.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\org\jboss\shrinkwrap\shrinkwrap-api\1.0.0-alpha-6\shrinkwrap-api-1.0.0-alpha-6.jar;C:\Users\noetro.AVINODE\.m2\repository\org\jboss\shrinkwrap\shrinkwrap-impl-base\1.0.0-alpha-6\shrinkwrap-impl-base-1.0.0-alpha-6.jar;C:\Users\noetro.AVINODE\.m2\repository\org\jboss\shrinkwrap\shrinkwrap-spi\1.0.0-alpha-6\shrinkwrap-spi-1.0.0-alpha-6.jar;C:\Users\noetro.AVINODE\.m2\repository\org\hibernate\hibernate-jpamodelgen\1.0.0.Final\hibernate-jpamodelgen-1.0.0.Final.jar;C:\Users\noetro.AVINODE\.m2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\junit\junit\3.8.1\junit-3.8.1.jar;C:\Users\noetro.AVINODE\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\noetro.AVINODE\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\noetro.AVINODE\.m2\repository\commons-logging\commons-logging\99.0-does-not-exist\commons-logging-99.0-does-not-exist.jar;C:\Users\noetro.AVINODE\.m2\repository\commons-logging\commons-logging-api\99.0-does-not-exist\commons-logging-api-99.0-does-not-exist.jar;C:\development\libraries\sqljdbc_3.0\enu\sqljdbc4.jar;, java.io.tmpdir=C:\Users\NOETRO~1.AVI\AppData\Local\Temp\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\development\jdk\1.6.0_22\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=c:\development\libraries\hibernate-distribution-3.6.1.Final\project\entitymanager, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, basedir=c:\development\libraries\hibernate-distribution-3.6.1.Final\project\entitymanager, file.encoding=Cp1252, hibernate.use_identifier_rollback=false, java.specification.version=1.6, hibernate.connection.isolation=2, hibernate.connection.pool_size=5, hibernate.show_sql=true}
00:29:00,434 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,544 DEBUG AbstractEntityPersister:2952 - Static SQL for entity: org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft
00:29:00,544 DEBUG AbstractEntityPersister:2957 -  Version select: select id from MSSQLPagingTest$Aircraft where id =?
00:29:00,544 DEBUG AbstractEntityPersister:2960 -  Snapshot select: select mssqlpagin_.id, mssqlpagin_.name as name0_, mssqlpagin_.idx as idx0_ from MSSQLPagingTest$Aircraft mssqlpagin_ where mssqlpagin_.id=?
00:29:00,544 DEBUG AbstractEntityPersister:2963 -  Insert 0: insert into MSSQLPagingTest$Aircraft (name, idx, id) values (?, ?, ?)
00:29:00,544 DEBUG AbstractEntityPersister:2964 -  Update 0: update MSSQLPagingTest$Aircraft set name=?, idx=? where id=?
00:29:00,544 DEBUG AbstractEntityPersister:2965 -  Delete 0: delete from MSSQLPagingTest$Aircraft where id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [NONE]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [READ]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [UPGRADE]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ with (updlock, rowlock) where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [UPGRADE_NOWAIT]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ with (updlock, rowlock) where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [FORCE]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [PESSIMISTIC_READ]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ with (holdlock, rowlock) where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [PESSIMISTIC_WRITE]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ with (updlock, rowlock) where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [PESSIMISTIC_FORCE_INCREMENT]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [OPTIMISTIC]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,554 DEBUG EntityLoader:123 - Static select for entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft [OPTIMISTIC_FORCE_INCREMENT]: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,564 DEBUG EntityLoader:56 - Static select for action ACTION_MERGE on entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,564 DEBUG EntityLoader:56 - Static select for action ACTION_REFRESH on entity org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft: select mssqlpagin0_.id as id0_0_, mssqlpagin0_.name as name0_0_, mssqlpagin0_.idx as idx0_0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.id=?
00:29:00,564 DEBUG SessionFactoryObjectFactory:61 - initializing class SessionFactoryObjectFactory
00:29:00,564 DEBUG SessionFactoryObjectFactory:99 - registered: 763f0260-7cf7-4516-ab37-17ec703dea8a (unnamed)
00:29:00,564  INFO SessionFactoryObjectFactory:105 - Not binding factory to JNDI, no JNDI name configured
00:29:00,564 DEBUG SessionFactoryImpl:369 - instantiated session factory
00:29:00,574 DEBUG Configuration:3937 - Processing hbm.xml files
00:29:00,574 DEBUG Configuration:3967 - Process annotated classes
00:29:00,574 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:29:00,574 DEBUG Configuration:1678 - processing extends queue
00:29:00,574 DEBUG Configuration:1732 - processing extends queue
00:29:00,574 DEBUG Configuration:1681 - processing collection mappings
00:29:00,574 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:29:00,574 DEBUG Configuration:1699 - processing association property references
00:29:00,574 DEBUG Configuration:1721 - processing foreign key constraints
00:29:00,574 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:29:00,574  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:29:00,574 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:29:00,574 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,574 DEBUG Configuration:3937 - Processing hbm.xml files
00:29:00,574 DEBUG Configuration:3967 - Process annotated classes
00:29:00,574 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:29:00,574 DEBUG Configuration:1678 - processing extends queue
00:29:00,574 DEBUG Configuration:1732 - processing extends queue
00:29:00,574 DEBUG Configuration:1681 - processing collection mappings
00:29:00,574 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:29:00,574 DEBUG Configuration:1699 - processing association property references
00:29:00,574 DEBUG Configuration:1721 - processing foreign key constraints
00:29:00,574 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:29:00,574  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:29:00,574 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:29:00,574 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,574 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,574  INFO SchemaExport:234 - Running hbm2ddl schema export
00:29:00,574 DEBUG SchemaExport:252 - import file not found: /import.sql
00:29:00,574  INFO SchemaExport:262 - exporting generated schema to database
00:29:00,584 DEBUG SchemaExport:415 - 
    drop table MSSQLPagingTest$Aircraft
00:29:00,594 DEBUG SchemaExport:400 - Unsuccessful: drop table MSSQLPagingTest$Aircraft
00:29:00,594 DEBUG SchemaExport:401 - Cannot drop the table 'MSSQLPagingTest$Aircraft', because it does not exist or you do not have permission.
00:29:00,594 DEBUG SchemaExport:415 - 
    drop table hibernate_sequence
00:29:00,594 DEBUG SchemaExport:400 - Unsuccessful: drop table hibernate_sequence
00:29:00,594 DEBUG SchemaExport:401 - Cannot drop the table 'hibernate_sequence', because it does not exist or you do not have permission.
00:29:00,594 DEBUG SchemaExport:415 - 
    create table MSSQLPagingTest$Aircraft (
        id int not null,
        name varchar(255) null,
        idx int null,
        primary key (id)
    )
00:29:00,594 DEBUG SchemaExport:415 - 
    create table hibernate_sequence (
         next_val numeric(19,0) 
    )
00:29:00,594 DEBUG SchemaExport:415 - 
    insert into hibernate_sequence values ( 1 )
00:29:00,594  INFO SchemaExport:281 - schema export complete
00:29:00,604 DEBUG Configuration:3937 - Processing hbm.xml files
00:29:00,604 DEBUG Configuration:3967 - Process annotated classes
00:29:00,604 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:29:00,604 DEBUG Configuration:1678 - processing extends queue
00:29:00,604 DEBUG Configuration:1732 - processing extends queue
00:29:00,604 DEBUG Configuration:1681 - processing collection mappings
00:29:00,604 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:29:00,604 DEBUG Configuration:1699 - processing association property references
00:29:00,604 DEBUG Configuration:1721 - processing foreign key constraints
00:29:00,604 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:29:00,604  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:29:00,604 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:29:00,604 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,604 DEBUG Configuration:3937 - Processing hbm.xml files
00:29:00,604 DEBUG Configuration:3967 - Process annotated classes
00:29:00,604 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:29:00,604 DEBUG Configuration:1678 - processing extends queue
00:29:00,604 DEBUG Configuration:1732 - processing extends queue
00:29:00,604 DEBUG Configuration:1681 - processing collection mappings
00:29:00,604 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:29:00,604 DEBUG Configuration:1699 - processing association property references
00:29:00,604 DEBUG Configuration:1721 - processing foreign key constraints
00:29:00,604 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:29:00,604  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:29:00,604 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:29:00,604 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,604 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,604 DEBUG SessionFactoryImpl:539 - Checking 0 named HQL queries
00:29:00,604 DEBUG SessionFactoryImpl:559 - Checking 0 named SQL queries
00:29:00,674 DEBUG SessionImpl:265 - opened session at timestamp: 5314424588877824
00:29:00,684 DEBUG JDBCTransaction:78 - begin
00:29:00,684 DEBUG ConnectionManager:444 - opening JDBC connection
00:29:00,684 DEBUG JDBCTransaction:83 - current autocommit status: true
00:29:00,684 DEBUG JDBCTransaction:86 - disabling autocommit
00:29:00,684 DEBUG DriverManagerConnectionProvider:132 - opening new JDBC connection
00:29:00,694 DEBUG DriverManagerConnectionProvider:138 - created connection to: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor, Isolation Level: 2
00:29:00,694 DEBUG SQL:111 - select next_val as id_val from hibernate_sequence with (updlock, rowlock)
00:29:00,755 DEBUG SQL:111 - update hibernate_sequence set next_val= ? where next_val=?
00:29:00,765 DEBUG AbstractSaveEventListener:134 - generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
00:29:00,775 DEBUG JDBCTransaction:130 - commit
00:29:00,775 DEBUG AbstractFlushingEventListener:134 - processing flush-time cascades
00:29:00,775 DEBUG AbstractFlushingEventListener:177 - dirty checking collections
00:29:00,775 DEBUG AbstractFlushingEventListener:108 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
00:29:00,775 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
00:29:00,785 DEBUG Printer:106 - listing entities:
00:29:00,785 DEBUG Printer:113 - org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft{id=1, order=1, name=bug_test}
00:29:00,785 DEBUG AbstractBatcher:410 - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
00:29:00,795 DEBUG SQL:111 - 
    insert 
    into
        MSSQLPagingTest$Aircraft
        (name, idx, id) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        MSSQLPagingTest$Aircraft
        (name, idx, id) 
    values
        (?, ?, ?)
00:29:00,795 TRACE BasicBinder:82 - binding parameter [1] as [VARCHAR] - bug_test
00:29:00,795 TRACE BasicBinder:82 - binding parameter [2] as [INTEGER] - 1
00:29:00,795 TRACE BasicBinder:82 - binding parameter [3] as [INTEGER] - 1
00:29:00,795 DEBUG AbstractBatcher:418 - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
00:29:00,795 DEBUG JDBCTransaction:223 - re-enabling autocommit
00:29:00,805 DEBUG JDBCTransaction:143 - committed JDBC Connection
00:29:00,805 DEBUG ConnectionManager:427 - aggressively releasing JDBC connection
00:29:00,805 DEBUG ConnectionManager:464 - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
00:29:00,805 DEBUG SessionImpl:265 - opened session at timestamp: 5314424589537280
00:29:00,805 DEBUG JDBCTransaction:78 - begin
00:29:00,805 DEBUG ConnectionManager:444 - opening JDBC connection
00:29:00,805 DEBUG JDBCTransaction:83 - current autocommit status: true
00:29:00,805 DEBUG JDBCTransaction:86 - disabling autocommit
00:29:00,825 DEBUG CriteriaQueryCompiler:225 - Rendered criteria query -> select generatedAlias0 from MSSQLPagingTest$Aircraft as generatedAlias0 where generatedAlias0.name like :param0 order by case when generatedAlias0.order is null then 1 else generatedAlias0.name end desc
00:29:00,865 DEBUG QueryTranslatorImpl:272 - parse() - HQL: select generatedAlias0 from org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft as generatedAlias0 where generatedAlias0.name like :param0 order by case when generatedAlias0.order is null then 1 else generatedAlias0.name end desc
00:29:00,865 DEBUG HqlParser:370 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=176,possibleID=false]
00:29:00,875 DEBUG AST:291 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  |  \-[IDENT] Node: 'ejb'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'query'
    |  |     |  \-[IDENT] Node: 'MSSQLPagingTest$Aircraft'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[LIKE] Node: 'like'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[ORDER] Node: 'order'
       +-[CASE] Node: 'case'
       |  +-[WHEN] Node: 'when'
       |  |  +-[IS_NULL] Node: 'is null'
       |  |  |  \-[DOT] Node: '.'
       |  |  |     +-[IDENT] Node: 'generatedAlias0'
       |  |  |     \-[IDENT] Node: 'order'
       |  |  \-[NUM_INT] Node: '1'
       |  \-[ELSE] Node: 'else'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'generatedAlias0'
       |        \-[IDENT] Node: 'name'
       \-[DESCENDING] Node: 'desc'

00:29:00,875 DEBUG ErrorCounter:91 - throwQueryException() : no errors
00:29:00,895 DEBUG HqlSqlBaseWalker:111 - select << begin [level=1, statement=select]
00:29:00,905 DEBUG FromElement:157 - FromClause{level=1} :  org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft (generatedAlias0) -> mssqlpagin0_
00:29:00,905 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0 -> mssqlpagin0_.id
00:29:00,905 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0 -> mssqlpagin0_.id
00:29:00,905 DEBUG DotNode:613 - getDataType() : name -> org.hibernate.type.StringType@1d3c468a
00:29:00,905 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0.name -> mssqlpagin0_.name
00:29:00,915 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0 -> mssqlpagin0_.id
00:29:00,915 DEBUG DotNode:613 - getDataType() : order -> org.hibernate.type.IntegerType@19e3118a
00:29:00,915 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0.order -> mssqlpagin0_.idx
00:29:00,915 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0 -> mssqlpagin0_.id
00:29:00,915 DEBUG DotNode:613 - getDataType() : name -> org.hibernate.type.StringType@1d3c468a
00:29:00,915 DEBUG FromReferenceNode:74 - Resolved :  generatedAlias0.name -> mssqlpagin0_.name
00:29:00,915 DEBUG HqlSqlBaseWalker:117 - select : finishing up [level=1, statement=select]
00:29:00,915 DEBUG HqlSqlWalker:625 - processQuery() :  ( SELECT ( {select clause} mssqlpagin0_.id ) ( FromClause{level=1} MSSQLPagingTest$Aircraft mssqlpagin0_ ) ( where ( like ( mssqlpagin0_.name mssqlpagin0_.id name ) ? ) ) ( order ( case ( when ( is null ( mssqlpagin0_.idx mssqlpagin0_.id order ) ) 1 ) ( else ( mssqlpagin0_.name mssqlpagin0_.id name ) ) ) desc ) )
00:29:00,915 DEBUG JoinProcessor:179 - Using FROM fragment [MSSQLPagingTest$Aircraft mssqlpagin0_]
00:29:00,915 DEBUG HqlSqlBaseWalker:123 - select >> end [level=1, statement=select]
00:29:00,925 DEBUG AST:258 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MSSQLPagingTest$Aircraft)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'mssqlpagin0_.id as id0_' {alias=generatedAlias0, className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft, tableAlias=mssqlpagin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'mssqlpagin0_.name as name0_, mssqlpagin0_.idx as idx0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[mssqlpagin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MSSQLPagingTest$Aircraft mssqlpagin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=MSSQLPagingTest$Aircraft,tableAlias=mssqlpagin0_,origin=null,columns={,className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft}}
    +-[WHERE] SqlNode: 'where'
    |  \-[LIKE] BinaryLogicOperatorNode: 'like'
    |     +-[DOT] DotNode: 'mssqlpagin0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=generatedAlias0.name,tableAlias=mssqlpagin0_,className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'mssqlpagin0_.id' {alias=generatedAlias0, className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft, tableAlias=mssqlpagin0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1d3c468a}
    \-[ORDER] OrderByClause: 'order'
       +-[CASE] CaseNode: 'case'
       |  +-[WHEN] SqlNode: 'when'
       |  |  +-[IS_NULL] IsNullLogicOperatorNode: 'is null'
       |  |  |  \-[DOT] DotNode: 'mssqlpagin0_.idx' {propertyName=order,dereferenceType=ALL,propertyPath=order,path=generatedAlias0.order,tableAlias=mssqlpagin0_,className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft,classAlias=generatedAlias0}
       |  |  |     +-[ALIAS_REF] IdentNode: 'mssqlpagin0_.id' {alias=generatedAlias0, className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft, tableAlias=mssqlpagin0_}
       |  |  |     \-[IDENT] IdentNode: 'order' {originalText=order}
       |  |  \-[NUM_INT] LiteralNode: '1'
       |  \-[ELSE] SqlNode: 'else'
       |     \-[DOT] DotNode: 'mssqlpagin0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=generatedAlias0.name,tableAlias=mssqlpagin0_,className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft,classAlias=generatedAlias0}
       |        +-[ALIAS_REF] IdentNode: 'mssqlpagin0_.id' {alias=generatedAlias0, className=org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft, tableAlias=mssqlpagin0_}
       |        \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DESCENDING] SqlNode: 'desc'

00:29:00,925 DEBUG ErrorCounter:91 - throwQueryException() : no errors
00:29:00,935 DEBUG QueryTranslatorImpl:241 - HQL: select generatedAlias0 from org.hibernate.ejb.test.query.MSSQLPagingTest$Aircraft as generatedAlias0 where generatedAlias0.name like :param0 order by case when generatedAlias0.order is null then 1 else generatedAlias0.name end desc
00:29:00,935 DEBUG QueryTranslatorImpl:242 - SQL: select mssqlpagin0_.id as id0_, mssqlpagin0_.name as name0_, mssqlpagin0_.idx as idx0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.name like ? order by case when mssqlpagin0_.idx is null then 1 else mssqlpagin0_.name end desc
00:29:00,935 DEBUG ErrorCounter:91 - throwQueryException() : no errors
00:29:00,945 DEBUG AbstractBatcher:410 - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
00:29:00,945 DEBUG SQL:111 - 
    WITH query AS (select
        ROW_NUMBER() OVER (
    order by
        case 
            when mssqlpagin0_.idx is null then 1 
            else mssqlpagin0_.name 
        end desc) as __hibernate_row_nr__,
        mssqlpagin0_.id as id0_,
        mssqlpagin0_.name as name0_,
        mssqlpagin0_.idx as idx0_ 
    from
        mssqlpagingtest$aircraft mssqlpagin0_ 
    where
        mssqlpagin0_.name like ? ) SELECT
        * 
    FROM
        query 
    WHERE
        __hibernate_row_nr__ BETWEEN ? AND ?
Hibernate: 
    WITH query AS (select
        ROW_NUMBER() OVER (
    order by
        case 
            when mssqlpagin0_.idx is null then 1 
            else mssqlpagin0_.name 
        end desc) as __hibernate_row_nr__,
        mssqlpagin0_.id as id0_,
        mssqlpagin0_.name as name0_,
        mssqlpagin0_.idx as idx0_ 
    from
        mssqlpagingtest$aircraft mssqlpagin0_ 
    where
        mssqlpagin0_.name like ? ) SELECT
        * 
    FROM
        query 
    WHERE
        __hibernate_row_nr__ BETWEEN ? AND ?
00:29:00,945 TRACE BasicBinder:82 - binding parameter [1] as [VARCHAR] - bug%
00:29:00,955 DEBUG AbstractBatcher:418 - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
00:29:00,955 DEBUG JDBCExceptionReporter:225 - could not execute query [select mssqlpagin0_.id as id0_, mssqlpagin0_.name as name0_, mssqlpagin0_.idx as idx0_ from MSSQLPagingTest$Aircraft mssqlpagin0_ where mssqlpagin0_.name like ? order by case when mssqlpagin0_.idx is null then 1 else mssqlpagin0_.name end desc]
com.microsoft.sqlserver.jdbc.SQLServerException: Conversion failed when converting the varchar value 'bug_test' to data type int.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:197)
	at com.microsoft.sqlserver.jdbc.TDSTokenHandler.onEOF(tdsparser.java:246)
	at com.microsoft.sqlserver.jdbc.TDSParser.parse(tdsparser.java:83)
	at com.microsoft.sqlserver.jdbc.SQLServerResultSet.<init>(SQLServerResultSet.java:284)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1504)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:390)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:340)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:4575)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1400)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:179)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:154)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeQuery(SQLServerPreparedStatement.java:283)
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1953)
	at org.hibernate.loader.Loader.doQuery(Loader.java:802)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:274)
	at org.hibernate.loader.Loader.doList(Loader.java:2533)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2276)
	at org.hibernate.loader.Loader.list(Loader.java:2271)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:452)
	at org.hibernate.hql.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:363)
	at org.hibernate.engine.query.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.impl.SessionImpl.list(SessionImpl.java:1268)
	at org.hibernate.impl.QueryImpl.list(QueryImpl.java:102)
	at org.hibernate.ejb.QueryImpl.getResultList(QueryImpl.java:246)
	at org.hibernate.ejb.criteria.CriteriaQueryCompiler$3.getResultList(CriteriaQueryCompiler.java:260)
	at org.hibernate.ejb.test.query.MSSQLPagingTest.query(MSSQLPagingTest.java:78)
	at org.hibernate.ejb.test.query.MSSQLPagingTest.test_HHH_5915(MSSQLPagingTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at org.hibernate.testing.junit.functional.annotations.HibernateTestCase.runTest(HibernateTestCase.java:97)
	at org.hibernate.testing.junit.functional.annotations.HibernateTestCase.runBare(HibernateTestCase.java:85)
	at org.hibernate.ejb.test.TestCase.runBare(TestCase.java:223)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)
00:29:00,965  WARN JDBCExceptionReporter:233 - SQL Error: 245, SQLState: S0001
00:29:00,965 ERROR JDBCExceptionReporter:234 - Conversion failed when converting the varchar value 'bug_test' to data type int.
00:29:00,965 DEBUG AbstractEntityManagerImpl:948 - mark transaction for rollback
00:29:00,965  INFO SessionFactoryImpl:927 - closing
00:29:00,965  INFO SchemaExport:234 - Running hbm2ddl schema export
00:29:00,965 DEBUG SchemaExport:252 - import file not found: /import.sql
00:29:00,965  INFO SchemaExport:262 - exporting generated schema to database
00:29:00,965 DEBUG SchemaExport:415 - 
    drop table MSSQLPagingTest$Aircraft
00:29:00,965 DEBUG SchemaExport:415 - 
    drop table hibernate_sequence
00:29:00,965  INFO SchemaExport:281 - schema export complete
00:29:00,965  INFO DriverManagerConnectionProvider:170 - cleaning up connection pool: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor
00:29:00,965  INFO Dialect:135 - Using dialect: org.hibernate.dialect.SQLServer2005Dialect
00:29:00,965 DEBUG Configuration:3937 - Processing hbm.xml files
00:29:00,965 DEBUG Configuration:3967 - Process annotated classes
00:29:00,965 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:29:00,965 DEBUG Configuration:1678 - processing extends queue
00:29:00,965 DEBUG Configuration:1732 - processing extends queue
00:29:00,965 DEBUG Configuration:1681 - processing collection mappings
00:29:00,965 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:29:00,965 DEBUG Configuration:1699 - processing association property references
00:29:00,965 DEBUG Configuration:1721 - processing foreign key constraints
00:29:00,965 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:29:00,965  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:29:00,975 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:29:00,975 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,975 DEBUG Configuration:3937 - Processing hbm.xml files
00:29:00,975 DEBUG Configuration:3967 - Process annotated classes
00:29:00,975 DEBUG Configuration:1436 - processing fk mappings (*ToOne and JoinedSubclass)
00:29:00,975 DEBUG Configuration:1678 - processing extends queue
00:29:00,975 DEBUG Configuration:1732 - processing extends queue
00:29:00,975 DEBUG Configuration:1681 - processing collection mappings
00:29:00,975 DEBUG Configuration:1691 - processing native query and ResultSetMapping mappings
00:29:00,975 DEBUG Configuration:1699 - processing association property references
00:29:00,975 DEBUG Configuration:1721 - processing foreign key constraints
00:29:00,975 DEBUG DefaultTraversableResolver:66 - Found javax.persistence.PersistenceUtil on classpath.
00:29:00,975  INFO DefaultTraversableResolver:81 - Instantiated an instance of org.hibernate.validator.engine.resolver.JPATraversableResolver.
00:29:00,975 DEBUG ValidationXmlParser:200 - No META-INF/validation.xml found. Using annotation based configuration only
00:29:00,975 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,975 DEBUG DefaultIdentifierGeneratorFactory:90 - Setting dialect [org.hibernate.dialect.SQLServer2005Dialect]
00:29:00,975  INFO SchemaExport:234 - Running hbm2ddl schema export
00:29:00,975 DEBUG SchemaExport:252 - import file not found: /import.sql
00:29:00,975  INFO SchemaExport:262 - exporting generated schema to database
00:29:00,975  INFO DriverManagerConnectionProvider:64 - Using Hibernate built-in connection pool (not for production use!)
00:29:00,975  INFO DriverManagerConnectionProvider:65 - Hibernate connection pool size: 5
00:29:00,975  INFO DriverManagerConnectionProvider:68 - autocommit mode: true
00:29:00,975  INFO DriverManagerConnectionProvider:72 - JDBC isolation level: READ_COMMITTED
00:29:00,975  INFO DriverManagerConnectionProvider:103 - using driver: com.microsoft.sqlserver.jdbc.SQLServerDriver at URL: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor
00:29:00,975  INFO DriverManagerConnectionProvider:106 - connection properties: {user=sa, password=Kocken2, autocommit=true, release_mode=auto}
00:29:00,975 DEBUG DriverManagerConnectionProvider:132 - opening new JDBC connection
00:29:00,985 DEBUG DriverManagerConnectionProvider:138 - created connection to: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor, Isolation Level: 2

    drop table MSSQLPagingTest$Aircraft
00:29:00,985 DEBUG SchemaExport:415 - 
    drop table MSSQLPagingTest$Aircraft
00:29:00,985 DEBUG SchemaExport:400 - Unsuccessful: drop table MSSQLPagingTest$Aircraft
00:29:00,985 DEBUG SchemaExport:401 - Cannot drop the table 'MSSQLPagingTest$Aircraft', because it does not exist or you do not have permission.

    drop table hibernate_sequence
00:29:00,985 DEBUG SchemaExport:415 - 
    drop table hibernate_sequence
00:29:00,985 DEBUG SchemaExport:400 - Unsuccessful: drop table hibernate_sequence
00:29:00,985 DEBUG SchemaExport:401 - Cannot drop the table 'hibernate_sequence', because it does not exist or you do not have permission.
00:29:00,985  INFO SchemaExport:281 - schema export complete
00:29:00,985  INFO DriverManagerConnectionProvider:170 - cleaning up connection pool: jdbc:sqlserver://localhost:1434;databaseName=avinodeintegrationdb;SelectMethod=cursor
00:29:00,985 DEBUG JDBCTransaction:182 - rollback
00:29:00,985 DEBUG JDBCTransaction:223 - re-enabling autocommit
00:29:00,985 DEBUG JDBCTransaction:193 - rolled back JDBC Connection
00:29:00,985 DEBUG ConnectionManager:427 - aggressively releasing JDBC connection
00:29:00,985 DEBUG ConnectionManager:464 - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
00:29:00,985  WARN TestCase:98 - You left an open transaction! Fix your test case. For now, we are closing it for you.
00:29:00,985  WARN TestCase:104 - The EntityManager is not closed. Closing it.
