Index: src/java/org/hibernate/cfg/AnnotationConfiguration.java
===================================================================
--- src/java/org/hibernate/cfg/AnnotationConfiguration.java	(revision 14334)
+++ src/java/org/hibernate/cfg/AnnotationConfiguration.java	(working copy)
@@ -41,12 +41,8 @@
 import org.hibernate.cfg.annotations.Version;
 import org.hibernate.cfg.annotations.reflection.EJB3ReflectionManager;
 import org.hibernate.cfg.search.SearchConfiguration;
-import org.hibernate.event.PostDeleteEventListener;
-import org.hibernate.event.PostInsertEventListener;
-import org.hibernate.event.PostUpdateEventListener;
 import org.hibernate.event.PreInsertEventListener;
 import org.hibernate.event.PreUpdateEventListener;
-import org.hibernate.event.EventListeners;
 import org.hibernate.mapping.Column;
 import org.hibernate.mapping.Join;
 import org.hibernate.mapping.PersistentClass;
@@ -92,8 +88,7 @@
 	private List<CacheHolder> caches;
 	private List<Document> hbmDocuments; //user ordering matters, hence the list
 	private String precedence = null;
-	private boolean inSecondPass = false;
-	private transient ReflectionManager reflectionManager;
+    private transient ReflectionManager reflectionManager;
 	private boolean isDefaultProcessed = false;
 	private boolean isValidatorNotPresentLogged;
 
@@ -298,8 +293,8 @@
 		}
 		caches.clear();
 
-		inSecondPass = true;
-		processFkSecondPassInOrder();
+        secondPasses.startSecondPass();
+        processFkSecondPassInOrder();
 		Iterator iter = secondPasses.iterator();
 		while ( iter.hasNext() ) {
 			SecondPass sp = (SecondPass) iter.next();
@@ -320,7 +315,7 @@
 			}
 		}
 		super.secondPassCompile();
-		inSecondPass = false;
+        secondPasses.endSecondPass();
 		Iterator tables = tableUniqueConstraints.entrySet().iterator();
 		Table table;
 		Map.Entry entry;
@@ -627,7 +622,7 @@
 	@Override
 	protected void add(org.dom4j.Document doc) throws MappingException {
 		boolean ejb3Xml = "entity-mappings".equals( doc.getRootElement().getName() );
-		if ( inSecondPass ) {
+		if ( secondPasses.isInSecondPass() ) {
 			//if in second pass bypass the queueing, getExtendedQueue reuse this method
 			if ( !ejb3Xml ) super.add( doc );
 		}
