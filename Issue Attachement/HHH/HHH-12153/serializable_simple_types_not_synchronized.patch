Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/JpaUserTypeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/JpaUserTypeTest.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/JpaUserTypeTest.java	(revision )
@@ -0,0 +1,44 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+import org.hibernate.jpamodelgen.test.util.CompilationTest;
+import org.hibernate.jpamodelgen.test.util.WithClasses;
+import org.junit.Test;
+
+import static org.hibernate.jpamodelgen.test.util.TestUtil.assertMetamodelClassGeneratedFor;
+import static org.hibernate.jpamodelgen.test.util.TestUtil.assertPresenceOfFieldInMetamodelFor;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+public class JpaUserTypeTest extends CompilationTest {
+
+	@Test
+	@WithClasses({
+		ConcreteSimpleType.class,
+		ConcreteSerializableSimpleType.class,
+		EntityWithSimpleTypes.class,
+		AbstractSerializableSimpleType.class,
+		AbstractSimpleType.class
+	})
+	public void testCustomUserTypeInMetaModel() {
+		assertMetamodelClassGeneratedFor( EntityWithSimpleTypes.class );
+		assertPresenceOfFieldInMetamodelFor(
+			EntityWithSimpleTypes.class, "phoneNumber"
+		);
+
+		assertPresenceOfFieldInMetamodelFor(
+			EntityWithSimpleTypes.class, "concreteSimpleType"
+		);
+
+		assertPresenceOfFieldInMetamodelFor(
+			EntityWithSimpleTypes.class, "concreteSerializableSimpleType"
+		);
+
+		assertPresenceOfFieldInMetamodelFor(
+			EntityWithSimpleTypes.class, "concreteSerializableSimpleTypeImplementingSerializable"
+		);
+
+
+	}
+
+}
Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/EntityWithSimpleTypes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/EntityWithSimpleTypes.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/EntityWithSimpleTypes.java	(revision )
@@ -0,0 +1,24 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+import javax.persistence.Entity;
+import javax.persistence.Id;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+@Entity
+public class EntityWithSimpleTypes {
+
+	@Id
+	private Long id;
+
+	private Integer integerValue;
+
+	private ConcreteSimpleType concreteSimpleType;
+
+	private ConcreteSerializableSimpleType concreteSerializableSimpleType;
+
+	private ConcreteSerializableSimpleTypeImplementingSerializable concreteSerializableSimpleTypeImplementingSerializable;
+
+
+}
Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/AbstractSimpleType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/AbstractSimpleType.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/AbstractSimpleType.java	(revision )
@@ -0,0 +1,18 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+public abstract class AbstractSimpleType {
+
+	private Integer value;
+
+	public AbstractSimpleType(Integer value) {
+		this.value = value;
+	}
+
+	@Override
+	public String toString() {
+		return value == null ? "" : value.toString();
+	}
+}
Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSerializableSimpleType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSerializableSimpleType.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSerializableSimpleType.java	(revision )
@@ -0,0 +1,11 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+public class ConcreteSerializableSimpleType extends AbstractSerializableSimpleType{
+
+	public ConcreteSerializableSimpleType(Integer value) {
+		super( value );
+	}
+}
Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/AbstractSerializableSimpleType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/AbstractSerializableSimpleType.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/AbstractSerializableSimpleType.java	(revision )
@@ -0,0 +1,22 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+import java.io.Serializable;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+public abstract class AbstractSerializableSimpleType implements Serializable {
+
+	private Integer value;
+
+	public AbstractSerializableSimpleType(Integer value) {
+		this.value = value;
+	}
+
+	@Override
+	public String toString() {
+		return value == null ? "" : value.toString();
+	}
+
+
+}
Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSimpleType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSimpleType.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSimpleType.java	(revision )
@@ -0,0 +1,11 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+public class ConcreteSimpleType extends AbstractSimpleType {
+
+	public ConcreteSimpleType(Integer value) {
+		super( value );
+	}
+}
Index: ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSerializableSimpleTypeImplementingSerializable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSerializableSimpleTypeImplementingSerializable.java	(revision )
+++ ../../../projects/hibernate-orm/hibernate-orm/tooling/metamodel-generator/src/test/java/org/hibernate/jpamodelgen/test/usertype/jpa/ConcreteSerializableSimpleTypeImplementingSerializable.java	(revision )
@@ -0,0 +1,13 @@
+package org.hibernate.jpamodelgen.test.usertype.jpa;
+
+import java.io.Serializable;
+
+/**
+ * Created by fip on 06/12/2017.
+ */
+public class ConcreteSerializableSimpleTypeImplementingSerializable extends ConcreteSerializableSimpleType implements Serializable{
+
+	public ConcreteSerializableSimpleTypeImplementingSerializable(Integer value) {
+		super( value );
+	}
+}
