package de.laliluna.library;



/**
 * AbstractBook generated by MyEclipse - Hibernate Tools
 */

public abstract class AbstractBook  implements java.io.Serializable {


	 /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer id;

    /** The value of the simple title property. */
    private java.lang.String title;

    /** The value of the simple author property. */
    private java.lang.String author;

    /** The value of the simple borrowallowed property. */
    private boolean borrowallowed;

    /**
     * Simple constructor of AbstractBook instances.
     */
    public AbstractBook()
    {
    }

    /**
     * Constructor of AbstractBook instances given a simple primary key.
     * @param id
     */
    public AbstractBook(java.lang.Integer id)
    {
        this.setId(id);
    }
   
    // Property accessors

    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    public String getAuthor() {
        return this.author;
    }
    
    public void setAuthor(String author) {
        this.author = author;
    }

    /**
     * Return the value of the borrowallowed column.
     * @return java.lang.Byte
     */
    public boolean getBorrowallowed()
    {
        return this.borrowallowed;
    }

    /**
     * Set the value of the borrowallowed column.
     * @param borrowallowed
     */
    public void setBorrowallowed(boolean borrowallowed)
    {
        this.borrowallowed = borrowallowed;
    }
    
    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Book))
            return false;
        Book that = (Book) rhs;
        if (this.getId() == null || that.getId() == null)
            return false;
        return (this.getId().equals(that.getId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int idValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + idValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
   








}