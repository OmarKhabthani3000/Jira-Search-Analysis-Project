diff -Naur test.old/org/hibernate/test/id/CachingSequenceGeneratorTest.java test/org/hibernate/test/id/CachingSequenceGeneratorTest.java
--- test.old/org/hibernate/test/id/CachingSequenceGeneratorTest.java	1969-12-31 16:00:00.000000000 -0800
+++ test/org/hibernate/test/id/CachingSequenceGeneratorTest.java	2005-06-13 00:56:20.000000000 -0700
@@ -0,0 +1,63 @@
+package org.hibernate.test.id;
+
+import junit.framework.Test;
+import junit.framework.TestCase;
+import junit.framework.TestSuite;
+import org.hibernate.engine.SessionImplementor;
+import org.hibernate.id.CachingSequenceGenerator;
+import org.hibernate.type.LongType;
+import org.hibernate.dialect.Oracle9Dialect;
+
+import java.util.Properties;
+
+/**
+ *
+ * @author Binil Thomas
+ */
+public class CachingSequenceGeneratorTest extends TestCase {
+    public CachingSequenceGeneratorTest(String str) {
+        super(str);
+    }
+
+    public static Test suite() throws Exception {
+        TestSuite suite = new TestSuite();
+
+        suite.addTest(new TestSuite(CachingSequenceGeneratorTest.class));
+        return suite;
+    }
+
+    public void setUp() {
+    }
+
+    public void tearDown() {
+    }
+
+    public static void main(String[] args) {
+        junit.textui.TestRunner.run(new TestSuite(CachingSequenceGeneratorTest.class));
+    }
+
+    public void testSequenceGeneration() {
+        CachingSequenceGenerator seq = new CachingSequenceGenerator() {
+            private int i = 0;
+
+            protected long getNextValueFromSequence(SessionImplementor session, Object obj) {
+                int ret = i;
+                i += 3;
+                return ret;
+            }
+        };
+
+        Properties testProps = new Properties();
+        testProps.setProperty("increment", "3");
+        try {
+            seq.configure(new LongType(), testProps, new Oracle9Dialect());
+            assertEquals(new Long(0), seq.generate(null, null));
+            assertEquals(new Long(1), seq.generate(null, null));
+            assertEquals(new Long(2), seq.generate(null, null));
+            assertEquals(new Long(3), seq.generate(null, null));
+            assertEquals(new Long(4), seq.generate(null, null));
+        } catch (Exception e) {
+            fail();
+        }
+    }
+}
