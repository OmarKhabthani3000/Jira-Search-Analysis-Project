diff -aburN hibernate-3.2/src/org/hibernate/action/EntityDeleteAction.java hibernate-3.2.new/src/org/hibernate/action/EntityDeleteAction.java
--- hibernate-3.2/src/org/hibernate/action/EntityDeleteAction.java	2006-11-01 23:53:04.000000000 +0100
+++ hibernate-3.2.new/src/org/hibernate/action/EntityDeleteAction.java	2007-11-01 09:23:31.000000000 +0100
@@ -104,7 +104,7 @@
 				.getPreDeleteEventListeners();
 		boolean veto = false;
 		if (preListeners.length>0) {
-			PreDeleteEvent preEvent = new PreDeleteEvent( getInstance(), getId(), state, getPersister() );
+			PreDeleteEvent preEvent = new PreDeleteEvent( getInstance(), getId(), state, getPersister() ,(EventSource) getSession() );
 			for ( int i = 0; i < preListeners.length; i++ ) {
 				veto = preListeners[i].onPreDelete(preEvent) || veto;
 			}
diff -aburN hibernate-3.2/src/org/hibernate/action/EntityIdentityInsertAction.java hibernate-3.2.new/src/org/hibernate/action/EntityIdentityInsertAction.java
--- hibernate-3.2/src/org/hibernate/action/EntityIdentityInsertAction.java	2006-11-01 23:53:04.000000000 +0100
+++ hibernate-3.2.new/src/org/hibernate/action/EntityIdentityInsertAction.java	2007-11-01 09:24:08.000000000 +0100
@@ -114,7 +114,7 @@
 				.getPreInsertEventListeners();
 		boolean veto = false;
 		if (preListeners.length>0) {
-			PreInsertEvent preEvent = new PreInsertEvent( getInstance(), null, state, getPersister(), getSession() );
+			PreInsertEvent preEvent = new PreInsertEvent( getInstance(), null, state, getPersister(), (EventSource)getSession() );
 			for ( int i = 0; i < preListeners.length; i++ ) {
 				veto = preListeners[i].onPreInsert(preEvent) || veto;
 			}
diff -aburN hibernate-3.2/src/org/hibernate/action/EntityInsertAction.java hibernate-3.2.new/src/org/hibernate/action/EntityInsertAction.java
--- hibernate-3.2/src/org/hibernate/action/EntityInsertAction.java	2007-04-11 16:25:13.000000000 +0200
+++ hibernate-3.2.new/src/org/hibernate/action/EntityInsertAction.java	2007-11-01 09:24:22.000000000 +0100
@@ -151,7 +151,7 @@
 				.getPreInsertEventListeners();
 		boolean veto = false;
 		if (preListeners.length>0) {
-			PreInsertEvent preEvent = new PreInsertEvent( getInstance(), getId(), state, getPersister(), getSession() );
+			PreInsertEvent preEvent = new PreInsertEvent( getInstance(), getId(), state, getPersister(), (EventSource)getSession() );
 			for ( int i = 0; i < preListeners.length; i++ ) {
 				veto = preListeners[i].onPreInsert(preEvent) || veto;
 			}
diff -aburN hibernate-3.2/src/org/hibernate/action/EntityUpdateAction.java hibernate-3.2.new/src/org/hibernate/action/EntityUpdateAction.java
--- hibernate-3.2/src/org/hibernate/action/EntityUpdateAction.java	2007-01-20 20:16:38.000000000 +0100
+++ hibernate-3.2.new/src/org/hibernate/action/EntityUpdateAction.java	2007-11-01 09:24:38.000000000 +0100
@@ -211,7 +211,7 @@
 					state, 
 					previousState, 
 					getPersister(),
-					getSession()
+					(EventSource)getSession()
 				);
 			for ( int i = 0; i < preListeners.length; i++ ) {
 				veto = preListeners[i].onPreUpdate(preEvent) || veto;
diff -aburN hibernate-3.2/src/org/hibernate/event/PreDeleteEvent.java hibernate-3.2.new/src/org/hibernate/event/PreDeleteEvent.java
--- hibernate-3.2/src/org/hibernate/event/PreDeleteEvent.java	2005-07-21 00:48:22.000000000 +0200
+++ hibernate-3.2.new/src/org/hibernate/event/PreDeleteEvent.java	2007-11-01 09:21:34.000000000 +0100
@@ -10,7 +10,7 @@
  * 
  * @author Gavin King
  */
-public class PreDeleteEvent {
+public class PreDeleteEvent extends AbstractEvent {
 	private Object entity;
 	private EntityPersister persister;
 	private Serializable id;
@@ -33,8 +33,10 @@
 			Object entity, 
 			Serializable id,
 			Object[] deletedState,
-			EntityPersister persister
+			EntityPersister persister,
+			EventSource source
 	) {
+	    super(source);
 		this.entity = entity;
 		this.persister = persister;
 		this.id = id;
diff -aburN hibernate-3.2/src/org/hibernate/event/PreInsertEvent.java hibernate-3.2.new/src/org/hibernate/event/PreInsertEvent.java
--- hibernate-3.2/src/org/hibernate/event/PreInsertEvent.java	2005-08-11 21:37:08.000000000 +0200
+++ hibernate-3.2.new/src/org/hibernate/event/PreInsertEvent.java	2007-11-01 09:21:00.000000000 +0100
@@ -4,28 +4,26 @@
 import java.io.Serializable;
 
 import org.hibernate.persister.entity.EntityPersister;
-import org.hibernate.engine.SessionImplementor;
 
 /**
  * Occurs before inserting an item in the datastore
  * 
  * @author Gavin King
  */
-public class PreInsertEvent {
+public class PreInsertEvent extends AbstractEvent {
 	private Object entity;
 	private EntityPersister persister;
 	private Object[] state;
 	private Serializable id;
-	private SessionImplementor source;
 
 	public PreInsertEvent(
 			Object entity,
 			Serializable id,
 			Object[] state,
 			EntityPersister persister,
-			SessionImplementor source
+			EventSource source
 	) {
-		this.source = source;
+		super(source);
 		this.entity = entity;
 		this.id = id;
 		this.state = state;
@@ -44,7 +42,4 @@
 	public Object[] getState() {
 		return state;
 	}
-	public SessionImplementor getSource() {
-		return source;
-	}
 }
diff -aburN hibernate-3.2/src/org/hibernate/event/PreUpdateEvent.java hibernate-3.2.new/src/org/hibernate/event/PreUpdateEvent.java
--- hibernate-3.2/src/org/hibernate/event/PreUpdateEvent.java	2005-08-11 21:37:08.000000000 +0200
+++ hibernate-3.2.new/src/org/hibernate/event/PreUpdateEvent.java	2007-11-01 09:22:41.000000000 +0100
@@ -4,20 +4,18 @@
 import java.io.Serializable;
 
 import org.hibernate.persister.entity.EntityPersister;
-import org.hibernate.engine.SessionImplementor;
 
 /**
  * Occurs before updating the datastore
  * 
  * @author Gavin King
  */
-public class PreUpdateEvent {
+public class PreUpdateEvent extends AbstractEvent {
 	private Object entity;
 	private EntityPersister persister;
 	private Object[] state;
 	private Object[] oldState;
 	private Serializable id;
-	private SessionImplementor source;
 
 	public PreUpdateEvent(
 			Object entity,
@@ -25,9 +23,9 @@
 			Object[] state,
 			Object[] oldState,
 			EntityPersister persister,
-			SessionImplementor source
+			EventSource source
 	) {
-		this.source = source;
+		super(source);
 		this.entity = entity;
 		this.id = id;
 		this.state = state;
@@ -50,7 +48,4 @@
 	public Object[] getState() {
 		return state;
 	}
-	public SessionImplementor getSource() {
-		return source;
-	}
 }
