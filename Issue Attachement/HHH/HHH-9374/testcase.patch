Index: hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/graphs/EntityGraphTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/graphs/EntityGraphTest.java	(revision b6a835240667453519d2623d326de9d351b66fb4)
+++ hibernate-entitymanager/src/test/java/org/hibernate/jpa/test/graphs/EntityGraphTest.java	(revision )
@@ -130,6 +130,36 @@
    	}
 
     @Test
+    public void loadWithCollectionFunctionInQuery() {
+        EntityManager em = getOrCreateEntityManager();
+        em.getTransaction().begin();
+
+        Bar bar = new Bar();
+        em.persist( bar );
+
+        Foo foo = new Foo();
+        foo.bar = bar;
+        bar.foos.add(foo);
+        em.persist( foo );
+
+        em.getTransaction().commit();
+        em.clear();
+
+        em.getTransaction().begin();
+
+        EntityGraph<Bar> barGraph = em.createEntityGraph( Bar.class );
+        barGraph.addAttributeNodes("foos");
+
+        Bar result = em.createQuery("SELECT bar FROM EntityGraphTest$Bar bar WHERE NOT bar.foos IS EMPTY", Bar.class)
+                .setHint("javax.persistence.loadgraph", barGraph).getSingleResult();
+
+        assertTrue( Hibernate.isInitialized( result ) );
+        assertTrue( Hibernate.isInitialized( result.foos ) );
+
+        em.getTransaction().commit();
+        em.close();
+    }
+    @Test
    	public void loadInverseCollection() {
    		EntityManager em = getOrCreateEntityManager();
    		em.getTransaction().begin();
