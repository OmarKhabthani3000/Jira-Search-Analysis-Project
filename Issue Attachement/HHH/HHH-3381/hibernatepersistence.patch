Index: src/java/org/hibernate/ejb/HibernatePersistence.java
===================================================================
--- src/java/org/hibernate/ejb/HibernatePersistence.java	(revision 14897)
+++ src/java/org/hibernate/ejb/HibernatePersistence.java	(working copy)
@@ -121,13 +121,13 @@
 	 * @return initialized EntityManagerFactory
 	 */
 	public EntityManagerFactory createEntityManagerFactory(String persistenceUnitName, Map overridenProperties) {
-		Ejb3Configuration cfg = new Ejb3Configuration();
+		Ejb3Configuration cfg = createEjb3Configuration();
 		Ejb3Configuration configured = cfg.configure( persistenceUnitName, overridenProperties );
 		return configured != null ? configured.buildEntityManagerFactory() : null;
 	}
 
 	public EntityManagerFactory createContainerEntityManagerFactory(PersistenceUnitInfo info, Map map) {
-		Ejb3Configuration cfg = new Ejb3Configuration();
+		Ejb3Configuration cfg = createEjb3Configuration();
 		Ejb3Configuration configured = cfg.configure( info, map );
 		return configured != null ? configured.buildEntityManagerFactory() : null;
 	}
@@ -138,8 +138,17 @@
 	 */
 	// This is used directly by JBoss so don't remove until further notice.  bill@jboss.org
 	public EntityManagerFactory createEntityManagerFactory(Map properties) {
-		Ejb3Configuration cfg = new Ejb3Configuration();
+		Ejb3Configuration cfg = createEjb3Configuration();
 		return cfg.createEntityManagerFactory( properties );
 	}
 
-}
\ No newline at end of file
+	/**
+	 * Provides an extension point for programatically changing the Hibernate configuration.
+	 *
+	 * @return  an instantiated Ejb3Configuration
+	 */
+	protected Ejb3Configuration createEjb3Configuration() {
+		return new Ejb3Configuration();
+	}
+
+}
