Index: core/src/main/java/org/hibernate/tuple/entity/EntityMetamodel.java
===================================================================
--- core/src/main/java/org/hibernate/tuple/entity/EntityMetamodel.java	(revision 19714)
+++ core/src/main/java/org/hibernate/tuple/entity/EntityMetamodel.java	(working copy)
@@ -121,7 +121,7 @@
 	private final boolean inherited;
 	private final boolean hasSubclasses;
 	private final Set subclassEntityNames = new HashSet();
-	private final Map entityNameByInheritenceClassNameMap = new HashMap();
+	private final Map entityNameByInheritenceClassMap = new HashMap();
 
 	private final EntityEntityModeToTuplizerMapping tuplizerMapping;
 
@@ -311,11 +311,11 @@
 		subclassEntityNames.add( name );
 
 		if ( persistentClass.hasPojoRepresentation() ) {
-			entityNameByInheritenceClassNameMap.put( persistentClass.getMappedClass(), persistentClass.getEntityName() );
+			entityNameByInheritenceClassMap.put( persistentClass.getMappedClass(), persistentClass.getEntityName() );
 			iter = persistentClass.getSubclassIterator();
 			while ( iter.hasNext() ) {
 				final PersistentClass pc = ( PersistentClass ) iter.next();
-				entityNameByInheritenceClassNameMap.put( pc.getMappedClass(), pc.getEntityName() );
+				entityNameByInheritenceClassMap.put( pc.getMappedClass(), pc.getEntityName() );
 			}
 		}
 
@@ -575,7 +575,7 @@
 	 * @return The mapped entity-name, or null if no such mapping was found.
 	 */
 	public String findEntityNameByEntityClass(Class inheritenceClass) {
-		return ( String ) entityNameByInheritenceClassNameMap.get( inheritenceClass.getName() );
+		return ( String ) entityNameByInheritenceClassMap.get( inheritenceClass );
 	}
 
 	public String toString() {
