Index: src/org/hibernate/criterion/Restrictions.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate3/src/org/hibernate/criterion/Restrictions.java,v
retrieving revision 1.7
diff -u -r1.7 Restrictions.java
--- src/org/hibernate/criterion/Restrictions.java	12 Feb 2005 07:19:14 -0000	1.7
+++ src/org/hibernate/criterion/Restrictions.java	2 May 2005 18:59:45 -0000
@@ -320,10 +320,45 @@
 	}
 	
 	/**
-	 * Constrain a collection valued property by size
+	 * Constrain a collection valued property by size (equals)
 	 */
 	public static Criterion sizeEq(String propertyName, int size) {
-		return new SizeExpression(propertyName, size);
+		return new SizeExpression(propertyName, size, "=");
 	}
+    
+    /**
+     * Constrain a collection valued property by size (not equals)
+     */
+    public static Criterion sizeNe(String propertyName, int size) {
+        return new SizeExpression(propertyName, size, "!=");
+    }
+    
+    /**
+     * Constrain a collection valued property by size (lesser than)
+     */
+    public static Criterion sizeLt(String propertyName, int size) {
+        return new SizeExpression(propertyName, size, "<");
+    }
 		
+    /**
+     * Constrain a collection valued property by size (lesser or equals)
+     */
+    public static Criterion sizeLe(String propertyName, int size) {
+        return new SizeExpression(propertyName, size, "<=");
+    }
+    
+    /**
+     * Constrain a collection valued property by size (greater than)
+     */
+    public static Criterion sizeGt(String propertyName, int size) {
+        return new SizeExpression(propertyName, size, ">");
+    }
+        
+    /**
+     * Constrain a collection valued property by size (greater or equals)
+     */
+    public static Criterion sizeGe(String propertyName, int size) {
+        return new SizeExpression(propertyName, size, ">=");
+    }
+    
 }
Index: src/org/hibernate/criterion/SizeExpression.java
===================================================================
RCS file: /cvsroot/hibernate/Hibernate3/src/org/hibernate/criterion/SizeExpression.java,v
retrieving revision 1.10
diff -u -r1.10 SizeExpression.java
--- src/org/hibernate/criterion/SizeExpression.java	18 Feb 2005 03:47:27 -0000	1.10
+++ src/org/hibernate/criterion/SizeExpression.java	2 May 2005 18:59:45 -0000
@@ -18,10 +18,27 @@
 	
 	private final String propertyName;
 	private final int size;
+    private final String op;
 	
-	protected SizeExpression(String propertyName, int size) {
+    /**
+     * Creates a new SizeExpression with operator equals ("=").
+     * @param propertyName
+     * @param size
+     */
+    protected SizeExpression(String propertyName, int size) {
+        this(propertyName, size, "=");
+    }
+    
+    /**
+     * Creates a new SizeExpression with the given operator.
+     * @param propertyName
+     * @param size
+     * @param op Something like =, >=, <= 
+     */
+	protected SizeExpression(String propertyName, int size, String op) {
 		this.propertyName = propertyName;
 		this.size = size;
+        this.op = op;
 	}
 
 	public String toString() {
@@ -44,6 +61,7 @@
 			new ConditionFragment()
 				.setTableAlias( criteriaQuery.getSQLAlias(criteria, propertyName) )
 				.setCondition(pk, fk)
+                .setOp(op)
 				.toFragmentString() +
 			")";
 	}
